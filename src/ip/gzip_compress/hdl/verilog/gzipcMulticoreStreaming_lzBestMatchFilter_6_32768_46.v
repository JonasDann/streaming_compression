// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module gzipcMulticoreStreaming_lzBestMatchFilter_6_32768_46 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        compressedStream_dout,
        compressedStream_num_data_valid,
        compressedStream_fifo_cap,
        compressedStream_empty_n,
        compressedStream_read,
        compressedStream1_din,
        compressedStream1_num_data_valid,
        compressedStream1_fifo_cap,
        compressedStream1_full_n,
        compressedStream1_write
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [32:0] compressedStream_dout;
input  [2:0] compressedStream_num_data_valid;
input  [2:0] compressedStream_fifo_cap;
input   compressedStream_empty_n;
output   compressedStream_read;
output  [32:0] compressedStream1_din;
input  [2:0] compressedStream1_num_data_valid;
input  [2:0] compressedStream1_fifo_cap;
input   compressedStream1_full_n;
output   compressedStream1_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg compressedStream_read;
reg[32:0] compressedStream1_din;
reg compressedStream1_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    compressedStream_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    compressedStream1_blk_n;
wire   [0:0] nextVal_strobe_fu_67_p3;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [31:0] trunc_ln370_fu_75_p1;
reg   [31:0] trunc_ln370_reg_100;
reg    ap_block_state2;
reg   [32:0] compressedStream_read_6_reg_105;
wire    grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start;
wire    grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_done;
wire    grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_idle;
wire    grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_ready;
wire    grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream_read;
wire   [32:0] grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_din;
wire    grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_write;
wire   [31:0] grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out;
wire    grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out_ap_vld;
reg    grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg;
reg   [6:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    compressedStream_read_local;
reg   [32:0] compressedStream1_din_local;
wire   [32:0] tmp_s_fu_82_p3;
reg    compressedStream1_write_local;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg = 1'b0;
end

gzipcMulticoreStreaming_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start),
    .ap_done(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_done),
    .ap_idle(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_idle),
    .ap_ready(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_ready),
    .compressedStream_dout(compressedStream_dout),
    .compressedStream_num_data_valid(3'd0),
    .compressedStream_fifo_cap(3'd0),
    .compressedStream_empty_n(compressedStream_empty_n),
    .compressedStream_read(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream_read),
    .compressedStream1_din(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_din),
    .compressedStream1_num_data_valid(3'd0),
    .compressedStream1_fifo_cap(3'd0),
    .compressedStream1_full_n(compressedStream1_full_n),
    .compressedStream1_write(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_write),
    .empty_66(trunc_ln370_reg_100),
    .empty(compressedStream_read_6_reg_105),
    .phi_ln366_out(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out),
    .phi_ln366_out_ap_vld(grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state2) & (nextVal_strobe_fu_67_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_NS_fsm_state4))) begin
            grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg <= 1'b1;
        end else if ((grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_ready == 1'b1)) begin
            grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((compressedStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        compressedStream_read_6_reg_105 <= compressedStream_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln370_reg_100 <= trunc_ln370_fu_75_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((compressedStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((compressedStream1_full_n == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((compressedStream1_full_n == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2) & (nextVal_strobe_fu_67_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((nextVal_strobe_fu_67_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        compressedStream1_blk_n = compressedStream1_full_n;
    end else begin
        compressedStream1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        compressedStream1_din = grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_din;
    end else begin
        compressedStream1_din = compressedStream1_din_local;
    end
end

always @ (*) begin
    if (((compressedStream1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        compressedStream1_din_local = tmp_s_fu_82_p3;
    end else if ((((1'b0 == ap_block_state2) & (nextVal_strobe_fu_67_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((compressedStream1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        compressedStream1_din_local = 33'd0;
    end else begin
        compressedStream1_din_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        compressedStream1_write = grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_write;
    end else begin
        compressedStream1_write = compressedStream1_write_local;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state2) & (nextVal_strobe_fu_67_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((compressedStream1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((compressedStream1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        compressedStream1_write_local = 1'b1;
    end else begin
        compressedStream1_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        compressedStream_blk_n = compressedStream_empty_n;
    end else begin
        compressedStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        compressedStream_read = grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_compressedStream_read;
    end else begin
        compressedStream_read = compressedStream_read_local;
    end
end

always @ (*) begin
    if ((((compressedStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b0 == ap_block_state2) & (1'b1 == ap_CS_fsm_state2)))) begin
        compressedStream_read_local = 1'b1;
    end else begin
        compressedStream_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2) & (nextVal_strobe_fu_67_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2) & (nextVal_strobe_fu_67_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == ap_block_state2) & (nextVal_strobe_fu_67_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((compressedStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((compressedStream1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((compressedStream1_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((compressedStream_empty_n == 1'b0) | ((nextVal_strobe_fu_67_p3 == 1'd0) & (compressedStream1_full_n == 1'b0)));
end

assign ap_ready = internal_ap_ready;

assign grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start = grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg;

assign nextVal_strobe_fu_67_p3 = compressedStream_dout[32'd32];

assign start_out = real_start;

assign tmp_s_fu_82_p3 = {{1'd1}, {grp_lzBestMatchFilter_6_32768_46_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out}};

assign trunc_ln370_fu_75_p1 = compressedStream_dout[31:0];

endmodule //gzipcMulticoreStreaming_lzBestMatchFilter_6_32768_46

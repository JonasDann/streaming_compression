// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module gzipcMulticoreStreaming_lzBooster_255_4096_16384_64_62_Pipeline_lz_booster (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        compressedStream1_dout,
        compressedStream1_num_data_valid,
        compressedStream1_fifo_cap,
        compressedStream1_empty_n,
        compressedStream1_read,
        lclBufStream_dout,
        lclBufStream_empty_n,
        lclBufStream_read,
        lclBufStream_din,
        lclBufStream_full_n,
        lclBufStream_write,
        boosterStream_din,
        boosterStream_num_data_valid,
        boosterStream_fifo_cap,
        boosterStream_full_n,
        boosterStream_write,
        p_phi_reload,
        empty,
        outValue,
        outValue_4_out,
        outValue_4_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [32:0] compressedStream1_dout;
input  [2:0] compressedStream1_num_data_valid;
input  [2:0] compressedStream1_fifo_cap;
input   compressedStream1_empty_n;
output   compressedStream1_read;
input  [31:0] lclBufStream_dout;
input   lclBufStream_empty_n;
output   lclBufStream_read;
output  [31:0] lclBufStream_din;
input   lclBufStream_full_n;
output   lclBufStream_write;
output  [32:0] boosterStream_din;
input  [2:0] boosterStream_num_data_valid;
input  [2:0] boosterStream_fifo_cap;
input   boosterStream_full_n;
output   boosterStream_write;
input  [31:0] p_phi_reload;
input  [0:0] empty;
input  [31:0] outValue;
output  [31:0] outValue_4_out;
output   outValue_4_out_ap_vld;

reg ap_idle;
reg outValue_4_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg   [0:0] ap_phi_mux_nextVal_strobe_phi_fu_227_p4;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] nextVal_strobe_reg_224;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] nextVal_strobe_reg_224_pp0_iter3_reg;
reg   [0:0] icmp_ln496_reg_781;
reg   [0:0] and_ln498_1_reg_790;
reg   [0:0] outFlag_reg_794;
reg    ap_predicate_op127_write_state5;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    lclBufStream_i_blk_n;
wire    ap_block_pp0_stage0;
reg    lclBufStream_o_blk_n;
reg    compressedStream1_blk_n;
reg    boosterStream_blk_n;
reg   [0:0] nextVal_strobe_reg_224_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] nextVal_strobe_reg_224_pp0_iter2_reg;
wire   [31:0] trunc_ln479_fu_313_p1;
reg   [31:0] trunc_ln479_reg_734;
reg   [0:0] tmp_219_reg_739;
reg   [31:0] outValue_3_reg_744;
reg   [31:0] outValue_3_reg_744_pp0_iter2_reg;
wire   [7:0] tCh_fu_329_p1;
reg   [7:0] tCh_reg_751;
reg   [7:0] tCh_reg_751_pp0_iter2_reg;
reg   [7:0] tLen_reg_757;
reg   [7:0] tLen_reg_757_pp0_iter2_reg;
reg   [15:0] tOffset_reg_763;
reg   [15:0] tOffset_reg_763_pp0_iter2_reg;
wire   [0:0] boostFlag_fu_363_p2;
reg   [0:0] boostFlag_reg_768;
reg   [0:0] boostFlag_reg_768_pp0_iter2_reg;
reg   [31:0] iIdx_11_reg_775;
wire   [0:0] icmp_ln496_fu_409_p2;
wire   [0:0] and_ln498_1_fu_454_p2;
wire   [0:0] outFlag_fu_472_p2;
wire   [0:0] icmp_ln508_fu_477_p2;
reg   [0:0] icmp_ln508_reg_798;
reg   [31:0] outStreamValue_data_load_4_reg_807;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [11:0] local_mem_address0;
wire   [11:0] local_mem_address1;
wire   [7:0] local_mem_q1;
wire    ap_loop_init;
reg   [8:0] ap_phi_mux_skip_len_416_phi_fu_238_p4;
wire  signed [8:0] skip_len_8_fu_496_p3;
wire   [8:0] ap_phi_reg_pp0_iter3_skip_len_416_reg_235;
reg   [0:0] ap_phi_mux_matchFlag_410_phi_fu_248_p4;
wire   [0:0] ap_phi_reg_pp0_iter3_matchFlag_410_reg_245;
reg   [7:0] ap_phi_mux_empty_254_phi_fu_258_p10;
wire   [7:0] ap_phi_reg_pp0_iter4_empty_254_reg_255;
wire   [63:0] zext_ln493_fu_386_p1;
wire   [63:0] zext_ln520_fu_421_p1;
wire   [63:0] zext_ln520_2_fu_482_p1;
wire   [63:0] zext_ln520_1_fu_615_p1;
reg   [7:0] match_ch_fu_100;
reg   [7:0] ap_sig_allocacmp_match_ch_load;
reg   [15:0] skip_len_fu_104;
wire   [15:0] skip_len_6_fu_415_p2;
wire  signed [15:0] sext_ln449_fu_504_p1;
wire  signed [15:0] sext_ln522_fu_555_p1;
reg   [31:0] iIdx_fu_108;
wire   [31:0] iIdx_12_fu_376_p2;
reg   [31:0] nextVal_data_fu_112;
reg   [31:0] match_loc_fu_116;
wire   [31:0] match_loc_7_fu_463_p2;
wire   [31:0] match_loc_6_fu_589_p2;
reg   [31:0] match_len_fu_120;
wire   [31:0] match_len_4_fu_583_p2;
reg   [0:0] matchFlag_fu_124;
reg   [31:0] outStreamValue_data_fu_128;
wire   [31:0] outValue_4_fu_603_p5;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    compressedStream1_read_local;
reg    lclBufStream_read_local;
reg    ap_block_pp0_stage0_01001;
reg    lclBufStream_write_local;
wire   [32:0] tmp_s_fu_645_p3;
reg    boosterStream_write_local;
reg    local_mem_we0_local;
reg    local_mem_ce0_local;
reg    local_mem_ce1_local;
reg   [11:0] local_mem_address1_local;
wire   [3:0] tmp_220_fu_353_p4;
wire   [11:0] empty_256_fu_382_p1;
wire   [11:0] empty_255_fu_405_p1;
wire   [0:0] icmp_ln498_1_fu_443_p2;
wire   [0:0] icmp_ln498_fu_437_p2;
wire   [0:0] and_ln498_fu_448_p2;
wire   [31:0] zext_ln504_fu_460_p1;
wire   [11:0] trunc_ln441_2_fu_468_p1;
wire   [8:0] zext_ln514_fu_487_p1;
wire   [8:0] skip_len_7_fu_490_p2;
wire   [7:0] trunc_ln501_fu_599_p1;
wire   [11:0] trunc_ln441_fu_595_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_51;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_predicate_op64_load_state4;
reg    ap_enable_operation_64;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_predicate_op121_load_state5;
reg    ap_enable_operation_121;
reg    ap_enable_state5_pp0_iter4_stage0;
reg    ap_predicate_op80_load_state4;
reg    ap_enable_operation_80;
reg    ap_predicate_op123_load_state5;
reg    ap_enable_operation_123;
reg    ap_predicate_op115_load_state4;
reg    ap_enable_operation_115;
reg    ap_predicate_op129_load_state5;
reg    ap_enable_operation_129;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_328;
reg    ap_condition_616;
reg    ap_condition_620;
reg    ap_condition_628;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 match_ch_fu_100 = 8'd0;
#0 skip_len_fu_104 = 16'd0;
#0 iIdx_fu_108 = 32'd0;
#0 nextVal_data_fu_112 = 32'd0;
#0 match_loc_fu_116 = 32'd0;
#0 match_len_fu_120 = 32'd0;
#0 matchFlag_fu_124 = 1'd0;
#0 outStreamValue_data_fu_128 = 32'd0;
#0 ap_done_reg = 1'b0;
end

gzipcMulticoreStreaming_lzBooster_255_4096_16384_64_Pipeline_lz_booster_local_mem_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 4096 ),
    .AddressWidth( 12 ))
local_mem_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_mem_address0),
    .ce0(local_mem_ce0_local),
    .we0(local_mem_we0_local),
    .d0(tCh_reg_751),
    .address1(local_mem_address1),
    .ce1(local_mem_ce1_local),
    .q1(local_mem_q1)
);

gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            iIdx_fu_108 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (nextVal_strobe_reg_224_pp0_iter1_reg == 1'd1))) begin
            iIdx_fu_108 <= iIdx_12_fu_376_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        matchFlag_fu_124 <= 1'd1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_472_p2 == 1'd1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        matchFlag_fu_124 <= ap_phi_mux_matchFlag_410_phi_fu_248_p4;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd1) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        matchFlag_fu_124 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd0) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        matchFlag_fu_124 <= boostFlag_reg_768_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        match_len_fu_120 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        match_len_fu_120 <= match_len_4_fu_583_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd1) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_472_p2 == 1'd1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd0) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)))) begin
        match_len_fu_120 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        match_loc_fu_116 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        match_loc_fu_116 <= match_loc_6_fu_589_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd1) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_472_p2 == 1'd1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd0) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)))) begin
        match_loc_fu_116 <= match_loc_7_fu_463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            nextVal_data_fu_112 <= p_phi_reload;
        end else if (((nextVal_strobe_reg_224 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            nextVal_data_fu_112 <= trunc_ln479_reg_734;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_628)) begin
            nextVal_strobe_reg_224 <= tmp_219_reg_739;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            nextVal_strobe_reg_224 <= empty;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outStreamValue_data_fu_128 <= outValue;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        outStreamValue_data_fu_128 <= outValue_4_fu_603_p5;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd1) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_472_p2 == 1'd1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd0) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)))) begin
        outStreamValue_data_fu_128 <= outValue_3_reg_744_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_472_p2 == 1'd1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        skip_len_fu_104 <= sext_ln522_fu_555_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd1) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        skip_len_fu_104 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln508_fu_477_p2 == 1'd0) & (outFlag_fu_472_p2 == 1'd0) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        skip_len_fu_104 <= sext_ln449_fu_504_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd0) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1))) begin
        skip_len_fu_104 <= skip_len_6_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln498_1_reg_790 <= and_ln498_1_fu_454_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        boostFlag_reg_768_pp0_iter2_reg <= boostFlag_reg_768;
        iIdx_11_reg_775 <= iIdx_fu_108;
        icmp_ln496_reg_781 <= icmp_ln496_fu_409_p2;
        icmp_ln508_reg_798 <= icmp_ln508_fu_477_p2;
        nextVal_strobe_reg_224_pp0_iter2_reg <= nextVal_strobe_reg_224_pp0_iter1_reg;
        nextVal_strobe_reg_224_pp0_iter3_reg <= nextVal_strobe_reg_224_pp0_iter2_reg;
        outFlag_reg_794 <= outFlag_fu_472_p2;
        outValue_3_reg_744_pp0_iter2_reg <= outValue_3_reg_744;
        tCh_reg_751_pp0_iter2_reg <= tCh_reg_751;
        tLen_reg_757_pp0_iter2_reg <= tLen_reg_757;
        tOffset_reg_763_pp0_iter2_reg <= tOffset_reg_763;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        boostFlag_reg_768 <= boostFlag_fu_363_p2;
        nextVal_strobe_reg_224_pp0_iter1_reg <= nextVal_strobe_reg_224;
        outValue_3_reg_744 <= lclBufStream_dout;
        tCh_reg_751 <= tCh_fu_329_p1;
        tLen_reg_757 <= {{lclBufStream_dout[15:8]}};
        tOffset_reg_763 <= {{lclBufStream_dout[31:16]}};
        trunc_ln479_reg_734 <= trunc_ln479_fu_313_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        match_ch_fu_100 <= ap_phi_mux_empty_254_phi_fu_258_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        outStreamValue_data_load_4_reg_807 <= outStreamValue_data_fu_128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_219_reg_739 <= compressedStream1_dout[32'd32];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_phi_mux_nextVal_strobe_phi_fu_227_p4 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((outFlag_reg_794 == 1'd1) & (icmp_ln496_reg_781 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (1'd0 == and_ln498_1_reg_790)) | ((icmp_ln496_reg_781 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (1'd1 == and_ln498_1_reg_790)) | ((outFlag_reg_794 == 1'd0) & (icmp_ln496_reg_781 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (1'd0 == and_ln498_1_reg_790) & (icmp_ln508_reg_798 == 1'd1)) | ((outFlag_reg_794 == 1'd0) & (icmp_ln496_reg_781 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (1'd0 == and_ln498_1_reg_790) & (icmp_ln508_reg_798 == 1'd0)) | ((icmp_ln496_reg_781 == 1'd0) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1)))) begin
        ap_phi_mux_empty_254_phi_fu_258_p10 = local_mem_q1;
    end else begin
        ap_phi_mux_empty_254_phi_fu_258_p10 = ap_phi_reg_pp0_iter4_empty_254_reg_255;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_328)) begin
        if ((icmp_ln508_fu_477_p2 == 1'd1)) begin
            ap_phi_mux_matchFlag_410_phi_fu_248_p4 = 1'd0;
        end else if ((icmp_ln508_fu_477_p2 == 1'd0)) begin
            ap_phi_mux_matchFlag_410_phi_fu_248_p4 = boostFlag_reg_768_pp0_iter2_reg;
        end else begin
            ap_phi_mux_matchFlag_410_phi_fu_248_p4 = ap_phi_reg_pp0_iter3_matchFlag_410_reg_245;
        end
    end else begin
        ap_phi_mux_matchFlag_410_phi_fu_248_p4 = ap_phi_reg_pp0_iter3_matchFlag_410_reg_245;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_616)) begin
            ap_phi_mux_nextVal_strobe_phi_fu_227_p4 = tmp_219_reg_739;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_nextVal_strobe_phi_fu_227_p4 = empty;
        end else begin
            ap_phi_mux_nextVal_strobe_phi_fu_227_p4 = nextVal_strobe_reg_224;
        end
    end else begin
        ap_phi_mux_nextVal_strobe_phi_fu_227_p4 = nextVal_strobe_reg_224;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_328)) begin
        if ((icmp_ln508_fu_477_p2 == 1'd1)) begin
            ap_phi_mux_skip_len_416_phi_fu_238_p4 = 9'd0;
        end else if ((icmp_ln508_fu_477_p2 == 1'd0)) begin
            ap_phi_mux_skip_len_416_phi_fu_238_p4 = skip_len_8_fu_496_p3;
        end else begin
            ap_phi_mux_skip_len_416_phi_fu_238_p4 = ap_phi_reg_pp0_iter3_skip_len_416_reg_235;
        end
    end else begin
        ap_phi_mux_skip_len_416_phi_fu_238_p4 = ap_phi_reg_pp0_iter3_skip_len_416_reg_235;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_match_ch_load = ap_phi_mux_empty_254_phi_fu_258_p10;
    end else begin
        ap_sig_allocacmp_match_ch_load = match_ch_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op127_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        boosterStream_blk_n = boosterStream_full_n;
    end else begin
        boosterStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op127_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        boosterStream_write_local = 1'b1;
    end else begin
        boosterStream_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_phi_mux_nextVal_strobe_phi_fu_227_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compressedStream1_blk_n = compressedStream1_empty_n;
    end else begin
        compressedStream1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_nextVal_strobe_phi_fu_227_p4 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compressedStream1_read_local = 1'b1;
    end else begin
        compressedStream1_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (nextVal_strobe_reg_224 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lclBufStream_i_blk_n = lclBufStream_empty_n;
    end else begin
        lclBufStream_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (nextVal_strobe_reg_224 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lclBufStream_o_blk_n = lclBufStream_full_n;
    end else begin
        lclBufStream_o_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (nextVal_strobe_reg_224 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lclBufStream_read_local = 1'b1;
    end else begin
        lclBufStream_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (nextVal_strobe_reg_224 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lclBufStream_write_local = 1'b1;
    end else begin
        lclBufStream_write_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_620)) begin
        if (((1'd1 == and_ln498_1_fu_454_p2) & (icmp_ln496_fu_409_p2 == 1'd1))) begin
            local_mem_address1_local = zext_ln520_1_fu_615_p1;
        end else if (((1'd0 == and_ln498_1_fu_454_p2) & (icmp_ln496_fu_409_p2 == 1'd1))) begin
            local_mem_address1_local = zext_ln520_2_fu_482_p1;
        end else if ((icmp_ln496_fu_409_p2 == 1'd0)) begin
            local_mem_address1_local = zext_ln520_fu_421_p1;
        end else begin
            local_mem_address1_local = 'bx;
        end
    end else begin
        local_mem_address1_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_mem_ce0_local = 1'b1;
    end else begin
        local_mem_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln498_1_fu_454_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln496_fu_409_p2 == 1'd0) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1)))) begin
        local_mem_ce1_local = 1'b1;
    end else begin
        local_mem_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (nextVal_strobe_reg_224_pp0_iter1_reg == 1'd1))) begin
        local_mem_we0_local = 1'b1;
    end else begin
        local_mem_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd0))) begin
        outValue_4_out_ap_vld = 1'b1;
    end else begin
        outValue_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln498_1_fu_454_p2 = (matchFlag_fu_124 & and_ln498_fu_448_p2);

assign and_ln498_fu_448_p2 = (icmp_ln498_fu_437_p2 & icmp_ln498_1_fu_443_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_phi_mux_nextVal_strobe_phi_fu_227_p4 == 1'd1) & (compressedStream1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((lclBufStream_full_n == 1'b0) & (nextVal_strobe_reg_224 == 1'd1)) | ((nextVal_strobe_reg_224 == 1'd1) & (lclBufStream_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((ap_predicate_op127_write_state5 == 1'b1) & (boosterStream_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_328 = ((1'd0 == and_ln498_1_fu_454_p2) & (outFlag_fu_472_p2 == 1'd1) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_condition_616 = ((1'b0 == ap_block_pp0_stage0) & (nextVal_strobe_reg_224 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_620 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_condition_628 = ((1'b0 == ap_block_pp0_stage0_11001) & (nextVal_strobe_reg_224 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_115 = (ap_predicate_op115_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_121 = (ap_predicate_op121_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_123 = (ap_predicate_op123_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_129 = (ap_predicate_op129_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_51 = (nextVal_strobe_reg_224_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_64 = (ap_predicate_op64_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_80 = (ap_predicate_op80_load_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter3_matchFlag_410_reg_245 = 'bx;

assign ap_phi_reg_pp0_iter3_skip_len_416_reg_235 = 'bx;

assign ap_phi_reg_pp0_iter4_empty_254_reg_255 = 'bx;

always @ (*) begin
    ap_predicate_op115_load_state4 = ((1'd1 == and_ln498_1_fu_454_p2) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op121_load_state5 = ((icmp_ln496_reg_781 == 1'd0) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op123_load_state5 = ((icmp_ln496_reg_781 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (1'd0 == and_ln498_1_reg_790));
end

always @ (*) begin
    ap_predicate_op127_write_state5 = ((outFlag_reg_794 == 1'd1) & (icmp_ln496_reg_781 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (1'd0 == and_ln498_1_reg_790));
end

always @ (*) begin
    ap_predicate_op129_load_state5 = ((icmp_ln496_reg_781 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter3_reg == 1'd1) & (1'd1 == and_ln498_1_reg_790));
end

always @ (*) begin
    ap_predicate_op64_load_state4 = ((icmp_ln496_fu_409_p2 == 1'd0) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op80_load_state4 = ((1'd0 == and_ln498_1_fu_454_p2) & (icmp_ln496_fu_409_p2 == 1'd1) & (nextVal_strobe_reg_224_pp0_iter2_reg == 1'd1));
end

assign ap_ready = ap_ready_sig;

assign boostFlag_fu_363_p2 = ((tmp_220_fu_353_p4 == 4'd0) ? 1'b1 : 1'b0);

assign boosterStream_din = tmp_s_fu_645_p3;

assign boosterStream_write = boosterStream_write_local;

assign compressedStream1_read = compressedStream1_read_local;

assign empty_255_fu_405_p1 = match_loc_fu_116[11:0];

assign empty_256_fu_382_p1 = iIdx_fu_108[11:0];

assign iIdx_12_fu_376_p2 = (iIdx_fu_108 + 32'd1);

assign icmp_ln496_fu_409_p2 = ((skip_len_fu_104 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln498_1_fu_443_p2 = ((tCh_reg_751_pp0_iter2_reg == ap_sig_allocacmp_match_ch_load) ? 1'b1 : 1'b0);

assign icmp_ln498_fu_437_p2 = ((match_len_fu_120 < 32'd255) ? 1'b1 : 1'b0);

assign icmp_ln508_fu_477_p2 = ((tLen_reg_757_pp0_iter2_reg == 8'd0) ? 1'b1 : 1'b0);

assign lclBufStream_din = nextVal_data_fu_112;

assign lclBufStream_read = lclBufStream_read_local;

assign lclBufStream_write = lclBufStream_write_local;

assign local_mem_address0 = zext_ln493_fu_386_p1;

assign local_mem_address1 = local_mem_address1_local;

assign match_len_4_fu_583_p2 = (match_len_fu_120 + 32'd1);

assign match_loc_6_fu_589_p2 = (match_loc_fu_116 + 32'd1);

assign match_loc_7_fu_463_p2 = (iIdx_11_reg_775 - zext_ln504_fu_460_p1);

assign outFlag_fu_472_p2 = ((iIdx_11_reg_775 != 32'd0) ? 1'b1 : 1'b0);

assign outValue_4_fu_603_p5 = {{outStreamValue_data_fu_128[31:16]}, {trunc_ln501_fu_599_p1}, {outStreamValue_data_fu_128[7:0]}};

assign outValue_4_out = outStreamValue_data_fu_128;

assign sext_ln449_fu_504_p1 = skip_len_8_fu_496_p3;

assign sext_ln522_fu_555_p1 = $signed(ap_phi_mux_skip_len_416_phi_fu_238_p4);

assign skip_len_6_fu_415_p2 = ($signed(skip_len_fu_104) + $signed(16'd65535));

assign skip_len_7_fu_490_p2 = ($signed(zext_ln514_fu_487_p1) + $signed(9'd511));

assign skip_len_8_fu_496_p3 = ((boostFlag_reg_768_pp0_iter2_reg[0:0] == 1'b1) ? 9'd0 : skip_len_7_fu_490_p2);

assign tCh_fu_329_p1 = lclBufStream_dout[7:0];

assign tmp_220_fu_353_p4 = {{lclBufStream_dout[31:28]}};

assign tmp_s_fu_645_p3 = {{1'd1}, {outStreamValue_data_load_4_reg_807}};

assign trunc_ln441_2_fu_468_p1 = match_loc_7_fu_463_p2[11:0];

assign trunc_ln441_fu_595_p1 = match_loc_6_fu_589_p2[11:0];

assign trunc_ln479_fu_313_p1 = compressedStream1_dout[31:0];

assign trunc_ln501_fu_599_p1 = match_len_4_fu_583_p2[7:0];

assign zext_ln493_fu_386_p1 = empty_256_fu_382_p1;

assign zext_ln504_fu_460_p1 = tOffset_reg_763_pp0_iter2_reg;

assign zext_ln514_fu_487_p1 = tLen_reg_757_pp0_iter2_reg;

assign zext_ln520_1_fu_615_p1 = trunc_ln441_fu_595_p1;

assign zext_ln520_2_fu_482_p1 = trunc_ln441_2_fu_468_p1;

assign zext_ln520_fu_421_p1 = empty_255_fu_405_p1;

endmodule //gzipcMulticoreStreaming_lzBooster_255_4096_16384_64_62_Pipeline_lz_booster

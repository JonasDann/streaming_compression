// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module gzipcMulticoreStreaming_huffmanEncoderStatic_35_Pipeline_huffman_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        encodedOutStream_dout,
        encodedOutStream_num_data_valid,
        encodedOutStream_fifo_cap,
        encodedOutStream_empty_n,
        encodedOutStream_read,
        hufCodeStream_din,
        hufCodeStream_num_data_valid,
        hufCodeStream_fifo_cap,
        hufCodeStream_full_n,
        hufCodeStream_write,
        empty
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [32:0] encodedOutStream_dout;
input  [2:0] encodedOutStream_num_data_valid;
input  [2:0] encodedOutStream_fifo_cap;
input   encodedOutStream_empty_n;
output   encodedOutStream_read;
output  [19:0] hufCodeStream_din;
input  [2:0] hufCodeStream_num_data_valid;
input  [2:0] hufCodeStream_fifo_cap;
input   hufCodeStream_full_n;
output   hufCodeStream_write;
input  [31:0] empty;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire   [31:0] next_state_12_load_fu_358_p1;
wire   [0:0] done_load_load_fu_393_p1;
reg    ap_predicate_op51_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [31:0] next_state_12_reg_862;
reg   [31:0] next_state_12_reg_862_pp0_iter2_reg;
reg   [0:0] done_load_reg_891;
reg   [0:0] done_load_reg_891_pp0_iter2_reg;
reg   [0:0] icmp_ln342_reg_920;
reg   [0:0] icmp_ln342_reg_920_pp0_iter2_reg;
reg    ap_predicate_op158_write_state4;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [8:0] dist_code26_address0;
wire   [4:0] dist_code26_q0;
wire   [8:0] length_code56_address0;
wire   [4:0] length_code56_q0;
wire   [8:0] lit_code_fixed70_q0;
wire   [3:0] lit_blen_fixed63_q0;
wire   [4:0] huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_address0;
wire   [2:0] huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_q0;
wire   [4:0] dist_codes_fixed33_address0;
wire   [4:0] dist_codes_fixed33_q0;
wire   [4:0] dist_blen_fixed19_address0;
wire   [2:0] dist_blen_fixed19_q0;
wire   [4:0] huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_address0;
wire   [3:0] huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_q0;
wire   [4:0] base_length12_address0;
wire   [7:0] base_length12_q0;
wire   [4:0] base_dist5_address0;
wire   [14:0] base_dist5_q0;
reg    encodedOutStream_blk_n;
wire    ap_block_pp0_stage0;
reg    hufCodeStream_blk_n;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_pred195_state4;
reg    ap_predicate_pred203_state4;
reg    ap_predicate_pred208_state4;
reg    ap_predicate_pred213_state4;
wire   [8:0] trunc_ln352_fu_384_p1;
reg   [8:0] trunc_ln352_reg_881;
wire   [7:0] tCh_fu_417_p1;
reg   [7:0] tCh_reg_895;
wire   [7:0] tLen_8_fu_421_p4;
reg   [7:0] tLen_8_reg_900;
reg   [15:0] tOffset_8_reg_905;
wire   [0:0] icmp_ln342_fu_517_p2;
reg   [4:0] code_s_4_reg_934;
reg   [2:0] dist_blen_fixed19_load_reg_939;
wire   [63:0] zext_ln366_fu_374_p1;
wire   [63:0] zext_ln354_fu_388_p1;
wire   [63:0] zext_ln339_fu_507_p1;
wire   [63:0] zext_ln340_fu_512_p1;
wire   [63:0] zext_ln388_fu_546_p1;
wire   [63:0] zext_ln380_fu_554_p1;
wire   [63:0] zext_ln352_fu_592_p1;
wire   [63:0] zext_ln345_fu_652_p1;
reg   [7:0] dextra_fu_112;
wire   [7:0] dextra_5_cast_cast_fu_559_p1;
wire    ap_loop_init;
reg   [7:0] lextra_fu_116;
wire   [7:0] lextra_4_cast_cast_fu_598_p1;
reg   [0:0] done_fu_120;
wire   [0:0] done_244_fu_411_p2;
reg   [15:0] lcode_fu_124;
wire   [15:0] zext_ln340_3_fu_630_p1;
reg   [15:0] ap_sig_allocacmp_lcode_load;
reg   [15:0] dcode_fu_128;
wire   [15:0] zext_ln339_4_fu_626_p1;
reg   [15:0] ap_sig_allocacmp_dcode_load_4;
reg   [31:0] curEncodedValue_fu_132;
wire   [31:0] nextEncodedValue_data_fu_399_p1;
reg   [7:0] tLen_fu_136;
wire   [7:0] tLen_7_fu_714_p2;
reg   [15:0] tOffset_fu_140;
wire   [15:0] tOffset_7_fu_672_p2;
reg   [31:0] next_state_fu_144;
wire   [31:0] select_ln379_fu_569_p3;
wire   [31:0] select_ln365_fu_608_p3;
reg   [31:0] ap_sig_allocacmp_next_state_12;
reg    encodedOutStream_read_local;
wire   [19:0] tmp_192_fu_686_p4;
reg   [19:0] hufCodeStream_din_local;
reg    ap_block_pp0_stage0_01001;
wire   [19:0] tmp_191_fu_724_p5;
wire   [19:0] tmp_190_fu_748_p4;
wire   [19:0] tmp_s_fu_763_p4;
wire   [19:0] tmp_193_fu_778_p4;
reg    hufCodeStream_write_local;
reg    dist_codes_fixed33_ce0_local;
reg    dist_blen_fixed19_ce0_local;
reg    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_ce0_local;
reg    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_ce0_local;
reg    dist_code26_ce0_local;
reg    length_code56_ce0_local;
reg    base_dist5_ce0_local;
reg    base_length12_ce0_local;
reg    lit_code_fixed70_ce0_local;
reg   [8:0] lit_code_fixed70_address0_local;
reg    lit_blen_fixed63_ce0_local;
reg   [8:0] lit_blen_fixed63_address0_local;
wire   [0:0] nextEncodedValue_strobe_fu_403_p3;
wire   [7:0] tmp_280_fu_441_p4;
wire   [0:0] bit_sel_fu_467_p3;
wire   [0:0] xor_ln339_fu_475_p2;
wire   [7:0] part_sel_fu_481_p4;
wire   [0:0] icmp_ln339_fu_451_p2;
wire   [8:0] tOffset_870_cast_fu_457_p4;
wire   [8:0] xor_ln_fu_491_p3;
wire   [8:0] dcode_4_fu_499_p3;
wire   [0:0] icmp_ln374_fu_563_p2;
wire   [8:0] add_ln352_fu_587_p2;
wire   [0:0] icmp_ln360_fu_602_p2;
wire   [15:0] base_dist_load_cast_fu_668_p1;
wire   [3:0] trunc_ln390_fu_682_p1;
wire   [14:0] trunc_ln389_fu_678_p1;
wire   [7:0] newFirst_fu_708_p2;
wire   [3:0] trunc_ln382_fu_720_p1;
wire   [3:0] dist_blen_fixed_load_cast_fu_742_p1;
wire   [14:0] zext_ln370_fu_745_p1;
wire   [14:0] zext_ln356_fu_759_p1;
wire   [14:0] zext_ln345_3_fu_774_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_669;
reg    ap_condition_672;
reg    ap_condition_307;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 dextra_fu_112 = 8'd0;
#0 lextra_fu_116 = 8'd0;
#0 done_fu_120 = 1'd0;
#0 lcode_fu_124 = 16'd0;
#0 dcode_fu_128 = 16'd0;
#0 curEncodedValue_fu_132 = 32'd0;
#0 tLen_fu_136 = 8'd0;
#0 tOffset_fu_140 = 16'd0;
#0 next_state_fu_144 = 32'd0;
#0 ap_done_reg = 1'b0;
end

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_code22_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
dist_code26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dist_code26_address0),
    .ce0(dist_code26_ce0_local),
    .q0(dist_code26_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_length_code52_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 259 ),
    .AddressWidth( 9 ))
length_code56_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(length_code56_address0),
    .ce0(length_code56_ce0_local),
    .q0(length_code56_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_lit_code_fixed66_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
lit_code_fixed70_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lit_code_fixed70_address0_local),
    .ce0(lit_code_fixed70_ce0_local),
    .q0(lit_code_fixed70_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_lit_blen_fixed59_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
lit_blen_fixed63_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lit_blen_fixed63_address0_local),
    .ce0(lit_blen_fixed63_ce0_local),
    .q0(lit_blen_fixed63_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_huffmanEncoderStatic_stream_strqcK #(
    .DataWidth( 3 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_address0),
    .ce0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_ce0_local),
    .q0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_codes_fixed29_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dist_codes_fixed33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dist_codes_fixed33_address0),
    .ce0(dist_codes_fixed33_ce0_local),
    .q0(dist_codes_fixed33_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_blen_fixed15_ROM_AUTO_1R #(
    .DataWidth( 3 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dist_blen_fixed19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dist_blen_fixed19_address0),
    .ce0(dist_blen_fixed19_ce0_local),
    .q0(dist_blen_fixed19_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_huffmanEncoderStatic_stream_strrcU #(
    .DataWidth( 4 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_address0),
    .ce0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_ce0_local),
    .q0(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_base_length8_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
base_length12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(base_length12_address0),
    .ce0(base_length12_ce0_local),
    .q0(base_length12_q0)
);

gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_base_dist1_ROM_AUTO_1R #(
    .DataWidth( 15 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
base_dist5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(base_dist5_address0),
    .ce0(base_dist5_ce0_local),
    .q0(base_dist5_q0)
);

gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            curEncodedValue_fu_132 <= empty;
        end else if ((1'b1 == ap_condition_669)) begin
            curEncodedValue_fu_132 <= nextEncodedValue_data_fu_399_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        dcode_fu_128[0] <= 1'b0;
            dcode_fu_128[1] <= 1'b0;
            dcode_fu_128[2] <= 1'b0;
            dcode_fu_128[3] <= 1'b0;
            dcode_fu_128[4] <= 1'b0;
        end else if ((1'b1 == ap_condition_672)) begin
                        dcode_fu_128[4 : 0] <= zext_ln339_4_fu_626_p1[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        dextra_fu_112[0] <= 1'b0;
            dextra_fu_112[1] <= 1'b0;
            dextra_fu_112[2] <= 1'b0;
            dextra_fu_112[3] <= 1'b0;
        end else if (((next_state_12_reg_862 == 32'd5) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                        dextra_fu_112[3 : 0] <= dextra_5_cast_cast_fu_559_p1[3 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            done_fu_120 <= 1'd0;
        end else if ((1'b1 == ap_condition_669)) begin
            done_fu_120 <= done_244_fu_411_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        lcode_fu_124[0] <= 1'b0;
            lcode_fu_124[1] <= 1'b0;
            lcode_fu_124[2] <= 1'b0;
            lcode_fu_124[3] <= 1'b0;
            lcode_fu_124[4] <= 1'b0;
        end else if ((1'b1 == ap_condition_672)) begin
                        lcode_fu_124[4 : 0] <= zext_ln340_3_fu_630_p1[4 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        lextra_fu_116[0] <= 1'b0;
            lextra_fu_116[1] <= 1'b0;
            lextra_fu_116[2] <= 1'b0;
        end else if (((next_state_12_reg_862 == 32'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                        lextra_fu_116[2 : 0] <= lextra_4_cast_cast_fu_598_p1[2 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_fu_120 == 1'd0) & (ap_sig_allocacmp_next_state_12 == 32'd0) & (icmp_ln342_fu_517_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                next_state_fu_144[0] <= 1'b1;
        next_state_fu_144[1] <= 1'b0;
        next_state_fu_144[2] <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (next_state_12_load_fu_358_p1 == 32'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                next_state_fu_144[0] <= 1'b1;
        next_state_fu_144[1] <= 1'b0;
        next_state_fu_144[2] <= 1'b1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (done_fu_120 == 1'd0) & (ap_sig_allocacmp_next_state_12 == 32'd0) & (icmp_ln342_fu_517_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (next_state_12_load_fu_358_p1 == 32'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                next_state_fu_144[0] <= 1'b0;
        next_state_fu_144[1] <= 1'b0;
        next_state_fu_144[2] <= 1'b0;
    end else if (((next_state_12_reg_862 == 32'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                next_state_fu_144[2 : 0] <= select_ln365_fu_608_p3[2 : 0];
    end else if (((next_state_12_reg_862 == 32'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                next_state_fu_144[2 : 0] <= select_ln379_fu_569_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln342_reg_920 == 1'd1) & (done_load_reg_891 == 1'd0) & (next_state_12_reg_862 == 32'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tLen_fu_136 <= 8'd0;
    end else if (((icmp_ln342_reg_920 == 1'd0) & (done_load_reg_891 == 1'd0) & (next_state_12_reg_862 == 32'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        tLen_fu_136 <= tLen_8_reg_900;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred208_state4 == 1'b1))) begin
        tLen_fu_136 <= tLen_7_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            tOffset_fu_140 <= 16'd0;
        end else if ((1'b1 == ap_condition_672)) begin
            tOffset_fu_140 <= tOffset_8_reg_905;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred213_state4 == 1'b1))) begin
            tOffset_fu_140 <= tOffset_7_fu_672_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        done_load_reg_891 <= done_fu_120;
        icmp_ln342_reg_920 <= icmp_ln342_fu_517_p2;
        next_state_12_reg_862[2 : 0] <= ap_sig_allocacmp_next_state_12[2 : 0];
        tCh_reg_895 <= tCh_fu_417_p1;
        tLen_8_reg_900 <= {{curEncodedValue_fu_132[15:8]}};
        tOffset_8_reg_905 <= {{curEncodedValue_fu_132[31:16]}};
        trunc_ln352_reg_881[4 : 0] <= trunc_ln352_fu_384_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_predicate_pred195_state4 <= (next_state_12_reg_862 == 32'd1);
        ap_predicate_pred203_state4 <= (next_state_12_reg_862 == 32'd5);
        ap_predicate_pred208_state4 <= (next_state_12_reg_862 == 32'd4);
        ap_predicate_pred213_state4 <= (next_state_12_reg_862 == 32'd6);
        code_s_4_reg_934 <= dist_codes_fixed33_q0;
        dist_blen_fixed19_load_reg_939 <= dist_blen_fixed19_q0;
        done_load_reg_891_pp0_iter2_reg <= done_load_reg_891;
        icmp_ln342_reg_920_pp0_iter2_reg <= icmp_ln342_reg_920;
        next_state_12_reg_862_pp0_iter2_reg[2 : 0] <= next_state_12_reg_862[2 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (done_load_load_fu_393_p1 == 1'd1) & (ap_sig_allocacmp_next_state_12 == 32'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((done_load_reg_891 == 1'd0) & (next_state_12_reg_862 == 32'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_dcode_load_4 = zext_ln339_4_fu_626_p1;
    end else begin
        ap_sig_allocacmp_dcode_load_4 = dcode_fu_128;
    end
end

always @ (*) begin
    if (((done_load_reg_891 == 1'd0) & (next_state_12_reg_862 == 32'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_lcode_load = zext_ln340_3_fu_630_p1;
    end else begin
        ap_sig_allocacmp_lcode_load = lcode_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((next_state_12_reg_862 == 32'd1)) begin
            ap_sig_allocacmp_next_state_12 = select_ln365_fu_608_p3;
        end else if ((next_state_12_reg_862 == 32'd5)) begin
            ap_sig_allocacmp_next_state_12 = select_ln379_fu_569_p3;
        end else begin
            ap_sig_allocacmp_next_state_12 = next_state_fu_144;
        end
    end else begin
        ap_sig_allocacmp_next_state_12 = next_state_fu_144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        base_dist5_ce0_local = 1'b1;
    end else begin
        base_dist5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        base_length12_ce0_local = 1'b1;
    end else begin
        base_length12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dist_blen_fixed19_ce0_local = 1'b1;
    end else begin
        dist_blen_fixed19_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dist_code26_ce0_local = 1'b1;
    end else begin
        dist_code26_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dist_codes_fixed33_ce0_local = 1'b1;
    end else begin
        dist_codes_fixed33_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        encodedOutStream_blk_n = encodedOutStream_empty_n;
    end else begin
        encodedOutStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op51_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        encodedOutStream_read_local = 1'b1;
    end else begin
        encodedOutStream_read_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op158_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred213_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred208_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred203_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred195_state4 == 1'b1)))) begin
        hufCodeStream_blk_n = hufCodeStream_full_n;
    end else begin
        hufCodeStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if ((ap_predicate_op158_write_state4 == 1'b1)) begin
            hufCodeStream_din_local = tmp_193_fu_778_p4;
        end else if ((ap_predicate_pred195_state4 == 1'b1)) begin
            hufCodeStream_din_local = tmp_s_fu_763_p4;
        end else if ((ap_predicate_pred203_state4 == 1'b1)) begin
            hufCodeStream_din_local = tmp_190_fu_748_p4;
        end else if ((ap_predicate_pred208_state4 == 1'b1)) begin
            hufCodeStream_din_local = tmp_191_fu_724_p5;
        end else if ((ap_predicate_pred213_state4 == 1'b1)) begin
            hufCodeStream_din_local = tmp_192_fu_686_p4;
        end else begin
            hufCodeStream_din_local = 'bx;
        end
    end else begin
        hufCodeStream_din_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op158_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred213_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred208_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred203_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_pred195_state4 == 1'b1)))) begin
        hufCodeStream_write_local = 1'b1;
    end else begin
        hufCodeStream_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_ce0_local = 1'b1;
    end else begin
        huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_ce0_local = 1'b1;
    end else begin
        huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        length_code56_ce0_local = 1'b1;
    end else begin
        length_code56_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_307)) begin
            lit_blen_fixed63_address0_local = zext_ln345_fu_652_p1;
        end else if ((next_state_12_reg_862 == 32'd1)) begin
            lit_blen_fixed63_address0_local = zext_ln352_fu_592_p1;
        end else begin
            lit_blen_fixed63_address0_local = 'bx;
        end
    end else begin
        lit_blen_fixed63_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln342_reg_920 == 1'd1) & (done_load_reg_891 == 1'd0) & (next_state_12_reg_862 == 32'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((next_state_12_reg_862 == 32'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        lit_blen_fixed63_ce0_local = 1'b1;
    end else begin
        lit_blen_fixed63_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_307)) begin
            lit_code_fixed70_address0_local = zext_ln345_fu_652_p1;
        end else if ((next_state_12_reg_862 == 32'd1)) begin
            lit_code_fixed70_address0_local = zext_ln352_fu_592_p1;
        end else begin
            lit_code_fixed70_address0_local = 'bx;
        end
    end else begin
        lit_code_fixed70_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln342_reg_920 == 1'd1) & (done_load_reg_891 == 1'd0) & (next_state_12_reg_862 == 32'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((next_state_12_reg_862 == 32'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        lit_code_fixed70_ce0_local = 1'b1;
    end else begin
        lit_code_fixed70_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln352_fu_587_p2 = ($signed(trunc_ln352_reg_881) + $signed(9'd257));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op51_read_state2 == 1'b1) & (encodedOutStream_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (((ap_predicate_op158_write_state4 == 1'b1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_12_reg_862_pp0_iter2_reg == 32'd1) & (hufCodeStream_full_n == 1'b0)) | ((next_state_12_reg_862_pp0_iter2_reg == 32'd5) & (hufCodeStream_full_n == 1'b0)) | ((next_state_12_reg_862_pp0_iter2_reg == 32'd4) & (hufCodeStream_full_n == 1'b0)) | ((next_state_12_reg_862_pp0_iter2_reg == 32'd6) & (hufCodeStream_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_307 = ((icmp_ln342_reg_920 == 1'd1) & (done_load_reg_891 == 1'd0) & (next_state_12_reg_862 == 32'd0));
end

always @ (*) begin
    ap_condition_669 = ((done_fu_120 == 1'd0) & (ap_sig_allocacmp_next_state_12 == 32'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_672 = ((done_load_reg_891 == 1'd0) & (next_state_12_reg_862 == 32'd0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op158_write_state4 = ((icmp_ln342_reg_920_pp0_iter2_reg == 1'd1) & (done_load_reg_891_pp0_iter2_reg == 1'd0) & (next_state_12_reg_862_pp0_iter2_reg == 32'd0));
end

always @ (*) begin
    ap_predicate_op51_read_state2 = ((done_fu_120 == 1'd0) & (ap_sig_allocacmp_next_state_12 == 32'd0));
end

assign ap_ready = ap_ready_sig;

assign base_dist5_address0 = zext_ln388_fu_546_p1;

assign base_dist_load_cast_fu_668_p1 = base_dist5_q0;

assign base_length12_address0 = zext_ln380_fu_554_p1;

assign bit_sel_fu_467_p3 = curEncodedValue_fu_132[32'd31];

assign dcode_4_fu_499_p3 = ((icmp_ln339_fu_451_p2[0:0] == 1'b1) ? tOffset_870_cast_fu_457_p4 : xor_ln_fu_491_p3);

assign dextra_5_cast_cast_fu_559_p1 = huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_q0;

assign dist_blen_fixed19_address0 = zext_ln366_fu_374_p1;

assign dist_blen_fixed_load_cast_fu_742_p1 = dist_blen_fixed19_load_reg_939;

assign dist_code26_address0 = zext_ln339_fu_507_p1;

assign dist_codes_fixed33_address0 = zext_ln366_fu_374_p1;

assign done_244_fu_411_p2 = (nextEncodedValue_strobe_fu_403_p3 ^ 1'd1);

assign done_load_load_fu_393_p1 = done_fu_120;

assign encodedOutStream_read = encodedOutStream_read_local;

assign hufCodeStream_din = hufCodeStream_din_local;

assign hufCodeStream_write = hufCodeStream_write_local;

assign huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_address0 = zext_ln366_fu_374_p1;

assign huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_address0 = zext_ln354_fu_388_p1;

assign icmp_ln339_fu_451_p2 = ((tmp_280_fu_441_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln342_fu_517_p2 = ((tLen_8_fu_421_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln360_fu_602_p2 = ((huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_q0 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln374_fu_563_p2 = ((huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits41_q0 != 4'd0) ? 1'b1 : 1'b0);

assign length_code56_address0 = zext_ln340_fu_512_p1;

assign lextra_4_cast_cast_fu_598_p1 = huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits49_q0;

assign newFirst_fu_708_p2 = ($signed(8'd253) - $signed(base_length12_q0));

assign nextEncodedValue_data_fu_399_p1 = encodedOutStream_dout[31:0];

assign nextEncodedValue_strobe_fu_403_p3 = encodedOutStream_dout[32'd32];

assign next_state_12_load_fu_358_p1 = ap_sig_allocacmp_next_state_12;

assign part_sel_fu_481_p4 = {{curEncodedValue_fu_132[30:23]}};

assign select_ln365_fu_608_p3 = ((icmp_ln360_fu_602_p2[0:0] == 1'b1) ? 32'd4 : 32'd5);

assign select_ln379_fu_569_p3 = ((icmp_ln374_fu_563_p2[0:0] == 1'b1) ? 32'd6 : 32'd0);

assign tCh_fu_417_p1 = curEncodedValue_fu_132[7:0];

assign tLen_7_fu_714_p2 = (tLen_fu_136 + newFirst_fu_708_p2);

assign tLen_8_fu_421_p4 = {{curEncodedValue_fu_132[15:8]}};

assign tOffset_7_fu_672_p2 = (tOffset_fu_140 - base_dist_load_cast_fu_668_p1);

assign tOffset_870_cast_fu_457_p4 = {{curEncodedValue_fu_132[24:16]}};

assign tmp_190_fu_748_p4 = {{{{1'd1}, {dist_blen_fixed_load_cast_fu_742_p1}}}, {zext_ln370_fu_745_p1}};

assign tmp_191_fu_724_p5 = {{{{{{1'd1}, {trunc_ln382_fu_720_p1}}}, {7'd0}}}, {tLen_7_fu_714_p2}};

assign tmp_192_fu_686_p4 = {{{{1'd1}, {trunc_ln390_fu_682_p1}}}, {trunc_ln389_fu_678_p1}};

assign tmp_193_fu_778_p4 = {{{{1'd1}, {lit_blen_fixed63_q0}}}, {zext_ln345_3_fu_774_p1}};

assign tmp_280_fu_441_p4 = {{curEncodedValue_fu_132[31:24]}};

assign tmp_s_fu_763_p4 = {{{{1'd1}, {lit_blen_fixed63_q0}}}, {zext_ln356_fu_759_p1}};

assign trunc_ln352_fu_384_p1 = ap_sig_allocacmp_lcode_load[8:0];

assign trunc_ln382_fu_720_p1 = lextra_fu_116[3:0];

assign trunc_ln389_fu_678_p1 = tOffset_7_fu_672_p2[14:0];

assign trunc_ln390_fu_682_p1 = dextra_fu_112[3:0];

assign xor_ln339_fu_475_p2 = (bit_sel_fu_467_p3 ^ 1'd1);

assign xor_ln_fu_491_p3 = {{xor_ln339_fu_475_p2}, {part_sel_fu_481_p4}};

assign zext_ln339_4_fu_626_p1 = dist_code26_q0;

assign zext_ln339_fu_507_p1 = dcode_4_fu_499_p3;

assign zext_ln340_3_fu_630_p1 = length_code56_q0;

assign zext_ln340_fu_512_p1 = tLen_8_fu_421_p4;

assign zext_ln345_3_fu_774_p1 = lit_code_fixed70_q0;

assign zext_ln345_fu_652_p1 = tCh_reg_895;

assign zext_ln352_fu_592_p1 = add_ln352_fu_587_p2;

assign zext_ln354_fu_388_p1 = ap_sig_allocacmp_lcode_load;

assign zext_ln356_fu_759_p1 = lit_code_fixed70_q0;

assign zext_ln366_fu_374_p1 = ap_sig_allocacmp_dcode_load_4;

assign zext_ln370_fu_745_p1 = code_s_4_reg_934;

assign zext_ln380_fu_554_p1 = lcode_fu_124;

assign zext_ln388_fu_546_p1 = dcode_fu_128;

always @ (posedge ap_clk) begin
    next_state_12_reg_862[31:3] <= 29'b00000000000000000000000000000;
    next_state_12_reg_862_pp0_iter2_reg[31:3] <= 29'b00000000000000000000000000000;
    trunc_ln352_reg_881[8:5] <= 4'b0000;
    dextra_fu_112[7:4] <= 4'b0000;
    lextra_fu_116[7:3] <= 5'b00000;
    lcode_fu_124[15:5] <= 11'b00000000000;
    dcode_fu_128[15:5] <= 11'b00000000000;
    next_state_fu_144[31:3] <= 29'b00000000000000000000000000000;
end

endmodule //gzipcMulticoreStreaming_huffmanEncoderStatic_35_Pipeline_huffman_loop

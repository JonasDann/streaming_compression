// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module gzipcMulticoreStreaming_bytePacker_64_4_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        packedStream_dout,
        packedStream_num_data_valid,
        packedStream_fifo_cap,
        packedStream_empty_n,
        packedStream_read,
        outStream_din,
        outStream_num_data_valid,
        outStream_fifo_cap,
        outStream_full_n,
        outStream_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [67:0] packedStream_dout;
input  [2:0] packedStream_num_data_valid;
input  [2:0] packedStream_fifo_cap;
input   packedStream_empty_n;
output   packedStream_read;
output  [67:0] outStream_din;
input  [2:0] outStream_num_data_valid;
input  [2:0] outStream_fifo_cap;
input   outStream_full_n;
output   outStream_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg packedStream_read;
reg[67:0] outStream_din;
reg outStream_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    outStream_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln500_fu_235_p2;
wire    ap_CS_fsm_state4;
wire   [7:0] outVal_data_fu_241_p1;
reg    ap_block_state3;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_idle;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_ready;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_packedStream_read;
wire   [67:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_din;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_write;
wire   [7:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out_ap_vld;
wire   [7:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out_ap_vld;
wire   [7:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out_ap_vld;
wire   [7:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out_ap_vld;
wire   [7:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out_ap_vld;
wire   [7:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out_ap_vld;
wire   [7:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out_ap_vld;
wire   [7:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out_ap_vld;
wire   [63:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out_ap_vld;
wire   [3:0] grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out;
wire    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out_ap_vld;
reg   [7:0] outVal_data_30_reg_115;
reg   [7:0] outVal_data_29_reg_124;
reg   [7:0] outVal_data_28_reg_133;
reg   [7:0] outVal_data_27_reg_142;
reg   [7:0] outVal_data_26_reg_151;
reg   [7:0] outVal_data_25_reg_160;
reg   [7:0] outVal_data_24_reg_169;
reg   [7:0] outVal_data_23_reg_178;
reg    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg;
reg    ap_block_state1_ignore_call14;
wire    ap_CS_fsm_state2;
reg   [63:0] inputWindow_loc_fu_72;
wire   [67:0] p_s_fu_315_p3;
reg   [67:0] outStream_din_local;
wire   [67:0] zext_ln510_fu_346_p1;
reg    outStream_write_local;
wire   [64:0] tmp_s_fu_324_p10;
reg   [3:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg = 1'b0;
end

gzipcMulticoreStreaming_bytePacker_64_4_Pipeline_multicorePacker grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start),
    .ap_done(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done),
    .ap_idle(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_idle),
    .ap_ready(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_ready),
    .packedStream_dout(packedStream_dout),
    .packedStream_num_data_valid(3'd0),
    .packedStream_fifo_cap(3'd0),
    .packedStream_empty_n(packedStream_empty_n),
    .packedStream_read(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_packedStream_read),
    .outStream_din(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_din),
    .outStream_num_data_valid(3'd0),
    .outStream_fifo_cap(3'd0),
    .outStream_full_n(outStream_full_n),
    .outStream_write(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_write),
    .outVal_data_7_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out),
    .outVal_data_7_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out_ap_vld),
    .outVal_data_6_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out),
    .outVal_data_6_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out_ap_vld),
    .outVal_data_5_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out),
    .outVal_data_5_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out_ap_vld),
    .outVal_data_4_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out),
    .outVal_data_4_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out_ap_vld),
    .outVal_data_3_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out),
    .outVal_data_3_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out_ap_vld),
    .outVal_data_2_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out),
    .outVal_data_2_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out_ap_vld),
    .outVal_data_1_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out),
    .outVal_data_1_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out_ap_vld),
    .outVal_data_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out),
    .outVal_data_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out_ap_vld),
    .inputWindow_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out),
    .inputWindow_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out_ap_vld),
    .inputIdx_4_out(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out),
    .inputIdx_4_out_ap_vld(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((outStream_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state1_ignore_call14) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg <= 1'b1;
        end else if ((grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_ready == 1'b1)) begin
            grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln500_fu_235_p2 == 1'd1)) begin
            outVal_data_23_reg_178 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out;
        end else if ((icmp_ln500_fu_235_p2 == 1'd0)) begin
            outVal_data_23_reg_178 <= outVal_data_fu_241_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln500_fu_235_p2 == 1'd1)) begin
            outVal_data_24_reg_169 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out;
        end else if ((icmp_ln500_fu_235_p2 == 1'd0)) begin
            outVal_data_24_reg_169 <= {{inputWindow_loc_fu_72[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln500_fu_235_p2 == 1'd1)) begin
            outVal_data_25_reg_160 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out;
        end else if ((icmp_ln500_fu_235_p2 == 1'd0)) begin
            outVal_data_25_reg_160 <= {{inputWindow_loc_fu_72[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln500_fu_235_p2 == 1'd1)) begin
            outVal_data_26_reg_151 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out;
        end else if ((icmp_ln500_fu_235_p2 == 1'd0)) begin
            outVal_data_26_reg_151 <= {{inputWindow_loc_fu_72[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln500_fu_235_p2 == 1'd1)) begin
            outVal_data_27_reg_142 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out;
        end else if ((icmp_ln500_fu_235_p2 == 1'd0)) begin
            outVal_data_27_reg_142 <= {{inputWindow_loc_fu_72[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln500_fu_235_p2 == 1'd1)) begin
            outVal_data_28_reg_133 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out;
        end else if ((icmp_ln500_fu_235_p2 == 1'd0)) begin
            outVal_data_28_reg_133 <= {{inputWindow_loc_fu_72[47:40]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln500_fu_235_p2 == 1'd1)) begin
            outVal_data_29_reg_124 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out;
        end else if ((icmp_ln500_fu_235_p2 == 1'd0)) begin
            outVal_data_29_reg_124 <= {{inputWindow_loc_fu_72[55:48]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln500_fu_235_p2 == 1'd1)) begin
            outVal_data_30_reg_115 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out;
        end else if ((icmp_ln500_fu_235_p2 == 1'd0)) begin
            outVal_data_30_reg_115 <= {{inputWindow_loc_fu_72[63:56]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out_ap_vld == 1'b1))) begin
        inputWindow_loc_fu_72 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state3)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((outStream_full_n == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((outStream_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((outStream_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((icmp_ln500_fu_235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        outStream_blk_n = outStream_full_n;
    end else begin
        outStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        outStream_din = grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_din;
    end else begin
        outStream_din = outStream_din_local;
    end
end

always @ (*) begin
    if (((outStream_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        outStream_din_local = zext_ln510_fu_346_p1;
    end else if (((1'b0 == ap_block_state3) & (icmp_ln500_fu_235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        outStream_din_local = p_s_fu_315_p3;
    end else begin
        outStream_din_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        outStream_write = grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_write;
    end else begin
        outStream_write = outStream_write_local;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state3) & (icmp_ln500_fu_235_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((outStream_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        outStream_write_local = 1'b1;
    end else begin
        outStream_write_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        packedStream_read = grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_packedStream_read;
    end else begin
        packedStream_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((outStream_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call14 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln500_fu_235_p2 == 1'd0) & (outStream_full_n == 1'b0));
end

assign grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start = grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg;

assign icmp_ln500_fu_235_p2 = ((grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out == 4'd0) ? 1'b1 : 1'b0);

assign outVal_data_fu_241_p1 = inputWindow_loc_fu_72[7:0];

assign p_s_fu_315_p3 = {{grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out}, {inputWindow_loc_fu_72}};

assign tmp_s_fu_324_p10 = {{{{{{{{{{{{{{{{1'd0}, {outVal_data_30_reg_115}}}, {outVal_data_29_reg_124}}}, {outVal_data_28_reg_133}}}, {outVal_data_27_reg_142}}}, {outVal_data_26_reg_151}}}, {outVal_data_25_reg_160}}}, {outVal_data_24_reg_169}}}, {outVal_data_23_reg_178}};

assign zext_ln510_fu_346_p1 = tmp_s_fu_324_p10;

endmodule //gzipcMulticoreStreaming_bytePacker_64_4_s

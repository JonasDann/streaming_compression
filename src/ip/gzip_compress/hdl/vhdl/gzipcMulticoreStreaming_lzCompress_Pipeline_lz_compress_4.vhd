-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_lzCompress_Pipeline_lz_compress_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lclBufStream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    lclBufStream_empty_n : IN STD_LOGIC;
    lclBufStream_read : OUT STD_LOGIC;
    lclBufStream_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    lclBufStream_full_n : IN STD_LOGIC;
    lclBufStream_write : OUT STD_LOGIC;
    downStream_3_dout : IN STD_LOGIC_VECTOR (8 downto 0);
    downStream_3_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    downStream_3_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    downStream_3_empty_n : IN STD_LOGIC;
    downStream_3_read : OUT STD_LOGIC;
    compressedStream_din : OUT STD_LOGIC_VECTOR (32 downto 0);
    compressedStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    compressedStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    compressedStream_full_n : IN STD_LOGIC;
    compressedStream_write : OUT STD_LOGIC;
    present_window_93_reload : IN STD_LOGIC_VECTOR (7 downto 0);
    present_window_92_reload : IN STD_LOGIC_VECTOR (7 downto 0);
    present_window_91_reload : IN STD_LOGIC_VECTOR (7 downto 0);
    present_window_90_reload : IN STD_LOGIC_VECTOR (7 downto 0);
    present_window_89_reload : IN STD_LOGIC_VECTOR (7 downto 0);
    p_phi10_reload : IN STD_LOGIC_VECTOR (7 downto 0);
    empty_55 : IN STD_LOGIC_VECTOR (0 downto 0);
    dict_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    dict_ce0 : OUT STD_LOGIC;
    dict_we0 : OUT STD_LOGIC;
    dict_d0 : OUT STD_LOGIC_VECTOR (431 downto 0);
    dict_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    dict_ce1 : OUT STD_LOGIC;
    dict_q1 : IN STD_LOGIC_VECTOR (431 downto 0);
    empty : IN STD_LOGIC_VECTOR (31 downto 0);
    present_window_104_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_104_out_ap_vld : OUT STD_LOGIC;
    present_window_103_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_103_out_ap_vld : OUT STD_LOGIC;
    present_window_102_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_102_out_ap_vld : OUT STD_LOGIC;
    present_window_101_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_101_out_ap_vld : OUT STD_LOGIC;
    present_window_100_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    present_window_100_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_lzCompress_Pipeline_lz_compress_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_FFFFFFFB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_108 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100001000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100111";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110111";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_107 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000111";
    constant ap_const_lv32_150 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101010000";
    constant ap_const_lv32_167 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_127 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100111";
    constant ap_const_lv32_128 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101000";
    constant ap_const_lv32_12F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100101111";
    constant ap_const_lv32_130 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110000";
    constant ap_const_lv32_137 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100110111";
    constant ap_const_lv32_138 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_147 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000111";
    constant ap_const_lv32_148 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001000";
    constant ap_const_lv32_14F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101001111";
    constant ap_const_lv32_198 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011000";
    constant ap_const_lv32_1AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110101111";
    constant ap_const_lv32_168 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101000";
    constant ap_const_lv32_16F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101101111";
    constant ap_const_lv32_170 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110000";
    constant ap_const_lv32_177 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101110111";
    constant ap_const_lv32_178 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_187 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000111";
    constant ap_const_lv32_188 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001000";
    constant ap_const_lv32_18F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001111";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv32_197 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv16_1001 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal nextVal_strobe_reg_456 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal nextVal_strobe_reg_456_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_nextVal_strobe_phi_fu_459_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal lclBufStream_i_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal lclBufStream_o_blk_n : STD_LOGIC;
    signal downStream_3_blk_n : STD_LOGIC;
    signal compressedStream_blk_n : STD_LOGIC;
    signal nextVal_strobe_reg_456_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal nextVal_strobe_reg_456_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nextVal_strobe_reg_456_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nextVal_strobe_reg_456_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nextVal_strobe_reg_456_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal nextVal_strobe_reg_456_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal present_window_90_reg_2919 : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_90_reg_2919_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_90_reg_2919_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_90_reg_2919_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_90_reg_2919_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_90_reg_2919_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_91_reg_2931 : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_91_reg_2931_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_91_reg_2931_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_91_reg_2931_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_91_reg_2931_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_91_reg_2931_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_92_reg_2943 : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_92_reg_2943_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_92_reg_2943_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_92_reg_2943_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_92_reg_2943_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_92_reg_2943_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_93_reg_2955 : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_93_reg_2955_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_93_reg_2955_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_93_reg_2955_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_93_reg_2955_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_93_reg_2955_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_load_reg_2967 : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_load_reg_2967_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_load_reg_2967_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_load_reg_2967_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_load_reg_2967_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_load_reg_2967_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_load_reg_2967_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal inValue_reg_2979 : STD_LOGIC_VECTOR (7 downto 0);
    signal inValue_reg_2979_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal inValue_reg_2979_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal hash_fu_599_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal hash_reg_2995 : STD_LOGIC_VECTOR (11 downto 0);
    signal dict_addr_reg_3000 : STD_LOGIC_VECTOR (11 downto 0);
    signal dict_addr_reg_3000_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal currIdx_fu_648_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal currIdx_reg_3006 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln302_fu_653_p1 : STD_LOGIC_VECTOR (359 downto 0);
    signal trunc_ln302_reg_3022 : STD_LOGIC_VECTOR (359 downto 0);
    signal trunc_ln307_fu_657_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln307_reg_3027 : STD_LOGIC_VECTOR (23 downto 0);
    signal compareIdx_reg_3032 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln321_fu_671_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln321_reg_3037 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_3042 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_129_reg_3047 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_130_reg_3052 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_131_reg_3057 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_132_reg_3062 : STD_LOGIC_VECTOR (7 downto 0);
    signal compareIdx_16_reg_3067 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_134_reg_3072 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_135_reg_3077 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_136_reg_3082 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_137_reg_3087 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_138_reg_3092 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_139_reg_3097 : STD_LOGIC_VECTOR (7 downto 0);
    signal compareIdx_17_reg_3102 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_141_reg_3107 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_142_reg_3112 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_143_reg_3117 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_144_reg_3122 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_145_reg_3127 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_146_reg_3132 : STD_LOGIC_VECTOR (7 downto 0);
    signal compareIdx_18_reg_3137 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_148_reg_3142 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_149_reg_3147 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_150_reg_3152 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_151_reg_3157 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_152_reg_3162 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_153_reg_3167 : STD_LOGIC_VECTOR (7 downto 0);
    signal compareIdx_19_reg_3172 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_155_reg_3177 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_156_reg_3182 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_157_reg_3187 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_158_reg_3192 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_159_reg_3197 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_160_reg_3202 : STD_LOGIC_VECTOR (7 downto 0);
    signal compareIdx_20_reg_3207 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_162_reg_3212 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_163_reg_3217 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_164_reg_3222 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_165_reg_3227 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_166_reg_3232 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_167_reg_3237 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln317_fu_1166_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln317_reg_3242 : STD_LOGIC_VECTOR (2 downto 0);
    signal done_90_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_90_reg_3247 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_236_fu_1180_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_236_reg_3253 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln321_109_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_109_reg_3258 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_110_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_110_reg_3263 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_52_fu_1194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_52_reg_3268 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_52_reg_3268_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln327_fu_1204_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_reg_3273 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln327_53_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_53_reg_3278 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_53_reg_3278_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_3283 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_reg_3283_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln317_16_fu_1296_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln317_16_reg_3288 : STD_LOGIC_VECTOR (2 downto 0);
    signal done_95_fu_1304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_95_reg_3293 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_248_fu_1310_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_248_reg_3299 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln321_115_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_115_reg_3304 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_116_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_116_reg_3309 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_55_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_55_reg_3314 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_55_reg_3314_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln327_16_fu_1334_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_16_reg_3319 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln327_56_fu_1348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_56_reg_3324 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_56_reg_3324_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_16_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_16_reg_3329 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_16_reg_3329_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal len_259_fu_1418_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_259_reg_3334 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_100_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_100_reg_3339 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_121_fu_1436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_121_reg_3345 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_122_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_122_reg_3350 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_122_reg_3350_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_58_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_58_reg_3355 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_58_reg_3355_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln327_17_fu_1454_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_17_reg_3360 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_17_reg_3360_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln327_59_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_59_reg_3365 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_59_reg_3365_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_17_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_17_reg_3370 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_17_reg_3370_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal len_271_fu_1538_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_271_reg_3375 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_105_fu_1550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_105_reg_3380 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_127_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_127_reg_3386 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_128_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_128_reg_3391 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_128_reg_3391_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_61_fu_1564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_61_reg_3396 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_61_reg_3396_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln327_18_fu_1574_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_18_reg_3401 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_18_reg_3401_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln327_62_fu_1588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_62_reg_3406 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_62_reg_3406_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_18_fu_1594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_18_reg_3411 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_18_reg_3411_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal len_283_fu_1658_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_283_reg_3416 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_110_fu_1670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_110_reg_3421 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_133_fu_1676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_133_reg_3427 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_134_fu_1680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_134_reg_3432 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_134_reg_3432_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_64_fu_1684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_64_reg_3437 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_64_reg_3437_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln327_19_fu_1694_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_19_reg_3442 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_19_reg_3442_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln327_65_fu_1708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_65_reg_3447 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_65_reg_3447_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_19_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_19_reg_3452 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_19_reg_3452_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal len_295_fu_1778_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_295_reg_3457 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_115_fu_1790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_115_reg_3462 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_139_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_139_reg_3468 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_140_fu_1800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_140_reg_3473 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_140_reg_3473_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_67_fu_1804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_67_reg_3478 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_67_reg_3478_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln327_20_fu_1814_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_20_reg_3483 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln327_20_reg_3483_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln327_68_fu_1828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_68_reg_3488 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_68_reg_3488_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_20_fu_1834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_20_reg_3493 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln329_20_reg_3493_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal len_241_fu_1873_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_241_reg_3498 : STD_LOGIC_VECTOR (2 downto 0);
    signal match_offset_fu_1881_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_offset_reg_3505 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_offset_reg_3505_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal len_253_fu_1920_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_253_reg_3512 : STD_LOGIC_VECTOR (2 downto 0);
    signal match_offset_17_fu_1928_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_offset_17_reg_3519 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_offset_17_reg_3519_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal done_101_fu_1949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_101_reg_3526 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_263_fu_1959_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_263_reg_3531 : STD_LOGIC_VECTOR (2 downto 0);
    signal done_106_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_106_reg_3537 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_275_fu_1993_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_275_reg_3542 : STD_LOGIC_VECTOR (2 downto 0);
    signal done_111_fu_2017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_111_reg_3548 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_287_fu_2027_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_287_reg_3553 : STD_LOGIC_VECTOR (2 downto 0);
    signal done_116_fu_2051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_116_reg_3559 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_299_fu_2061_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_299_reg_3564 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln336_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_reg_3570 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_16_fu_2263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_16_reg_3575 : STD_LOGIC_VECTOR (0 downto 0);
    signal match_length_32_fu_2269_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal match_length_32_reg_3580 : STD_LOGIC_VECTOR (2 downto 0);
    signal match_offset_19_fu_2299_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_offset_19_reg_3586 : STD_LOGIC_VECTOR (15 downto 0);
    signal len_305_fu_2377_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_305_reg_3591 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln328_fu_2419_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_reg_3597 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_reg_3597_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal len_306_fu_2497_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_306_reg_3602 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln328_9_fu_2539_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_9_reg_3608 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_9_reg_3608_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal len_307_fu_2617_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_307_reg_3613 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_307_reg_3613_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln328_10_fu_2659_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_10_reg_3619 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln328_10_reg_3619_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal len_308_fu_2737_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_308_reg_3624 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_308_reg_3624_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal match_offset_20_fu_2779_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_offset_20_reg_3630 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln336_18_fu_2786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_18_reg_3635 : STD_LOGIC_VECTOR (0 downto 0);
    signal match_length_36_fu_2791_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal match_length_36_reg_3640 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln336_19_fu_2798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln336_19_reg_3645 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_init : STD_LOGIC;
    signal zext_ln301_fu_635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iIdx_1_fu_302 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal iIdx_fu_1075_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal nextVal_data_fu_306 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal trunc_ln245_fu_521_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal present_window_fu_310 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal present_window_86_fu_314 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal present_window_87_fu_318 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal present_window_88_fu_322 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal present_window_89_fu_326 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal lclBufStream_read_local : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal lclBufStream_write_local : STD_LOGIC;
    signal downStream_3_read_local : STD_LOGIC;
    signal tmp_169_fu_2842_p5 : STD_LOGIC_VECTOR (32 downto 0);
    signal compressedStream_write_local : STD_LOGIC;
    signal dict_ce1_local : STD_LOGIC;
    signal dict_we0_local : STD_LOGIC;
    signal dictWriteValue_fu_1086_p9 : STD_LOGIC_VECTOR (431 downto 0);
    signal dict_ce0_local : STD_LOGIC;
    signal shl_ln5_fu_561_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln293_s_fu_553_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln293_fu_541_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln294_fu_573_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln294_fu_569_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln294_10_fu_579_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln294_7_fu_585_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln293_9_fu_545_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln294_11_fu_589_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_533_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln294_8_fu_595_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln276_fu_642_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal len_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_88_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln321_fu_1106_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_232_fu_1126_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_107_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_233_fu_1134_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_89_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_234_fu_1152_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_235_fu_1158_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_108_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln319_fu_1099_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln327_fu_1199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_133_fu_1208_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal len_243_fu_1232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_112_fu_1246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_92_fu_1240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_93_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln321_16_fu_1236_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_244_fu_1256_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_113_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_245_fu_1264_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_94_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_246_fu_1282_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_247_fu_1288_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_114_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln319_16_fu_1229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln327_16_fu_1329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_140_fu_1338_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal len_255_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_118_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_97_fu_1370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_98_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln321_17_fu_1366_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_256_fu_1386_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_119_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_257_fu_1394_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_99_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_258_fu_1412_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_120_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln319_17_fu_1359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln327_17_fu_1449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_fu_1458_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal len_267_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_124_fu_1496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_102_fu_1490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_103_fu_1500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln321_18_fu_1486_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_268_fu_1506_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_125_fu_1522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_269_fu_1514_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_104_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_270_fu_1532_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_126_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln319_18_fu_1479_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln327_18_fu_1569_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_154_fu_1578_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal len_279_fu_1602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_130_fu_1616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_107_fu_1610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_108_fu_1620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln321_19_fu_1606_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_280_fu_1626_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_131_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_281_fu_1634_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_109_fu_1646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_282_fu_1652_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_132_fu_1666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln319_19_fu_1599_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln327_19_fu_1689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_161_fu_1698_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal len_291_fu_1722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln321_136_fu_1736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_112_fu_1730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_113_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln321_20_fu_1726_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_292_fu_1746_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_137_fu_1762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_293_fu_1754_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal done_114_fu_1766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_294_fu_1772_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln321_138_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln319_20_fu_1719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln327_20_fu_1809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_168_fu_1818_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal len_237_fu_1839_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal done_91_fu_1844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_238_fu_1848_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_239_fu_1854_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln321_fu_1862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_240_fu_1867_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_249_fu_1886_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal done_96_fu_1891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_250_fu_1895_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_251_fu_1901_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln321_96_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_252_fu_1914_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln317_17_fu_1933_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_260_fu_1936_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_261_fu_1942_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_262_fu_1953_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln317_18_fu_1967_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_272_fu_1970_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_273_fu_1976_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_274_fu_1987_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln317_19_fu_2001_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_284_fu_2004_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_285_fu_2010_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_286_fu_2021_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln317_20_fu_2035_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_296_fu_2038_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_297_fu_2044_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_298_fu_2055_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln330_34_fu_2089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_fu_2079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln328_fu_2074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_70_fu_2106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_fu_2069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_71_fu_2112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_fu_2102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_72_fu_2118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_fu_2084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_fu_2124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln328_fu_2130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_303_fu_2144_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_303_fu_2144_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_303_fu_2144_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_303_fu_2144_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln330_36_fu_2189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_16_fu_2179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln328_16_fu_2174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_74_fu_2206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_54_fu_2169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_75_fu_2212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_73_fu_2202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_76_fu_2218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_35_fu_2184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_16_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln328_16_fu_2230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_304_fu_2244_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_304_fu_2244_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_304_fu_2244_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_304_fu_2244_p9 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln321_101_fu_2277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_264_fu_2281_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_265_fu_2286_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln330_38_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_17_fu_2310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln328_17_fu_2304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_78_fu_2339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_57_fu_2293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_79_fu_2345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_77_fu_2335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_80_fu_2351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_37_fu_2315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_17_fu_2357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln328_17_fu_2363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_305_fu_2377_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_305_fu_2377_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_305_fu_2377_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln321_106_fu_2397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_276_fu_2401_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_277_fu_2406_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln330_40_fu_2441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_18_fu_2430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln328_18_fu_2424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_82_fu_2459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_60_fu_2413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_83_fu_2465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_81_fu_2455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_84_fu_2471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_39_fu_2435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_18_fu_2477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln328_18_fu_2483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_306_fu_2497_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_306_fu_2497_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_306_fu_2497_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln321_111_fu_2517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_288_fu_2521_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_289_fu_2526_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln330_42_fu_2561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_19_fu_2550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln328_19_fu_2544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_86_fu_2579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_63_fu_2533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_87_fu_2585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_85_fu_2575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_88_fu_2591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_41_fu_2555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_19_fu_2597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln328_19_fu_2603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_307_fu_2617_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_307_fu_2617_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_307_fu_2617_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln321_116_fu_2637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_300_fu_2641_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_301_fu_2646_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln330_44_fu_2681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln329_20_fu_2670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln328_20_fu_2664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_90_fu_2699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln327_66_fu_2653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_91_fu_2705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_89_fu_2695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln328_92_fu_2711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln330_43_fu_2675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_20_fu_2717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln328_20_fu_2723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal len_308_fu_2737_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_308_fu_2737_p7 : STD_LOGIC_VECTOR (2 downto 0);
    signal len_308_fu_2737_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal match_offset_16_fu_2757_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln336_17_fu_2769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal match_offset_18_fu_2763_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_length_34_fu_2773_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln336_18_fu_2803_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal match_length_38_fu_2808_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln336_20_fu_2819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal match_length_40_fu_2824_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln336_19_fu_2813_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln336_20_fu_2835_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln336_fu_2831_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_73 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_77 : BOOLEAN;
    signal ap_enable_state4_pp0_iter3_stage0 : BOOLEAN;
    signal ap_enable_operation_125 : BOOLEAN;
    signal ap_enable_state5_pp0_iter4_stage0 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_2237 : BOOLEAN;
    signal ap_condition_2244 : BOOLEAN;
    signal len_303_fu_2144_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_303_fu_2144_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_303_fu_2144_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_304_fu_2244_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_304_fu_2244_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_304_fu_2244_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_305_fu_2377_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_305_fu_2377_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_305_fu_2377_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_306_fu_2497_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_306_fu_2497_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_306_fu_2497_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_307_fu_2617_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_307_fu_2617_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_307_fu_2617_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_308_fu_2737_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_308_fu_2737_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal len_308_fu_2737_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_sparsemux_7_2_3_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (2 downto 0);
        def : IN STD_LOGIC_VECTOR (2 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_7_2_3_1_1_U510 : component gzipcMulticoreStreaming_sparsemux_7_2_3_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 3,
        CASE1 => "01",
        din1_WIDTH => 3,
        CASE2 => "00",
        din2_WIDTH => 3,
        def_WIDTH => 3,
        sel_WIDTH => 2,
        dout_WIDTH => 3)
    port map (
        din0 => len_303_fu_2144_p2,
        din1 => ap_const_lv3_0,
        din2 => len_241_reg_3498,
        def => len_303_fu_2144_p7,
        sel => len_303_fu_2144_p8,
        dout => len_303_fu_2144_p9);

    sparsemux_7_2_3_1_1_U511 : component gzipcMulticoreStreaming_sparsemux_7_2_3_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 3,
        CASE1 => "01",
        din1_WIDTH => 3,
        CASE2 => "00",
        din2_WIDTH => 3,
        def_WIDTH => 3,
        sel_WIDTH => 2,
        dout_WIDTH => 3)
    port map (
        din0 => len_304_fu_2244_p2,
        din1 => ap_const_lv3_0,
        din2 => len_253_reg_3512,
        def => len_304_fu_2244_p7,
        sel => len_304_fu_2244_p8,
        dout => len_304_fu_2244_p9);

    sparsemux_7_2_3_1_1_U512 : component gzipcMulticoreStreaming_sparsemux_7_2_3_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 3,
        CASE1 => "01",
        din1_WIDTH => 3,
        CASE2 => "00",
        din2_WIDTH => 3,
        def_WIDTH => 3,
        sel_WIDTH => 2,
        dout_WIDTH => 3)
    port map (
        din0 => len_305_fu_2377_p2,
        din1 => ap_const_lv3_0,
        din2 => len_265_fu_2286_p3,
        def => len_305_fu_2377_p7,
        sel => len_305_fu_2377_p8,
        dout => len_305_fu_2377_p9);

    sparsemux_7_2_3_1_1_U513 : component gzipcMulticoreStreaming_sparsemux_7_2_3_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 3,
        CASE1 => "01",
        din1_WIDTH => 3,
        CASE2 => "00",
        din2_WIDTH => 3,
        def_WIDTH => 3,
        sel_WIDTH => 2,
        dout_WIDTH => 3)
    port map (
        din0 => len_306_fu_2497_p2,
        din1 => ap_const_lv3_0,
        din2 => len_277_fu_2406_p3,
        def => len_306_fu_2497_p7,
        sel => len_306_fu_2497_p8,
        dout => len_306_fu_2497_p9);

    sparsemux_7_2_3_1_1_U514 : component gzipcMulticoreStreaming_sparsemux_7_2_3_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 3,
        CASE1 => "01",
        din1_WIDTH => 3,
        CASE2 => "00",
        din2_WIDTH => 3,
        def_WIDTH => 3,
        sel_WIDTH => 2,
        dout_WIDTH => 3)
    port map (
        din0 => len_307_fu_2617_p2,
        din1 => ap_const_lv3_0,
        din2 => len_289_fu_2526_p3,
        def => len_307_fu_2617_p7,
        sel => len_307_fu_2617_p8,
        dout => len_307_fu_2617_p9);

    sparsemux_7_2_3_1_1_U515 : component gzipcMulticoreStreaming_sparsemux_7_2_3_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 3,
        CASE1 => "01",
        din1_WIDTH => 3,
        CASE2 => "00",
        din2_WIDTH => 3,
        def_WIDTH => 3,
        sel_WIDTH => 2,
        dout_WIDTH => 3)
    port map (
        din0 => len_308_fu_2737_p2,
        din1 => ap_const_lv3_0,
        din2 => len_301_fu_2646_p3,
        def => len_308_fu_2737_p7,
        sel => len_308_fu_2737_p8,
        dout => len_308_fu_2737_p9);

    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    iIdx_1_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    iIdx_1_fu_302 <= ap_const_lv32_5;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (nextVal_strobe_reg_456_pp0_iter2_reg = ap_const_lv1_1))) then 
                    iIdx_1_fu_302 <= iIdx_fu_1075_p2;
                end if;
            end if; 
        end if;
    end process;

    nextVal_data_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    nextVal_data_fu_306 <= p_phi10_reload;
                elsif (((nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    nextVal_data_fu_306 <= trunc_ln245_fu_521_p1;
                end if;
            end if; 
        end if;
    end process;

    nextVal_strobe_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if ((ap_const_boolean_1 = ap_condition_2244)) then 
                    nextVal_strobe_reg_456 <= downStream_3_dout(8 downto 8);
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1))) then 
                    nextVal_strobe_reg_456 <= empty_55;
                end if;
            end if; 
        end if;
    end process;

    present_window_86_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    present_window_86_fu_314 <= present_window_90_reload;
                elsif (((nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    present_window_86_fu_314 <= present_window_87_fu_318;
                end if;
            end if; 
        end if;
    end process;

    present_window_87_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    present_window_87_fu_318 <= present_window_91_reload;
                elsif (((nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    present_window_87_fu_318 <= present_window_88_fu_322;
                end if;
            end if; 
        end if;
    end process;

    present_window_88_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    present_window_88_fu_322 <= present_window_92_reload;
                elsif (((nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    present_window_88_fu_322 <= present_window_89_fu_326;
                end if;
            end if; 
        end if;
    end process;

    present_window_89_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    present_window_89_fu_326 <= present_window_93_reload;
                elsif (((nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    present_window_89_fu_326 <= lclBufStream_dout;
                end if;
            end if; 
        end if;
    end process;

    present_window_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    present_window_fu_310 <= present_window_89_reload;
                elsif (((nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    present_window_fu_310 <= present_window_86_fu_314;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln328_10_reg_3619 <= add_ln328_10_fu_2659_p2;
                add_ln328_10_reg_3619_pp0_iter7_reg <= add_ln328_10_reg_3619;
                add_ln328_9_reg_3608 <= add_ln328_9_fu_2539_p2;
                add_ln328_9_reg_3608_pp0_iter7_reg <= add_ln328_9_reg_3608;
                add_ln328_reg_3597 <= add_ln328_fu_2419_p2;
                add_ln328_reg_3597_pp0_iter7_reg <= add_ln328_reg_3597;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                compareIdx_16_reg_3067 <= dict_q1(143 downto 120);
                compareIdx_17_reg_3102 <= dict_q1(215 downto 192);
                compareIdx_18_reg_3137 <= dict_q1(287 downto 264);
                compareIdx_19_reg_3172 <= dict_q1(359 downto 336);
                compareIdx_20_reg_3207 <= dict_q1(431 downto 408);
                compareIdx_reg_3032 <= dict_q1(71 downto 48);
                currIdx_reg_3006 <= currIdx_fu_648_p2;
                dict_addr_reg_3000 <= zext_ln301_fu_635_p1(12 - 1 downto 0);
                dict_addr_reg_3000_pp0_iter3_reg <= dict_addr_reg_3000;
                done_100_reg_3339 <= done_100_fu_1430_p2;
                done_101_reg_3526 <= done_101_fu_1949_p2;
                done_105_reg_3380 <= done_105_fu_1550_p2;
                done_106_reg_3537 <= done_106_fu_1983_p2;
                done_110_reg_3421 <= done_110_fu_1670_p2;
                done_111_reg_3548 <= done_111_fu_2017_p2;
                done_115_reg_3462 <= done_115_fu_1790_p2;
                done_116_reg_3559 <= done_116_fu_2051_p2;
                done_90_reg_3247 <= done_90_fu_1174_p2;
                done_95_reg_3293 <= done_95_fu_1304_p2;
                icmp_ln321_109_reg_3258 <= icmp_ln321_109_fu_1186_p2;
                icmp_ln321_110_reg_3263 <= icmp_ln321_110_fu_1190_p2;
                icmp_ln321_115_reg_3304 <= icmp_ln321_115_fu_1316_p2;
                icmp_ln321_116_reg_3309 <= icmp_ln321_116_fu_1320_p2;
                icmp_ln321_121_reg_3345 <= icmp_ln321_121_fu_1436_p2;
                icmp_ln321_122_reg_3350 <= icmp_ln321_122_fu_1440_p2;
                icmp_ln321_122_reg_3350_pp0_iter5_reg <= icmp_ln321_122_reg_3350;
                icmp_ln321_127_reg_3386 <= icmp_ln321_127_fu_1556_p2;
                icmp_ln321_128_reg_3391 <= icmp_ln321_128_fu_1560_p2;
                icmp_ln321_128_reg_3391_pp0_iter5_reg <= icmp_ln321_128_reg_3391;
                icmp_ln321_133_reg_3427 <= icmp_ln321_133_fu_1676_p2;
                icmp_ln321_134_reg_3432 <= icmp_ln321_134_fu_1680_p2;
                icmp_ln321_134_reg_3432_pp0_iter5_reg <= icmp_ln321_134_reg_3432;
                icmp_ln321_139_reg_3468 <= icmp_ln321_139_fu_1796_p2;
                icmp_ln321_140_reg_3473 <= icmp_ln321_140_fu_1800_p2;
                icmp_ln321_140_reg_3473_pp0_iter5_reg <= icmp_ln321_140_reg_3473;
                icmp_ln327_52_reg_3268 <= icmp_ln327_52_fu_1194_p2;
                icmp_ln327_52_reg_3268_pp0_iter5_reg <= icmp_ln327_52_reg_3268;
                icmp_ln327_53_reg_3278 <= icmp_ln327_53_fu_1218_p2;
                icmp_ln327_53_reg_3278_pp0_iter5_reg <= icmp_ln327_53_reg_3278;
                icmp_ln327_55_reg_3314 <= icmp_ln327_55_fu_1324_p2;
                icmp_ln327_55_reg_3314_pp0_iter5_reg <= icmp_ln327_55_reg_3314;
                icmp_ln327_56_reg_3324 <= icmp_ln327_56_fu_1348_p2;
                icmp_ln327_56_reg_3324_pp0_iter5_reg <= icmp_ln327_56_reg_3324;
                icmp_ln327_58_reg_3355 <= icmp_ln327_58_fu_1444_p2;
                icmp_ln327_58_reg_3355_pp0_iter5_reg <= icmp_ln327_58_reg_3355;
                icmp_ln327_59_reg_3365 <= icmp_ln327_59_fu_1468_p2;
                icmp_ln327_59_reg_3365_pp0_iter5_reg <= icmp_ln327_59_reg_3365;
                icmp_ln327_61_reg_3396 <= icmp_ln327_61_fu_1564_p2;
                icmp_ln327_61_reg_3396_pp0_iter5_reg <= icmp_ln327_61_reg_3396;
                icmp_ln327_62_reg_3406 <= icmp_ln327_62_fu_1588_p2;
                icmp_ln327_62_reg_3406_pp0_iter5_reg <= icmp_ln327_62_reg_3406;
                icmp_ln327_64_reg_3437 <= icmp_ln327_64_fu_1684_p2;
                icmp_ln327_64_reg_3437_pp0_iter5_reg <= icmp_ln327_64_reg_3437;
                icmp_ln327_65_reg_3447 <= icmp_ln327_65_fu_1708_p2;
                icmp_ln327_65_reg_3447_pp0_iter5_reg <= icmp_ln327_65_reg_3447;
                icmp_ln327_67_reg_3478 <= icmp_ln327_67_fu_1804_p2;
                icmp_ln327_67_reg_3478_pp0_iter5_reg <= icmp_ln327_67_reg_3478;
                icmp_ln327_68_reg_3488 <= icmp_ln327_68_fu_1828_p2;
                icmp_ln327_68_reg_3488_pp0_iter5_reg <= icmp_ln327_68_reg_3488;
                icmp_ln329_16_reg_3329 <= icmp_ln329_16_fu_1354_p2;
                icmp_ln329_16_reg_3329_pp0_iter5_reg <= icmp_ln329_16_reg_3329;
                icmp_ln329_17_reg_3370 <= icmp_ln329_17_fu_1474_p2;
                icmp_ln329_17_reg_3370_pp0_iter5_reg <= icmp_ln329_17_reg_3370;
                icmp_ln329_18_reg_3411 <= icmp_ln329_18_fu_1594_p2;
                icmp_ln329_18_reg_3411_pp0_iter5_reg <= icmp_ln329_18_reg_3411;
                icmp_ln329_19_reg_3452 <= icmp_ln329_19_fu_1714_p2;
                icmp_ln329_19_reg_3452_pp0_iter5_reg <= icmp_ln329_19_reg_3452;
                icmp_ln329_20_reg_3493 <= icmp_ln329_20_fu_1834_p2;
                icmp_ln329_20_reg_3493_pp0_iter5_reg <= icmp_ln329_20_reg_3493;
                icmp_ln329_reg_3283 <= icmp_ln329_fu_1224_p2;
                icmp_ln329_reg_3283_pp0_iter5_reg <= icmp_ln329_reg_3283;
                icmp_ln336_16_reg_3575 <= icmp_ln336_16_fu_2263_p2;
                icmp_ln336_18_reg_3635 <= icmp_ln336_18_fu_2786_p2;
                icmp_ln336_19_reg_3645 <= icmp_ln336_19_fu_2798_p2;
                icmp_ln336_reg_3570 <= icmp_ln336_fu_2163_p2;
                inValue_reg_2979_pp0_iter2_reg <= inValue_reg_2979;
                inValue_reg_2979_pp0_iter3_reg <= inValue_reg_2979_pp0_iter2_reg;
                len_236_reg_3253 <= len_236_fu_1180_p2;
                len_241_reg_3498 <= len_241_fu_1873_p3;
                len_248_reg_3299 <= len_248_fu_1310_p2;
                len_253_reg_3512 <= len_253_fu_1920_p3;
                len_259_reg_3334 <= len_259_fu_1418_p3;
                len_263_reg_3531 <= len_263_fu_1959_p3;
                len_271_reg_3375 <= len_271_fu_1538_p3;
                len_275_reg_3542 <= len_275_fu_1993_p3;
                len_283_reg_3416 <= len_283_fu_1658_p3;
                len_287_reg_3553 <= len_287_fu_2027_p3;
                len_295_reg_3457 <= len_295_fu_1778_p3;
                len_299_reg_3564 <= len_299_fu_2061_p3;
                len_305_reg_3591 <= len_305_fu_2377_p9;
                len_306_reg_3602 <= len_306_fu_2497_p9;
                len_307_reg_3613 <= len_307_fu_2617_p9;
                len_307_reg_3613_pp0_iter7_reg <= len_307_reg_3613;
                len_308_reg_3624 <= len_308_fu_2737_p9;
                len_308_reg_3624_pp0_iter7_reg <= len_308_reg_3624;
                match_length_32_reg_3580 <= match_length_32_fu_2269_p3;
                match_length_36_reg_3640 <= match_length_36_fu_2791_p3;
                match_offset_17_reg_3519 <= match_offset_17_fu_1928_p2;
                match_offset_17_reg_3519_pp0_iter6_reg <= match_offset_17_reg_3519;
                match_offset_19_reg_3586 <= match_offset_19_fu_2299_p2;
                match_offset_20_reg_3630 <= match_offset_20_fu_2779_p3;
                match_offset_reg_3505 <= match_offset_fu_1881_p2;
                match_offset_reg_3505_pp0_iter6_reg <= match_offset_reg_3505;
                nextVal_strobe_reg_456_pp0_iter2_reg <= nextVal_strobe_reg_456_pp0_iter1_reg;
                nextVal_strobe_reg_456_pp0_iter3_reg <= nextVal_strobe_reg_456_pp0_iter2_reg;
                nextVal_strobe_reg_456_pp0_iter4_reg <= nextVal_strobe_reg_456_pp0_iter3_reg;
                nextVal_strobe_reg_456_pp0_iter5_reg <= nextVal_strobe_reg_456_pp0_iter4_reg;
                nextVal_strobe_reg_456_pp0_iter6_reg <= nextVal_strobe_reg_456_pp0_iter5_reg;
                nextVal_strobe_reg_456_pp0_iter7_reg <= nextVal_strobe_reg_456_pp0_iter6_reg;
                present_window_90_reg_2919_pp0_iter2_reg <= present_window_90_reg_2919;
                present_window_90_reg_2919_pp0_iter3_reg <= present_window_90_reg_2919_pp0_iter2_reg;
                present_window_90_reg_2919_pp0_iter4_reg <= present_window_90_reg_2919_pp0_iter3_reg;
                present_window_90_reg_2919_pp0_iter5_reg <= present_window_90_reg_2919_pp0_iter4_reg;
                present_window_90_reg_2919_pp0_iter6_reg <= present_window_90_reg_2919_pp0_iter5_reg;
                present_window_91_reg_2931_pp0_iter2_reg <= present_window_91_reg_2931;
                present_window_91_reg_2931_pp0_iter3_reg <= present_window_91_reg_2931_pp0_iter2_reg;
                present_window_91_reg_2931_pp0_iter4_reg <= present_window_91_reg_2931_pp0_iter3_reg;
                present_window_91_reg_2931_pp0_iter5_reg <= present_window_91_reg_2931_pp0_iter4_reg;
                present_window_91_reg_2931_pp0_iter6_reg <= present_window_91_reg_2931_pp0_iter5_reg;
                present_window_92_reg_2943_pp0_iter2_reg <= present_window_92_reg_2943;
                present_window_92_reg_2943_pp0_iter3_reg <= present_window_92_reg_2943_pp0_iter2_reg;
                present_window_92_reg_2943_pp0_iter4_reg <= present_window_92_reg_2943_pp0_iter3_reg;
                present_window_92_reg_2943_pp0_iter5_reg <= present_window_92_reg_2943_pp0_iter4_reg;
                present_window_92_reg_2943_pp0_iter6_reg <= present_window_92_reg_2943_pp0_iter5_reg;
                present_window_93_reg_2955_pp0_iter2_reg <= present_window_93_reg_2955;
                present_window_93_reg_2955_pp0_iter3_reg <= present_window_93_reg_2955_pp0_iter2_reg;
                present_window_93_reg_2955_pp0_iter4_reg <= present_window_93_reg_2955_pp0_iter3_reg;
                present_window_93_reg_2955_pp0_iter5_reg <= present_window_93_reg_2955_pp0_iter4_reg;
                present_window_93_reg_2955_pp0_iter6_reg <= present_window_93_reg_2955_pp0_iter5_reg;
                present_window_load_reg_2967_pp0_iter2_reg <= present_window_load_reg_2967;
                present_window_load_reg_2967_pp0_iter3_reg <= present_window_load_reg_2967_pp0_iter2_reg;
                present_window_load_reg_2967_pp0_iter4_reg <= present_window_load_reg_2967_pp0_iter3_reg;
                present_window_load_reg_2967_pp0_iter5_reg <= present_window_load_reg_2967_pp0_iter4_reg;
                present_window_load_reg_2967_pp0_iter6_reg <= present_window_load_reg_2967_pp0_iter5_reg;
                present_window_load_reg_2967_pp0_iter7_reg <= present_window_load_reg_2967_pp0_iter6_reg;
                tmp_129_reg_3047 <= dict_q1(23 downto 16);
                tmp_130_reg_3052 <= dict_q1(31 downto 24);
                tmp_131_reg_3057 <= dict_q1(39 downto 32);
                tmp_132_reg_3062 <= dict_q1(47 downto 40);
                tmp_134_reg_3072 <= dict_q1(79 downto 72);
                tmp_135_reg_3077 <= dict_q1(87 downto 80);
                tmp_136_reg_3082 <= dict_q1(95 downto 88);
                tmp_137_reg_3087 <= dict_q1(103 downto 96);
                tmp_138_reg_3092 <= dict_q1(111 downto 104);
                tmp_139_reg_3097 <= dict_q1(119 downto 112);
                tmp_141_reg_3107 <= dict_q1(151 downto 144);
                tmp_142_reg_3112 <= dict_q1(159 downto 152);
                tmp_143_reg_3117 <= dict_q1(167 downto 160);
                tmp_144_reg_3122 <= dict_q1(175 downto 168);
                tmp_145_reg_3127 <= dict_q1(183 downto 176);
                tmp_146_reg_3132 <= dict_q1(191 downto 184);
                tmp_148_reg_3142 <= dict_q1(223 downto 216);
                tmp_149_reg_3147 <= dict_q1(231 downto 224);
                tmp_150_reg_3152 <= dict_q1(239 downto 232);
                tmp_151_reg_3157 <= dict_q1(247 downto 240);
                tmp_152_reg_3162 <= dict_q1(255 downto 248);
                tmp_153_reg_3167 <= dict_q1(263 downto 256);
                tmp_155_reg_3177 <= dict_q1(295 downto 288);
                tmp_156_reg_3182 <= dict_q1(303 downto 296);
                tmp_157_reg_3187 <= dict_q1(311 downto 304);
                tmp_158_reg_3192 <= dict_q1(319 downto 312);
                tmp_159_reg_3197 <= dict_q1(327 downto 320);
                tmp_160_reg_3202 <= dict_q1(335 downto 328);
                tmp_162_reg_3212 <= dict_q1(367 downto 360);
                tmp_163_reg_3217 <= dict_q1(375 downto 368);
                tmp_164_reg_3222 <= dict_q1(383 downto 376);
                tmp_165_reg_3227 <= dict_q1(391 downto 384);
                tmp_166_reg_3232 <= dict_q1(399 downto 392);
                tmp_167_reg_3237 <= dict_q1(407 downto 400);
                tmp_s_reg_3042 <= dict_q1(15 downto 8);
                trunc_ln302_reg_3022 <= trunc_ln302_fu_653_p1;
                trunc_ln307_reg_3027 <= trunc_ln307_fu_657_p1;
                trunc_ln321_reg_3037 <= trunc_ln321_fu_671_p1;
                trunc_ln327_16_reg_3319 <= trunc_ln327_16_fu_1334_p1;
                trunc_ln327_17_reg_3360 <= trunc_ln327_17_fu_1454_p1;
                trunc_ln327_17_reg_3360_pp0_iter5_reg <= trunc_ln327_17_reg_3360;
                trunc_ln327_18_reg_3401 <= trunc_ln327_18_fu_1574_p1;
                trunc_ln327_18_reg_3401_pp0_iter5_reg <= trunc_ln327_18_reg_3401;
                trunc_ln327_19_reg_3442 <= trunc_ln327_19_fu_1694_p1;
                trunc_ln327_19_reg_3442_pp0_iter5_reg <= trunc_ln327_19_reg_3442;
                trunc_ln327_20_reg_3483 <= trunc_ln327_20_fu_1814_p1;
                trunc_ln327_20_reg_3483_pp0_iter5_reg <= trunc_ln327_20_reg_3483;
                trunc_ln327_reg_3273 <= trunc_ln327_fu_1204_p1;
                    zext_ln317_16_reg_3288(1 downto 0) <= zext_ln317_16_fu_1296_p1(1 downto 0);
                    zext_ln317_reg_3242(1 downto 0) <= zext_ln317_fu_1166_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                hash_reg_2995 <= hash_fu_599_p2;
                inValue_reg_2979 <= lclBufStream_dout;
                nextVal_strobe_reg_456_pp0_iter1_reg <= nextVal_strobe_reg_456;
                present_window_load_reg_2967 <= present_window_fu_310;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                present_window_90_reg_2919 <= present_window_86_fu_314;
                present_window_91_reg_2931 <= present_window_87_fu_318;
                present_window_92_reg_2943 <= present_window_88_fu_322;
                present_window_93_reg_2955 <= present_window_89_fu_326;
            end if;
        end if;
    end process;
    zext_ln317_reg_3242(2) <= '0';
    zext_ln317_16_reg_3288(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln276_fu_642_p2 <= std_logic_vector(unsigned(iIdx_1_fu_302) + unsigned(ap_const_lv32_FFFFFFFB));
    add_ln328_10_fu_2659_p2 <= std_logic_vector(unsigned(trunc_ln327_20_reg_3483_pp0_iter5_reg) + unsigned(ap_const_lv16_FFFF));
    add_ln328_9_fu_2539_p2 <= std_logic_vector(unsigned(trunc_ln327_19_reg_3442_pp0_iter5_reg) + unsigned(ap_const_lv16_FFFF));
    add_ln328_fu_2419_p2 <= std_logic_vector(unsigned(trunc_ln327_18_reg_3401_pp0_iter5_reg) + unsigned(ap_const_lv16_FFFF));
    and_ln328_70_fu_2106_p2 <= (xor_ln329_fu_2079_p2 and icmp_ln328_fu_2074_p2);
    and_ln328_71_fu_2112_p2 <= (icmp_ln327_fu_2069_p2 and and_ln328_70_fu_2106_p2);
    and_ln328_72_fu_2118_p2 <= (and_ln328_fu_2102_p2 and and_ln328_71_fu_2112_p2);
    and_ln328_73_fu_2202_p2 <= (icmp_ln327_56_reg_3324_pp0_iter5_reg and icmp_ln327_55_reg_3314_pp0_iter5_reg);
    and_ln328_74_fu_2206_p2 <= (xor_ln329_16_fu_2179_p2 and icmp_ln328_16_fu_2174_p2);
    and_ln328_75_fu_2212_p2 <= (icmp_ln327_54_fu_2169_p2 and and_ln328_74_fu_2206_p2);
    and_ln328_76_fu_2218_p2 <= (and_ln328_75_fu_2212_p2 and and_ln328_73_fu_2202_p2);
    and_ln328_77_fu_2335_p2 <= (icmp_ln327_59_reg_3365_pp0_iter5_reg and icmp_ln327_58_reg_3355_pp0_iter5_reg);
    and_ln328_78_fu_2339_p2 <= (xor_ln329_17_fu_2310_p2 and icmp_ln328_17_fu_2304_p2);
    and_ln328_79_fu_2345_p2 <= (icmp_ln327_57_fu_2293_p2 and and_ln328_78_fu_2339_p2);
    and_ln328_80_fu_2351_p2 <= (and_ln328_79_fu_2345_p2 and and_ln328_77_fu_2335_p2);
    and_ln328_81_fu_2455_p2 <= (icmp_ln327_62_reg_3406_pp0_iter5_reg and icmp_ln327_61_reg_3396_pp0_iter5_reg);
    and_ln328_82_fu_2459_p2 <= (xor_ln329_18_fu_2430_p2 and icmp_ln328_18_fu_2424_p2);
    and_ln328_83_fu_2465_p2 <= (icmp_ln327_60_fu_2413_p2 and and_ln328_82_fu_2459_p2);
    and_ln328_84_fu_2471_p2 <= (and_ln328_83_fu_2465_p2 and and_ln328_81_fu_2455_p2);
    and_ln328_85_fu_2575_p2 <= (icmp_ln327_65_reg_3447_pp0_iter5_reg and icmp_ln327_64_reg_3437_pp0_iter5_reg);
    and_ln328_86_fu_2579_p2 <= (xor_ln329_19_fu_2550_p2 and icmp_ln328_19_fu_2544_p2);
    and_ln328_87_fu_2585_p2 <= (icmp_ln327_63_fu_2533_p2 and and_ln328_86_fu_2579_p2);
    and_ln328_88_fu_2591_p2 <= (and_ln328_87_fu_2585_p2 and and_ln328_85_fu_2575_p2);
    and_ln328_89_fu_2695_p2 <= (icmp_ln327_68_reg_3488_pp0_iter5_reg and icmp_ln327_67_reg_3478_pp0_iter5_reg);
    and_ln328_90_fu_2699_p2 <= (xor_ln329_20_fu_2670_p2 and icmp_ln328_20_fu_2664_p2);
    and_ln328_91_fu_2705_p2 <= (icmp_ln327_66_fu_2653_p2 and and_ln328_90_fu_2699_p2);
    and_ln328_92_fu_2711_p2 <= (and_ln328_91_fu_2705_p2 and and_ln328_89_fu_2695_p2);
    and_ln328_fu_2102_p2 <= (icmp_ln327_53_reg_3278_pp0_iter5_reg and icmp_ln327_52_reg_3268_pp0_iter5_reg);
    and_ln330_16_fu_2224_p2 <= (icmp_ln330_35_fu_2184_p2 and and_ln328_76_fu_2218_p2);
    and_ln330_17_fu_2357_p2 <= (icmp_ln330_37_fu_2315_p2 and and_ln328_80_fu_2351_p2);
    and_ln330_18_fu_2477_p2 <= (icmp_ln330_39_fu_2435_p2 and and_ln328_84_fu_2471_p2);
    and_ln330_19_fu_2597_p2 <= (icmp_ln330_41_fu_2555_p2 and and_ln328_88_fu_2591_p2);
    and_ln330_20_fu_2717_p2 <= (icmp_ln330_43_fu_2675_p2 and and_ln328_92_fu_2711_p2);
    and_ln330_fu_2124_p2 <= (icmp_ln330_fu_2084_p2 and and_ln328_72_fu_2118_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_block_state2_pp0_stage0_iter1, ap_block_state9_pp0_stage0_iter8)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_block_state2_pp0_stage0_iter1, ap_block_state9_pp0_stage0_iter8)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_block_state2_pp0_stage0_iter1, ap_block_state9_pp0_stage0_iter8)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(lclBufStream_empty_n, nextVal_strobe_reg_456, lclBufStream_full_n, downStream_3_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((downStream_3_empty_n = ap_const_logic_0) and (nextVal_strobe_reg_456 = ap_const_lv1_1)) or ((lclBufStream_full_n = ap_const_logic_0) and (nextVal_strobe_reg_456 = ap_const_lv1_1)) or ((nextVal_strobe_reg_456 = ap_const_lv1_1) and (lclBufStream_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state9_pp0_stage0_iter8_assign_proc : process(compressedStream_full_n, nextVal_strobe_reg_456_pp0_iter7_reg)
    begin
                ap_block_state9_pp0_stage0_iter8 <= ((nextVal_strobe_reg_456_pp0_iter7_reg = ap_const_lv1_1) and (compressedStream_full_n = ap_const_logic_0));
    end process;


    ap_condition_2237_assign_proc : process(ap_enable_reg_pp0_iter1, nextVal_strobe_reg_456, ap_block_pp0_stage0)
    begin
                ap_condition_2237 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_2244_assign_proc : process(ap_enable_reg_pp0_iter1, nextVal_strobe_reg_456, ap_block_pp0_stage0_11001)
    begin
                ap_condition_2244 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_phi_mux_nextVal_strobe_phi_fu_459_p4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_nextVal_strobe_phi_fu_459_p4 = ap_const_lv1_0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, nextVal_strobe_reg_456, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (nextVal_strobe_reg_456 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter7_reg, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_125_assign_proc : process(nextVal_strobe_reg_456_pp0_iter3_reg)
    begin
                ap_enable_operation_125 <= (nextVal_strobe_reg_456_pp0_iter3_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_73_assign_proc : process(nextVal_strobe_reg_456_pp0_iter1_reg)
    begin
                ap_enable_operation_73 <= (nextVal_strobe_reg_456_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_77_assign_proc : process(nextVal_strobe_reg_456_pp0_iter2_reg)
    begin
                ap_enable_operation_77 <= (nextVal_strobe_reg_456_pp0_iter2_reg = ap_const_lv1_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state4_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state4_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_state5_pp0_iter4_stage0 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_nextVal_strobe_phi_fu_459_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, nextVal_strobe_reg_456, downStream_3_dout, empty_55, ap_loop_init, ap_condition_2237)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_2237)) then 
                ap_phi_mux_nextVal_strobe_phi_fu_459_p4 <= downStream_3_dout(8 downto 8);
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_nextVal_strobe_phi_fu_459_p4 <= empty_55;
            else 
                ap_phi_mux_nextVal_strobe_phi_fu_459_p4 <= nextVal_strobe_reg_456;
            end if;
        else 
            ap_phi_mux_nextVal_strobe_phi_fu_459_p4 <= nextVal_strobe_reg_456;
        end if; 
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    compressedStream_blk_n_assign_proc : process(ap_enable_reg_pp0_iter8, compressedStream_full_n, nextVal_strobe_reg_456_pp0_iter7_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (nextVal_strobe_reg_456_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            compressedStream_blk_n <= compressedStream_full_n;
        else 
            compressedStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    compressedStream_din <= tmp_169_fu_2842_p5;
    compressedStream_write <= compressedStream_write_local;

    compressedStream_write_local_assign_proc : process(ap_enable_reg_pp0_iter8, nextVal_strobe_reg_456_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (nextVal_strobe_reg_456_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            compressedStream_write_local <= ap_const_logic_1;
        else 
            compressedStream_write_local <= ap_const_logic_0;
        end if; 
    end process;

    currIdx_fu_648_p2 <= std_logic_vector(unsigned(add_ln276_fu_642_p2) + unsigned(empty));
    dictWriteValue_fu_1086_p9 <= (((((((trunc_ln302_reg_3022 & trunc_ln307_reg_3027) & inValue_reg_2979_pp0_iter3_reg) & present_window_93_reg_2955_pp0_iter3_reg) & present_window_92_reg_2943_pp0_iter3_reg) & present_window_91_reg_2931_pp0_iter3_reg) & present_window_90_reg_2919_pp0_iter3_reg) & present_window_load_reg_2967_pp0_iter3_reg);
    dict_address0 <= dict_addr_reg_3000_pp0_iter3_reg;
    dict_address1 <= zext_ln301_fu_635_p1(12 - 1 downto 0);
    dict_ce0 <= dict_ce0_local;

    dict_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            dict_ce0_local <= ap_const_logic_1;
        else 
            dict_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    dict_ce1 <= dict_ce1_local;

    dict_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            dict_ce1_local <= ap_const_logic_1;
        else 
            dict_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    dict_d0 <= dictWriteValue_fu_1086_p9;
    dict_we0 <= dict_we0_local;

    dict_we0_local_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, nextVal_strobe_reg_456_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (nextVal_strobe_reg_456_pp0_iter3_reg = ap_const_lv1_1))) then 
            dict_we0_local <= ap_const_logic_1;
        else 
            dict_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    done_100_fu_1430_p2 <= (icmp_ln321_120_fu_1426_p2 or done_99_fu_1406_p2);
    done_101_fu_1949_p2 <= (icmp_ln321_121_reg_3345 or done_100_reg_3339);
    done_102_fu_1490_p2 <= (len_267_fu_1482_p2 xor ap_const_lv1_1);
    done_103_fu_1500_p2 <= (icmp_ln321_124_fu_1496_p2 or done_102_fu_1490_p2);
    done_104_fu_1526_p2 <= (icmp_ln321_125_fu_1522_p2 or done_103_fu_1500_p2);
    done_105_fu_1550_p2 <= (icmp_ln321_126_fu_1546_p2 or done_104_fu_1526_p2);
    done_106_fu_1983_p2 <= (icmp_ln321_127_reg_3386 or done_105_reg_3380);
    done_107_fu_1610_p2 <= (len_279_fu_1602_p2 xor ap_const_lv1_1);
    done_108_fu_1620_p2 <= (icmp_ln321_130_fu_1616_p2 or done_107_fu_1610_p2);
    done_109_fu_1646_p2 <= (icmp_ln321_131_fu_1642_p2 or done_108_fu_1620_p2);
    done_110_fu_1670_p2 <= (icmp_ln321_132_fu_1666_p2 or done_109_fu_1646_p2);
    done_111_fu_2017_p2 <= (icmp_ln321_133_reg_3427 or done_110_reg_3421);
    done_112_fu_1730_p2 <= (len_291_fu_1722_p2 xor ap_const_lv1_1);
    done_113_fu_1740_p2 <= (icmp_ln321_136_fu_1736_p2 or done_112_fu_1730_p2);
    done_114_fu_1766_p2 <= (icmp_ln321_137_fu_1762_p2 or done_113_fu_1740_p2);
    done_115_fu_1790_p2 <= (icmp_ln321_138_fu_1786_p2 or done_114_fu_1766_p2);
    done_116_fu_2051_p2 <= (icmp_ln321_139_reg_3468 or done_115_reg_3462);
    done_88_fu_1120_p2 <= (icmp_ln321_fu_1116_p2 or done_fu_1110_p2);
    done_89_fu_1146_p2 <= (icmp_ln321_107_fu_1142_p2 or done_88_fu_1120_p2);
    done_90_fu_1174_p2 <= (icmp_ln321_108_fu_1170_p2 or done_89_fu_1146_p2);
    done_91_fu_1844_p2 <= (icmp_ln321_109_reg_3258 or done_90_reg_3247);
    done_92_fu_1240_p2 <= (len_243_fu_1232_p2 xor ap_const_lv1_1);
    done_93_fu_1250_p2 <= (icmp_ln321_112_fu_1246_p2 or done_92_fu_1240_p2);
    done_94_fu_1276_p2 <= (icmp_ln321_113_fu_1272_p2 or done_93_fu_1250_p2);
    done_95_fu_1304_p2 <= (icmp_ln321_114_fu_1300_p2 or done_94_fu_1276_p2);
    done_96_fu_1891_p2 <= (icmp_ln321_115_reg_3304 or done_95_reg_3293);
    done_97_fu_1370_p2 <= (len_255_fu_1362_p2 xor ap_const_lv1_1);
    done_98_fu_1380_p2 <= (icmp_ln321_118_fu_1376_p2 or done_97_fu_1370_p2);
    done_99_fu_1406_p2 <= (icmp_ln321_119_fu_1402_p2 or done_98_fu_1380_p2);
    done_fu_1110_p2 <= (len_fu_1102_p2 xor ap_const_lv1_1);

    downStream_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, nextVal_strobe_reg_456, downStream_3_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            downStream_3_blk_n <= downStream_3_empty_n;
        else 
            downStream_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    downStream_3_read <= downStream_3_read_local;

    downStream_3_read_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, nextVal_strobe_reg_456, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            downStream_3_read_local <= ap_const_logic_1;
        else 
            downStream_3_read_local <= ap_const_logic_0;
        end if; 
    end process;

    hash_fu_599_p2 <= (zext_ln294_8_fu_595_p1 xor shl_ln_fu_533_p3);
    iIdx_fu_1075_p2 <= std_logic_vector(unsigned(iIdx_1_fu_302) + unsigned(ap_const_lv32_1));
    icmp_ln321_107_fu_1142_p2 <= "0" when (tmp_129_reg_3047 = present_window_91_reg_2931_pp0_iter3_reg) else "1";
    icmp_ln321_108_fu_1170_p2 <= "0" when (tmp_130_reg_3052 = present_window_92_reg_2943_pp0_iter3_reg) else "1";
    icmp_ln321_109_fu_1186_p2 <= "0" when (tmp_131_reg_3057 = present_window_93_reg_2955_pp0_iter3_reg) else "1";
    icmp_ln321_110_fu_1190_p2 <= "0" when (tmp_132_reg_3062 = inValue_reg_2979_pp0_iter3_reg) else "1";
    icmp_ln321_112_fu_1246_p2 <= "0" when (tmp_135_reg_3077 = present_window_90_reg_2919_pp0_iter3_reg) else "1";
    icmp_ln321_113_fu_1272_p2 <= "0" when (tmp_136_reg_3082 = present_window_91_reg_2931_pp0_iter3_reg) else "1";
    icmp_ln321_114_fu_1300_p2 <= "0" when (tmp_137_reg_3087 = present_window_92_reg_2943_pp0_iter3_reg) else "1";
    icmp_ln321_115_fu_1316_p2 <= "0" when (tmp_138_reg_3092 = present_window_93_reg_2955_pp0_iter3_reg) else "1";
    icmp_ln321_116_fu_1320_p2 <= "0" when (tmp_139_reg_3097 = inValue_reg_2979_pp0_iter3_reg) else "1";
    icmp_ln321_118_fu_1376_p2 <= "0" when (tmp_142_reg_3112 = present_window_90_reg_2919_pp0_iter3_reg) else "1";
    icmp_ln321_119_fu_1402_p2 <= "0" when (tmp_143_reg_3117 = present_window_91_reg_2931_pp0_iter3_reg) else "1";
    icmp_ln321_120_fu_1426_p2 <= "0" when (tmp_144_reg_3122 = present_window_92_reg_2943_pp0_iter3_reg) else "1";
    icmp_ln321_121_fu_1436_p2 <= "0" when (tmp_145_reg_3127 = present_window_93_reg_2955_pp0_iter3_reg) else "1";
    icmp_ln321_122_fu_1440_p2 <= "0" when (tmp_146_reg_3132 = inValue_reg_2979_pp0_iter3_reg) else "1";
    icmp_ln321_124_fu_1496_p2 <= "0" when (tmp_149_reg_3147 = present_window_90_reg_2919_pp0_iter3_reg) else "1";
    icmp_ln321_125_fu_1522_p2 <= "0" when (tmp_150_reg_3152 = present_window_91_reg_2931_pp0_iter3_reg) else "1";
    icmp_ln321_126_fu_1546_p2 <= "0" when (tmp_151_reg_3157 = present_window_92_reg_2943_pp0_iter3_reg) else "1";
    icmp_ln321_127_fu_1556_p2 <= "0" when (tmp_152_reg_3162 = present_window_93_reg_2955_pp0_iter3_reg) else "1";
    icmp_ln321_128_fu_1560_p2 <= "0" when (tmp_153_reg_3167 = inValue_reg_2979_pp0_iter3_reg) else "1";
    icmp_ln321_130_fu_1616_p2 <= "0" when (tmp_156_reg_3182 = present_window_90_reg_2919_pp0_iter3_reg) else "1";
    icmp_ln321_131_fu_1642_p2 <= "0" when (tmp_157_reg_3187 = present_window_91_reg_2931_pp0_iter3_reg) else "1";
    icmp_ln321_132_fu_1666_p2 <= "0" when (tmp_158_reg_3192 = present_window_92_reg_2943_pp0_iter3_reg) else "1";
    icmp_ln321_133_fu_1676_p2 <= "0" when (tmp_159_reg_3197 = present_window_93_reg_2955_pp0_iter3_reg) else "1";
    icmp_ln321_134_fu_1680_p2 <= "0" when (tmp_160_reg_3202 = inValue_reg_2979_pp0_iter3_reg) else "1";
    icmp_ln321_136_fu_1736_p2 <= "0" when (tmp_163_reg_3217 = present_window_90_reg_2919_pp0_iter3_reg) else "1";
    icmp_ln321_137_fu_1762_p2 <= "0" when (tmp_164_reg_3222 = present_window_91_reg_2931_pp0_iter3_reg) else "1";
    icmp_ln321_138_fu_1786_p2 <= "0" when (tmp_165_reg_3227 = present_window_92_reg_2943_pp0_iter3_reg) else "1";
    icmp_ln321_139_fu_1796_p2 <= "0" when (tmp_166_reg_3232 = present_window_93_reg_2955_pp0_iter3_reg) else "1";
    icmp_ln321_140_fu_1800_p2 <= "0" when (tmp_167_reg_3237 = inValue_reg_2979_pp0_iter3_reg) else "1";
    icmp_ln321_fu_1116_p2 <= "0" when (tmp_s_reg_3042 = present_window_90_reg_2919_pp0_iter3_reg) else "1";
    icmp_ln327_52_fu_1194_p2 <= "1" when (unsigned(currIdx_reg_3006) > unsigned(zext_ln319_fu_1099_p1)) else "0";
    icmp_ln327_53_fu_1218_p2 <= "1" when (tmp_133_fu_1208_p4 = ap_const_lv17_0) else "0";
    icmp_ln327_54_fu_2169_p2 <= "1" when (unsigned(len_253_reg_3512) > unsigned(ap_const_lv3_2)) else "0";
    icmp_ln327_55_fu_1324_p2 <= "1" when (unsigned(currIdx_reg_3006) > unsigned(zext_ln319_16_fu_1229_p1)) else "0";
    icmp_ln327_56_fu_1348_p2 <= "1" when (tmp_140_fu_1338_p4 = ap_const_lv17_0) else "0";
    icmp_ln327_57_fu_2293_p2 <= "1" when (unsigned(len_265_fu_2286_p3) > unsigned(ap_const_lv3_2)) else "0";
    icmp_ln327_58_fu_1444_p2 <= "1" when (unsigned(currIdx_reg_3006) > unsigned(zext_ln319_17_fu_1359_p1)) else "0";
    icmp_ln327_59_fu_1468_p2 <= "1" when (tmp_147_fu_1458_p4 = ap_const_lv17_0) else "0";
    icmp_ln327_60_fu_2413_p2 <= "1" when (unsigned(len_277_fu_2406_p3) > unsigned(ap_const_lv3_2)) else "0";
    icmp_ln327_61_fu_1564_p2 <= "1" when (unsigned(currIdx_reg_3006) > unsigned(zext_ln319_18_fu_1479_p1)) else "0";
    icmp_ln327_62_fu_1588_p2 <= "1" when (tmp_154_fu_1578_p4 = ap_const_lv17_0) else "0";
    icmp_ln327_63_fu_2533_p2 <= "1" when (unsigned(len_289_fu_2526_p3) > unsigned(ap_const_lv3_2)) else "0";
    icmp_ln327_64_fu_1684_p2 <= "1" when (unsigned(currIdx_reg_3006) > unsigned(zext_ln319_19_fu_1599_p1)) else "0";
    icmp_ln327_65_fu_1708_p2 <= "1" when (tmp_161_fu_1698_p4 = ap_const_lv17_0) else "0";
    icmp_ln327_66_fu_2653_p2 <= "1" when (unsigned(len_301_fu_2646_p3) > unsigned(ap_const_lv3_2)) else "0";
    icmp_ln327_67_fu_1804_p2 <= "1" when (unsigned(currIdx_reg_3006) > unsigned(zext_ln319_20_fu_1719_p1)) else "0";
    icmp_ln327_68_fu_1828_p2 <= "1" when (tmp_168_fu_1818_p4 = ap_const_lv17_0) else "0";
    icmp_ln327_fu_2069_p2 <= "1" when (unsigned(len_241_reg_3498) > unsigned(ap_const_lv3_2)) else "0";
    icmp_ln328_16_fu_2174_p2 <= "0" when (match_offset_17_reg_3519 = ap_const_lv16_0) else "1";
    icmp_ln328_17_fu_2304_p2 <= "0" when (match_offset_19_fu_2299_p2 = ap_const_lv16_0) else "1";
    icmp_ln328_18_fu_2424_p2 <= "0" when (add_ln328_fu_2419_p2 = ap_const_lv16_0) else "1";
    icmp_ln328_19_fu_2544_p2 <= "0" when (add_ln328_9_fu_2539_p2 = ap_const_lv16_0) else "1";
    icmp_ln328_20_fu_2664_p2 <= "0" when (add_ln328_10_fu_2659_p2 = ap_const_lv16_0) else "1";
    icmp_ln328_fu_2074_p2 <= "0" when (match_offset_reg_3505 = ap_const_lv16_0) else "1";
    icmp_ln329_16_fu_1354_p2 <= "1" when (unsigned(zext_ln319_16_fu_1229_p1) < unsigned(empty)) else "0";
    icmp_ln329_17_fu_1474_p2 <= "1" when (unsigned(zext_ln319_17_fu_1359_p1) < unsigned(empty)) else "0";
    icmp_ln329_18_fu_1594_p2 <= "1" when (unsigned(zext_ln319_18_fu_1479_p1) < unsigned(empty)) else "0";
    icmp_ln329_19_fu_1714_p2 <= "1" when (unsigned(zext_ln319_19_fu_1599_p1) < unsigned(empty)) else "0";
    icmp_ln329_20_fu_1834_p2 <= "1" when (unsigned(zext_ln319_20_fu_1719_p1) < unsigned(empty)) else "0";
    icmp_ln329_fu_1224_p2 <= "1" when (unsigned(zext_ln319_fu_1099_p1) < unsigned(empty)) else "0";
    icmp_ln330_34_fu_2089_p2 <= "1" when (unsigned(match_offset_reg_3505) < unsigned(ap_const_lv16_1001)) else "0";
    icmp_ln330_35_fu_2184_p2 <= "1" when (len_253_reg_3512 = ap_const_lv3_3) else "0";
    icmp_ln330_36_fu_2189_p2 <= "1" when (unsigned(match_offset_17_reg_3519) < unsigned(ap_const_lv16_1001)) else "0";
    icmp_ln330_37_fu_2315_p2 <= "1" when (len_265_fu_2286_p3 = ap_const_lv3_3) else "0";
    icmp_ln330_38_fu_2321_p2 <= "1" when (unsigned(match_offset_19_fu_2299_p2) < unsigned(ap_const_lv16_1001)) else "0";
    icmp_ln330_39_fu_2435_p2 <= "1" when (len_277_fu_2406_p3 = ap_const_lv3_3) else "0";
    icmp_ln330_40_fu_2441_p2 <= "1" when (unsigned(add_ln328_fu_2419_p2) < unsigned(ap_const_lv16_1001)) else "0";
    icmp_ln330_41_fu_2555_p2 <= "1" when (len_289_fu_2526_p3 = ap_const_lv3_3) else "0";
    icmp_ln330_42_fu_2561_p2 <= "1" when (unsigned(add_ln328_9_fu_2539_p2) < unsigned(ap_const_lv16_1001)) else "0";
    icmp_ln330_43_fu_2675_p2 <= "1" when (len_301_fu_2646_p3 = ap_const_lv3_3) else "0";
    icmp_ln330_44_fu_2681_p2 <= "1" when (unsigned(add_ln328_10_fu_2659_p2) < unsigned(ap_const_lv16_1001)) else "0";
    icmp_ln330_fu_2084_p2 <= "1" when (len_241_reg_3498 = ap_const_lv3_3) else "0";
    icmp_ln336_16_fu_2263_p2 <= "1" when (unsigned(len_304_fu_2244_p9) > unsigned(len_303_fu_2144_p9)) else "0";
    icmp_ln336_17_fu_2769_p2 <= "1" when (unsigned(len_305_reg_3591) > unsigned(match_length_32_reg_3580)) else "0";
    icmp_ln336_18_fu_2786_p2 <= "1" when (unsigned(len_306_reg_3602) > unsigned(match_length_34_fu_2773_p3)) else "0";
    icmp_ln336_19_fu_2798_p2 <= "1" when (unsigned(len_307_reg_3613) > unsigned(match_length_36_fu_2791_p3)) else "0";
    icmp_ln336_20_fu_2819_p2 <= "1" when (unsigned(len_308_reg_3624_pp0_iter7_reg) > unsigned(match_length_38_fu_2808_p3)) else "0";
    icmp_ln336_fu_2163_p2 <= "0" when (len_303_fu_2144_p9 = ap_const_lv3_0) else "1";
    lclBufStream_din <= nextVal_data_fu_306;

    lclBufStream_i_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, lclBufStream_empty_n, nextVal_strobe_reg_456, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lclBufStream_i_blk_n <= lclBufStream_empty_n;
        else 
            lclBufStream_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lclBufStream_o_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, nextVal_strobe_reg_456, lclBufStream_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lclBufStream_o_blk_n <= lclBufStream_full_n;
        else 
            lclBufStream_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lclBufStream_read <= lclBufStream_read_local;

    lclBufStream_read_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, nextVal_strobe_reg_456, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lclBufStream_read_local <= ap_const_logic_1;
        else 
            lclBufStream_read_local <= ap_const_logic_0;
        end if; 
    end process;

    lclBufStream_write <= lclBufStream_write_local;

    lclBufStream_write_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, nextVal_strobe_reg_456, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (nextVal_strobe_reg_456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lclBufStream_write_local <= ap_const_logic_1;
        else 
            lclBufStream_write_local <= ap_const_logic_0;
        end if; 
    end process;

    len_232_fu_1126_p3 <= 
        ap_const_lv2_2 when (len_fu_1102_p2(0) = '1') else 
        ap_const_lv2_1;
    len_233_fu_1134_p3 <= 
        zext_ln321_fu_1106_p1 when (done_88_fu_1120_p2(0) = '1') else 
        len_232_fu_1126_p3;
    len_234_fu_1152_p2 <= std_logic_vector(unsigned(len_233_fu_1134_p3) + unsigned(ap_const_lv2_1));
    len_235_fu_1158_p3 <= 
        len_233_fu_1134_p3 when (done_89_fu_1146_p2(0) = '1') else 
        len_234_fu_1152_p2;
    len_236_fu_1180_p2 <= std_logic_vector(unsigned(zext_ln317_fu_1166_p1) + unsigned(ap_const_lv3_1));
    len_237_fu_1839_p3 <= 
        zext_ln317_reg_3242 when (done_90_reg_3247(0) = '1') else 
        len_236_reg_3253;
    len_238_fu_1848_p2 <= std_logic_vector(unsigned(len_237_fu_1839_p3) + unsigned(ap_const_lv3_1));
    len_239_fu_1854_p3 <= 
        len_237_fu_1839_p3 when (done_91_fu_1844_p2(0) = '1') else 
        len_238_fu_1848_p2;
    len_240_fu_1867_p2 <= std_logic_vector(unsigned(len_239_fu_1854_p3) + unsigned(ap_const_lv3_1));
    len_241_fu_1873_p3 <= 
        len_239_fu_1854_p3 when (or_ln321_fu_1862_p2(0) = '1') else 
        len_240_fu_1867_p2;
    len_243_fu_1232_p2 <= "1" when (tmp_134_reg_3072 = present_window_load_reg_2967_pp0_iter3_reg) else "0";
    len_244_fu_1256_p3 <= 
        ap_const_lv2_2 when (len_243_fu_1232_p2(0) = '1') else 
        ap_const_lv2_1;
    len_245_fu_1264_p3 <= 
        zext_ln321_16_fu_1236_p1 when (done_93_fu_1250_p2(0) = '1') else 
        len_244_fu_1256_p3;
    len_246_fu_1282_p2 <= std_logic_vector(unsigned(len_245_fu_1264_p3) + unsigned(ap_const_lv2_1));
    len_247_fu_1288_p3 <= 
        len_245_fu_1264_p3 when (done_94_fu_1276_p2(0) = '1') else 
        len_246_fu_1282_p2;
    len_248_fu_1310_p2 <= std_logic_vector(unsigned(zext_ln317_16_fu_1296_p1) + unsigned(ap_const_lv3_1));
    len_249_fu_1886_p3 <= 
        zext_ln317_16_reg_3288 when (done_95_reg_3293(0) = '1') else 
        len_248_reg_3299;
    len_250_fu_1895_p2 <= std_logic_vector(unsigned(len_249_fu_1886_p3) + unsigned(ap_const_lv3_1));
    len_251_fu_1901_p3 <= 
        len_249_fu_1886_p3 when (done_96_fu_1891_p2(0) = '1') else 
        len_250_fu_1895_p2;
    len_252_fu_1914_p2 <= std_logic_vector(unsigned(len_251_fu_1901_p3) + unsigned(ap_const_lv3_1));
    len_253_fu_1920_p3 <= 
        len_251_fu_1901_p3 when (or_ln321_96_fu_1909_p2(0) = '1') else 
        len_252_fu_1914_p2;
    len_255_fu_1362_p2 <= "1" when (tmp_141_reg_3107 = present_window_load_reg_2967_pp0_iter3_reg) else "0";
    len_256_fu_1386_p3 <= 
        ap_const_lv2_2 when (len_255_fu_1362_p2(0) = '1') else 
        ap_const_lv2_1;
    len_257_fu_1394_p3 <= 
        zext_ln321_17_fu_1366_p1 when (done_98_fu_1380_p2(0) = '1') else 
        len_256_fu_1386_p3;
    len_258_fu_1412_p2 <= std_logic_vector(unsigned(len_257_fu_1394_p3) + unsigned(ap_const_lv2_1));
    len_259_fu_1418_p3 <= 
        len_257_fu_1394_p3 when (done_99_fu_1406_p2(0) = '1') else 
        len_258_fu_1412_p2;
    len_260_fu_1936_p2 <= std_logic_vector(unsigned(zext_ln317_17_fu_1933_p1) + unsigned(ap_const_lv3_1));
    len_261_fu_1942_p3 <= 
        zext_ln317_17_fu_1933_p1 when (done_100_reg_3339(0) = '1') else 
        len_260_fu_1936_p2;
    len_262_fu_1953_p2 <= std_logic_vector(unsigned(len_261_fu_1942_p3) + unsigned(ap_const_lv3_1));
    len_263_fu_1959_p3 <= 
        len_261_fu_1942_p3 when (done_101_fu_1949_p2(0) = '1') else 
        len_262_fu_1953_p2;
    len_264_fu_2281_p2 <= std_logic_vector(unsigned(len_263_reg_3531) + unsigned(ap_const_lv3_1));
    len_265_fu_2286_p3 <= 
        len_263_reg_3531 when (or_ln321_101_fu_2277_p2(0) = '1') else 
        len_264_fu_2281_p2;
    len_267_fu_1482_p2 <= "1" when (tmp_148_reg_3142 = present_window_load_reg_2967_pp0_iter3_reg) else "0";
    len_268_fu_1506_p3 <= 
        ap_const_lv2_2 when (len_267_fu_1482_p2(0) = '1') else 
        ap_const_lv2_1;
    len_269_fu_1514_p3 <= 
        zext_ln321_18_fu_1486_p1 when (done_103_fu_1500_p2(0) = '1') else 
        len_268_fu_1506_p3;
    len_270_fu_1532_p2 <= std_logic_vector(unsigned(len_269_fu_1514_p3) + unsigned(ap_const_lv2_1));
    len_271_fu_1538_p3 <= 
        len_269_fu_1514_p3 when (done_104_fu_1526_p2(0) = '1') else 
        len_270_fu_1532_p2;
    len_272_fu_1970_p2 <= std_logic_vector(unsigned(zext_ln317_18_fu_1967_p1) + unsigned(ap_const_lv3_1));
    len_273_fu_1976_p3 <= 
        zext_ln317_18_fu_1967_p1 when (done_105_reg_3380(0) = '1') else 
        len_272_fu_1970_p2;
    len_274_fu_1987_p2 <= std_logic_vector(unsigned(len_273_fu_1976_p3) + unsigned(ap_const_lv3_1));
    len_275_fu_1993_p3 <= 
        len_273_fu_1976_p3 when (done_106_fu_1983_p2(0) = '1') else 
        len_274_fu_1987_p2;
    len_276_fu_2401_p2 <= std_logic_vector(unsigned(len_275_reg_3542) + unsigned(ap_const_lv3_1));
    len_277_fu_2406_p3 <= 
        len_275_reg_3542 when (or_ln321_106_fu_2397_p2(0) = '1') else 
        len_276_fu_2401_p2;
    len_279_fu_1602_p2 <= "1" when (tmp_155_reg_3177 = present_window_load_reg_2967_pp0_iter3_reg) else "0";
    len_280_fu_1626_p3 <= 
        ap_const_lv2_2 when (len_279_fu_1602_p2(0) = '1') else 
        ap_const_lv2_1;
    len_281_fu_1634_p3 <= 
        zext_ln321_19_fu_1606_p1 when (done_108_fu_1620_p2(0) = '1') else 
        len_280_fu_1626_p3;
    len_282_fu_1652_p2 <= std_logic_vector(unsigned(len_281_fu_1634_p3) + unsigned(ap_const_lv2_1));
    len_283_fu_1658_p3 <= 
        len_281_fu_1634_p3 when (done_109_fu_1646_p2(0) = '1') else 
        len_282_fu_1652_p2;
    len_284_fu_2004_p2 <= std_logic_vector(unsigned(zext_ln317_19_fu_2001_p1) + unsigned(ap_const_lv3_1));
    len_285_fu_2010_p3 <= 
        zext_ln317_19_fu_2001_p1 when (done_110_reg_3421(0) = '1') else 
        len_284_fu_2004_p2;
    len_286_fu_2021_p2 <= std_logic_vector(unsigned(len_285_fu_2010_p3) + unsigned(ap_const_lv3_1));
    len_287_fu_2027_p3 <= 
        len_285_fu_2010_p3 when (done_111_fu_2017_p2(0) = '1') else 
        len_286_fu_2021_p2;
    len_288_fu_2521_p2 <= std_logic_vector(unsigned(len_287_reg_3553) + unsigned(ap_const_lv3_1));
    len_289_fu_2526_p3 <= 
        len_287_reg_3553 when (or_ln321_111_fu_2517_p2(0) = '1') else 
        len_288_fu_2521_p2;
    len_291_fu_1722_p2 <= "1" when (tmp_162_reg_3212 = present_window_load_reg_2967_pp0_iter3_reg) else "0";
    len_292_fu_1746_p3 <= 
        ap_const_lv2_2 when (len_291_fu_1722_p2(0) = '1') else 
        ap_const_lv2_1;
    len_293_fu_1754_p3 <= 
        zext_ln321_20_fu_1726_p1 when (done_113_fu_1740_p2(0) = '1') else 
        len_292_fu_1746_p3;
    len_294_fu_1772_p2 <= std_logic_vector(unsigned(len_293_fu_1754_p3) + unsigned(ap_const_lv2_1));
    len_295_fu_1778_p3 <= 
        len_293_fu_1754_p3 when (done_114_fu_1766_p2(0) = '1') else 
        len_294_fu_1772_p2;
    len_296_fu_2038_p2 <= std_logic_vector(unsigned(zext_ln317_20_fu_2035_p1) + unsigned(ap_const_lv3_1));
    len_297_fu_2044_p3 <= 
        zext_ln317_20_fu_2035_p1 when (done_115_reg_3462(0) = '1') else 
        len_296_fu_2038_p2;
    len_298_fu_2055_p2 <= std_logic_vector(unsigned(len_297_fu_2044_p3) + unsigned(ap_const_lv3_1));
    len_299_fu_2061_p3 <= 
        len_297_fu_2044_p3 when (done_116_fu_2051_p2(0) = '1') else 
        len_298_fu_2055_p2;
    len_300_fu_2641_p2 <= std_logic_vector(unsigned(len_299_reg_3564) + unsigned(ap_const_lv3_1));
    len_301_fu_2646_p3 <= 
        len_299_reg_3564 when (or_ln321_116_fu_2637_p2(0) = '1') else 
        len_300_fu_2641_p2;
    len_303_fu_2144_p2 <= 
        ap_const_lv3_3 when (icmp_ln330_34_fu_2089_p2(0) = '1') else 
        ap_const_lv3_0;
    len_303_fu_2144_p7 <= "XXX";
    len_303_fu_2144_p8 <= (and_ln330_fu_2124_p2 & xor_ln328_fu_2130_p2);
    len_304_fu_2244_p2 <= 
        ap_const_lv3_3 when (icmp_ln330_36_fu_2189_p2(0) = '1') else 
        ap_const_lv3_0;
    len_304_fu_2244_p7 <= "XXX";
    len_304_fu_2244_p8 <= (and_ln330_16_fu_2224_p2 & xor_ln328_16_fu_2230_p2);
    len_305_fu_2377_p2 <= 
        ap_const_lv3_3 when (icmp_ln330_38_fu_2321_p2(0) = '1') else 
        ap_const_lv3_0;
    len_305_fu_2377_p7 <= "XXX";
    len_305_fu_2377_p8 <= (and_ln330_17_fu_2357_p2 & xor_ln328_17_fu_2363_p2);
    len_306_fu_2497_p2 <= 
        ap_const_lv3_3 when (icmp_ln330_40_fu_2441_p2(0) = '1') else 
        ap_const_lv3_0;
    len_306_fu_2497_p7 <= "XXX";
    len_306_fu_2497_p8 <= (and_ln330_18_fu_2477_p2 & xor_ln328_18_fu_2483_p2);
    len_307_fu_2617_p2 <= 
        ap_const_lv3_3 when (icmp_ln330_42_fu_2561_p2(0) = '1') else 
        ap_const_lv3_0;
    len_307_fu_2617_p7 <= "XXX";
    len_307_fu_2617_p8 <= (and_ln330_19_fu_2597_p2 & xor_ln328_19_fu_2603_p2);
    len_308_fu_2737_p2 <= 
        ap_const_lv3_3 when (icmp_ln330_44_fu_2681_p2(0) = '1') else 
        ap_const_lv3_0;
    len_308_fu_2737_p7 <= "XXX";
    len_308_fu_2737_p8 <= (and_ln330_20_fu_2717_p2 & xor_ln328_20_fu_2723_p2);
    len_fu_1102_p2 <= "1" when (trunc_ln321_reg_3037 = present_window_load_reg_2967_pp0_iter3_reg) else "0";
    match_length_32_fu_2269_p3 <= 
        len_304_fu_2244_p9 when (icmp_ln336_16_fu_2263_p2(0) = '1') else 
        len_303_fu_2144_p9;
    match_length_34_fu_2773_p3 <= 
        len_305_reg_3591 when (icmp_ln336_17_fu_2769_p2(0) = '1') else 
        match_length_32_reg_3580;
    match_length_36_fu_2791_p3 <= 
        len_306_reg_3602 when (icmp_ln336_18_fu_2786_p2(0) = '1') else 
        match_length_34_fu_2773_p3;
    match_length_38_fu_2808_p3 <= 
        len_307_reg_3613_pp0_iter7_reg when (icmp_ln336_19_reg_3645(0) = '1') else 
        match_length_36_reg_3640;
    match_length_40_fu_2824_p3 <= 
        len_308_reg_3624_pp0_iter7_reg when (icmp_ln336_20_fu_2819_p2(0) = '1') else 
        match_length_38_fu_2808_p3;
    match_offset_16_fu_2757_p3 <= 
        match_offset_reg_3505_pp0_iter6_reg when (icmp_ln336_reg_3570(0) = '1') else 
        ap_const_lv16_0;
    match_offset_17_fu_1928_p2 <= std_logic_vector(unsigned(trunc_ln327_16_reg_3319) + unsigned(ap_const_lv16_FFFF));
    match_offset_18_fu_2763_p3 <= 
        match_offset_17_reg_3519_pp0_iter6_reg when (icmp_ln336_16_reg_3575(0) = '1') else 
        match_offset_16_fu_2757_p3;
    match_offset_19_fu_2299_p2 <= std_logic_vector(unsigned(trunc_ln327_17_reg_3360_pp0_iter5_reg) + unsigned(ap_const_lv16_FFFF));
    match_offset_20_fu_2779_p3 <= 
        match_offset_19_reg_3586 when (icmp_ln336_17_fu_2769_p2(0) = '1') else 
        match_offset_18_fu_2763_p3;
    match_offset_fu_1881_p2 <= std_logic_vector(unsigned(trunc_ln327_reg_3273) + unsigned(ap_const_lv16_FFFF));
    or_ln321_101_fu_2277_p2 <= (icmp_ln321_122_reg_3350_pp0_iter5_reg or done_101_reg_3526);
    or_ln321_106_fu_2397_p2 <= (icmp_ln321_128_reg_3391_pp0_iter5_reg or done_106_reg_3537);
    or_ln321_111_fu_2517_p2 <= (icmp_ln321_134_reg_3432_pp0_iter5_reg or done_111_reg_3548);
    or_ln321_116_fu_2637_p2 <= (icmp_ln321_140_reg_3473_pp0_iter5_reg or done_116_reg_3559);
    or_ln321_96_fu_1909_p2 <= (icmp_ln321_116_reg_3309 or done_96_fu_1891_p2);
    or_ln321_fu_1862_p2 <= (icmp_ln321_110_reg_3263 or done_91_fu_1844_p2);
    present_window_100_out <= present_window_fu_310;

    present_window_100_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, nextVal_strobe_reg_456_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (nextVal_strobe_reg_456_pp0_iter6_reg = ap_const_lv1_0))) then 
            present_window_100_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_100_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    present_window_101_out <= present_window_90_reg_2919_pp0_iter6_reg;

    present_window_101_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, nextVal_strobe_reg_456_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (nextVal_strobe_reg_456_pp0_iter6_reg = ap_const_lv1_0))) then 
            present_window_101_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_101_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    present_window_102_out <= present_window_91_reg_2931_pp0_iter6_reg;

    present_window_102_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, nextVal_strobe_reg_456_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (nextVal_strobe_reg_456_pp0_iter6_reg = ap_const_lv1_0))) then 
            present_window_102_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_102_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    present_window_103_out <= present_window_92_reg_2943_pp0_iter6_reg;

    present_window_103_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, nextVal_strobe_reg_456_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (nextVal_strobe_reg_456_pp0_iter6_reg = ap_const_lv1_0))) then 
            present_window_103_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_103_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    present_window_104_out <= present_window_93_reg_2955_pp0_iter6_reg;

    present_window_104_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, nextVal_strobe_reg_456_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (nextVal_strobe_reg_456_pp0_iter6_reg = ap_const_lv1_0))) then 
            present_window_104_out_ap_vld <= ap_const_logic_1;
        else 
            present_window_104_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln336_18_fu_2803_p3 <= 
        add_ln328_reg_3597_pp0_iter7_reg when (icmp_ln336_18_reg_3635(0) = '1') else 
        match_offset_20_reg_3630;
    select_ln336_19_fu_2813_p3 <= 
        add_ln328_9_reg_3608_pp0_iter7_reg when (icmp_ln336_19_reg_3645(0) = '1') else 
        select_ln336_18_fu_2803_p3;
    select_ln336_20_fu_2835_p3 <= 
        add_ln328_10_reg_3619_pp0_iter7_reg when (icmp_ln336_20_fu_2819_p2(0) = '1') else 
        select_ln336_19_fu_2813_p3;
    shl_ln293_9_fu_545_p3 <= (present_window_86_fu_314 & ap_const_lv3_0);
    shl_ln293_s_fu_553_p3 <= (present_window_87_fu_318 & ap_const_lv2_0);
    shl_ln5_fu_561_p3 <= (present_window_fu_310 & ap_const_lv1_0);
    shl_ln_fu_533_p3 <= (present_window_fu_310 & ap_const_lv4_0);
    sub_ln327_16_fu_1329_p2 <= std_logic_vector(unsigned(currIdx_reg_3006) - unsigned(zext_ln319_16_fu_1229_p1));
    sub_ln327_17_fu_1449_p2 <= std_logic_vector(unsigned(currIdx_reg_3006) - unsigned(zext_ln319_17_fu_1359_p1));
    sub_ln327_18_fu_1569_p2 <= std_logic_vector(unsigned(currIdx_reg_3006) - unsigned(zext_ln319_18_fu_1479_p1));
    sub_ln327_19_fu_1689_p2 <= std_logic_vector(unsigned(currIdx_reg_3006) - unsigned(zext_ln319_19_fu_1599_p1));
    sub_ln327_20_fu_1809_p2 <= std_logic_vector(unsigned(currIdx_reg_3006) - unsigned(zext_ln319_20_fu_1719_p1));
    sub_ln327_fu_1199_p2 <= std_logic_vector(unsigned(currIdx_reg_3006) - unsigned(zext_ln319_fu_1099_p1));
    tmp_133_fu_1208_p4 <= sub_ln327_fu_1199_p2(31 downto 15);
    tmp_140_fu_1338_p4 <= sub_ln327_16_fu_1329_p2(31 downto 15);
    tmp_147_fu_1458_p4 <= sub_ln327_17_fu_1449_p2(31 downto 15);
    tmp_154_fu_1578_p4 <= sub_ln327_18_fu_1569_p2(31 downto 15);
    tmp_161_fu_1698_p4 <= sub_ln327_19_fu_1689_p2(31 downto 15);
    tmp_168_fu_1818_p4 <= sub_ln327_20_fu_1809_p2(31 downto 15);
    tmp_169_fu_2842_p5 <= (((ap_const_lv1_1 & select_ln336_20_fu_2835_p3) & zext_ln336_fu_2831_p1) & present_window_load_reg_2967_pp0_iter7_reg);
    trunc_ln245_fu_521_p1 <= downStream_3_dout(8 - 1 downto 0);
    trunc_ln302_fu_653_p1 <= dict_q1(360 - 1 downto 0);
    trunc_ln307_fu_657_p1 <= currIdx_fu_648_p2(24 - 1 downto 0);
    trunc_ln321_fu_671_p1 <= dict_q1(8 - 1 downto 0);
    trunc_ln327_16_fu_1334_p1 <= sub_ln327_16_fu_1329_p2(16 - 1 downto 0);
    trunc_ln327_17_fu_1454_p1 <= sub_ln327_17_fu_1449_p2(16 - 1 downto 0);
    trunc_ln327_18_fu_1574_p1 <= sub_ln327_18_fu_1569_p2(16 - 1 downto 0);
    trunc_ln327_19_fu_1694_p1 <= sub_ln327_19_fu_1689_p2(16 - 1 downto 0);
    trunc_ln327_20_fu_1814_p1 <= sub_ln327_20_fu_1809_p2(16 - 1 downto 0);
    trunc_ln327_fu_1204_p1 <= sub_ln327_fu_1199_p2(16 - 1 downto 0);
    xor_ln294_10_fu_579_p2 <= (zext_ln294_fu_569_p1 xor xor_ln294_fu_573_p2);
    xor_ln294_11_fu_589_p2 <= (zext_ln294_7_fu_585_p1 xor shl_ln293_9_fu_545_p3);
    xor_ln294_fu_573_p2 <= (zext_ln293_fu_541_p1 xor shl_ln293_s_fu_553_p3);
    xor_ln328_16_fu_2230_p2 <= (ap_const_lv1_1 xor and_ln328_76_fu_2218_p2);
    xor_ln328_17_fu_2363_p2 <= (ap_const_lv1_1 xor and_ln328_80_fu_2351_p2);
    xor_ln328_18_fu_2483_p2 <= (ap_const_lv1_1 xor and_ln328_84_fu_2471_p2);
    xor_ln328_19_fu_2603_p2 <= (ap_const_lv1_1 xor and_ln328_88_fu_2591_p2);
    xor_ln328_20_fu_2723_p2 <= (ap_const_lv1_1 xor and_ln328_92_fu_2711_p2);
    xor_ln328_fu_2130_p2 <= (ap_const_lv1_1 xor and_ln328_72_fu_2118_p2);
    xor_ln329_16_fu_2179_p2 <= (icmp_ln329_16_reg_3329_pp0_iter5_reg xor ap_const_lv1_1);
    xor_ln329_17_fu_2310_p2 <= (icmp_ln329_17_reg_3370_pp0_iter5_reg xor ap_const_lv1_1);
    xor_ln329_18_fu_2430_p2 <= (icmp_ln329_18_reg_3411_pp0_iter5_reg xor ap_const_lv1_1);
    xor_ln329_19_fu_2550_p2 <= (icmp_ln329_19_reg_3452_pp0_iter5_reg xor ap_const_lv1_1);
    xor_ln329_20_fu_2670_p2 <= (icmp_ln329_20_reg_3493_pp0_iter5_reg xor ap_const_lv1_1);
    xor_ln329_fu_2079_p2 <= (icmp_ln329_reg_3283_pp0_iter5_reg xor ap_const_lv1_1);
    zext_ln293_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(present_window_86_fu_314),10));
    zext_ln294_7_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln294_10_fu_579_p2),11));
    zext_ln294_8_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln294_11_fu_589_p2),12));
    zext_ln294_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln5_fu_561_p3),10));
    zext_ln301_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hash_reg_2995),64));
    zext_ln317_16_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_247_fu_1288_p3),3));
    zext_ln317_17_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_259_reg_3334),3));
    zext_ln317_18_fu_1967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_271_reg_3375),3));
    zext_ln317_19_fu_2001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_283_reg_3416),3));
    zext_ln317_20_fu_2035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_295_reg_3457),3));
    zext_ln317_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_235_fu_1158_p3),3));
    zext_ln319_16_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareIdx_16_reg_3067),32));
    zext_ln319_17_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareIdx_17_reg_3102),32));
    zext_ln319_18_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareIdx_18_reg_3137),32));
    zext_ln319_19_fu_1599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareIdx_19_reg_3172),32));
    zext_ln319_20_fu_1719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareIdx_20_reg_3207),32));
    zext_ln319_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(compareIdx_reg_3032),32));
    zext_ln321_16_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_243_fu_1232_p2),2));
    zext_ln321_17_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_255_fu_1362_p2),2));
    zext_ln321_18_fu_1486_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_267_fu_1482_p2),2));
    zext_ln321_19_fu_1606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_279_fu_1602_p2),2));
    zext_ln321_20_fu_1726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_291_fu_1722_p2),2));
    zext_ln321_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_fu_1102_p2),2));
    zext_ln336_fu_2831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(match_length_40_fu_2824_p3),8));
end behav;

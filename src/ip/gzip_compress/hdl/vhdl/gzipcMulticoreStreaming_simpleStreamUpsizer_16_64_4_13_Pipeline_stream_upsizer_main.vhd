-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_simpleStreamUpsizer_16_64_4_13_Pipeline_stream_upsizer_main is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    huffStream_2_dout : IN STD_LOGIC_VECTOR (17 downto 0);
    huffStream_2_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    huffStream_2_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    huffStream_2_empty_n : IN STD_LOGIC;
    huffStream_2_read : OUT STD_LOGIC;
    mergeStream_2_din : OUT STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_2_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_2_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_2_full_n : IN STD_LOGIC;
    mergeStream_2_write : OUT STD_LOGIC;
    inStVal_data_32 : IN STD_LOGIC_VECTOR (7 downto 0);
    empty : IN STD_LOGIC_VECTOR (7 downto 0);
    inStVal_strobe : IN STD_LOGIC_VECTOR (1 downto 0);
    loop_continue : IN STD_LOGIC_VECTOR (0 downto 0);
    outVal_15_out_i : IN STD_LOGIC_VECTOR (63 downto 0);
    outVal_15_out_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    outVal_15_out_o_ap_vld : OUT STD_LOGIC;
    inVal_1_out_i : IN STD_LOGIC_VECTOR (15 downto 0);
    inVal_1_out_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    inVal_1_out_o_ap_vld : OUT STD_LOGIC;
    last_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    last_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_simpleStreamUpsizer_16_64_4_13_Pipeline_stream_upsizer_main is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal loop_continue_12_reg_160 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln246_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op53_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal loop_continue_12_reg_160_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln233_reg_490 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op67_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_loop_continue_12_phi_fu_163_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal mergeStream_2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal huffStream_2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal last_reg_171 : STD_LOGIC_VECTOR (0 downto 0);
    signal dsize_14_reg_485 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln233_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inVal_15_fu_333_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal inVal_15_reg_498 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_init : STD_LOGIC;
    signal ap_phi_mux_loop_continue_1_phi_fu_199_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_dsize_1_phi_fu_188_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_reg_pp0_iter1_dsize_1_reg_185 : STD_LOGIC_VECTOR (3 downto 0);
    signal loop_continue_13_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_loop_continue_1_reg_195 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_inStVal_strobe_1_phi_fu_210_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_inStVal_strobe_1_reg_207 : STD_LOGIC_VECTOR (1 downto 0);
    signal outVal_fu_435_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal inStVal_strobe_12_fu_96 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal byteIdx_fu_100 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal byteIdx_14_fu_341_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_byteIdx_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal dsize_fu_104 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal dsize_15_fu_347_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal inStVal_data_fu_108 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal inStVal_data_18_fu_353_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal inStVal_data_17_fu_112 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal huffStream_2_read_local : STD_LOGIC;
    signal tmpVal_fu_413_p3 : STD_LOGIC_VECTOR (67 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal mergeStream_2_write_local : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal inVal_fu_293_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal inVal_3_fu_305_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_313_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal inVal_14_fu_321_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln251_fu_283_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal outVal_s_fu_425_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_349 : BOOLEAN;
    signal ap_condition_353 : BOOLEAN;
    signal ap_condition_358 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    byteIdx_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                byteIdx_fu_100 <= byteIdx_14_fu_341_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_fu_252_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1)))) then 
                byteIdx_fu_100 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    dsize_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    dsize_fu_104 <= ap_const_lv4_0;
                elsif (((loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    dsize_fu_104 <= dsize_15_fu_347_p2;
                end if;
            end if; 
        end if;
    end process;

    inStVal_data_17_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    inStVal_data_17_fu_112 <= inStVal_data_32;
                elsif ((ap_const_boolean_1 = ap_condition_353)) then 
                    inStVal_data_17_fu_112 <= huffStream_2_dout(15 downto 8);
                end if;
            end if; 
        end if;
    end process;

    inStVal_data_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    inStVal_data_fu_108 <= empty;
                elsif ((ap_const_boolean_1 = ap_condition_353)) then 
                    inStVal_data_fu_108 <= inStVal_data_18_fu_353_p1;
                end if;
            end if; 
        end if;
    end process;

    inStVal_strobe_12_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    inStVal_strobe_12_fu_96 <= inStVal_strobe;
                elsif (((loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    inStVal_strobe_12_fu_96 <= ap_phi_mux_inStVal_strobe_1_phi_fu_210_p4;
                end if;
            end if; 
        end if;
    end process;

    last_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((loop_continue_12_reg_160_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                last_reg_171 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                last_reg_171 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    loop_continue_12_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if ((ap_const_boolean_1 = ap_condition_358)) then 
                    loop_continue_12_reg_160 <= ap_phi_mux_loop_continue_1_phi_fu_199_p4;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_init = ap_const_logic_1))) then 
                    loop_continue_12_reg_160 <= loop_continue;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                dsize_14_reg_485 <= dsize_fu_104;
                icmp_ln233_reg_490 <= icmp_ln233_fu_252_p2;
                inVal_15_reg_498 <= inVal_15_fu_333_p3;
                loop_continue_12_reg_160_pp0_iter1_reg <= loop_continue_12_reg_160;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(huffStream_2_empty_n, ap_predicate_op53_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (huffStream_2_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(mergeStream_2_full_n, ap_predicate_op67_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op67_write_state3 = ap_const_boolean_1) and (mergeStream_2_full_n = ap_const_logic_0));
    end process;


    ap_condition_349_assign_proc : process(ap_enable_reg_pp0_iter1, loop_continue_12_reg_160, ap_block_pp0_stage0)
    begin
                ap_condition_349 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_353_assign_proc : process(ap_enable_reg_pp0_iter1, loop_continue_12_reg_160, icmp_ln246_fu_287_p2)
    begin
                ap_condition_353 <= ((icmp_ln246_fu_287_p2 = ap_const_lv1_0) and (loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_358_assign_proc : process(ap_enable_reg_pp0_iter1, loop_continue_12_reg_160, ap_block_pp0_stage0_11001)
    begin
                ap_condition_358 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_phi_mux_loop_continue_12_phi_fu_163_p4)
    begin
        if (((ap_phi_mux_loop_continue_12_phi_fu_163_p4 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, loop_continue_12_reg_160, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (loop_continue_12_reg_160 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_dsize_1_phi_fu_188_p4_assign_proc : process(loop_continue_12_reg_160, icmp_ln233_fu_252_p2, ap_phi_reg_pp0_iter1_dsize_1_reg_185, dsize_fu_104)
    begin
        if ((loop_continue_12_reg_160 = ap_const_lv1_1)) then
            if ((icmp_ln233_fu_252_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_dsize_1_phi_fu_188_p4 <= dsize_fu_104;
            elsif ((icmp_ln233_fu_252_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_dsize_1_phi_fu_188_p4 <= ap_const_lv4_0;
            else 
                ap_phi_mux_dsize_1_phi_fu_188_p4 <= ap_phi_reg_pp0_iter1_dsize_1_reg_185;
            end if;
        else 
            ap_phi_mux_dsize_1_phi_fu_188_p4 <= ap_phi_reg_pp0_iter1_dsize_1_reg_185;
        end if; 
    end process;


    ap_phi_mux_inStVal_strobe_1_phi_fu_210_p4_assign_proc : process(huffStream_2_dout, loop_continue_12_reg_160, icmp_ln246_fu_287_p2, ap_phi_reg_pp0_iter1_inStVal_strobe_1_reg_207)
    begin
        if ((loop_continue_12_reg_160 = ap_const_lv1_1)) then
            if ((icmp_ln246_fu_287_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_inStVal_strobe_1_phi_fu_210_p4 <= ap_const_lv2_0;
            elsif ((icmp_ln246_fu_287_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_inStVal_strobe_1_phi_fu_210_p4 <= huffStream_2_dout(17 downto 16);
            else 
                ap_phi_mux_inStVal_strobe_1_phi_fu_210_p4 <= ap_phi_reg_pp0_iter1_inStVal_strobe_1_reg_207;
            end if;
        else 
            ap_phi_mux_inStVal_strobe_1_phi_fu_210_p4 <= ap_phi_reg_pp0_iter1_inStVal_strobe_1_reg_207;
        end if; 
    end process;


    ap_phi_mux_loop_continue_12_phi_fu_163_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, loop_continue_12_reg_160, loop_continue, ap_loop_init, ap_phi_mux_loop_continue_1_phi_fu_199_p4, ap_condition_349)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
            if ((ap_const_boolean_1 = ap_condition_349)) then 
                ap_phi_mux_loop_continue_12_phi_fu_163_p4 <= ap_phi_mux_loop_continue_1_phi_fu_199_p4;
            elsif ((ap_loop_init = ap_const_logic_1)) then 
                ap_phi_mux_loop_continue_12_phi_fu_163_p4 <= loop_continue;
            else 
                ap_phi_mux_loop_continue_12_phi_fu_163_p4 <= loop_continue_12_reg_160;
            end if;
        else 
            ap_phi_mux_loop_continue_12_phi_fu_163_p4 <= loop_continue_12_reg_160;
        end if; 
    end process;


    ap_phi_mux_loop_continue_1_phi_fu_199_p4_assign_proc : process(loop_continue_12_reg_160, icmp_ln233_fu_252_p2, loop_continue_13_fu_258_p2, ap_phi_reg_pp0_iter1_loop_continue_1_reg_195)
    begin
        if ((loop_continue_12_reg_160 = ap_const_lv1_1)) then
            if ((icmp_ln233_fu_252_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_loop_continue_1_phi_fu_199_p4 <= ap_const_lv1_1;
            elsif ((icmp_ln233_fu_252_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_loop_continue_1_phi_fu_199_p4 <= loop_continue_13_fu_258_p2;
            else 
                ap_phi_mux_loop_continue_1_phi_fu_199_p4 <= ap_phi_reg_pp0_iter1_loop_continue_1_reg_195;
            end if;
        else 
            ap_phi_mux_loop_continue_1_phi_fu_199_p4 <= ap_phi_reg_pp0_iter1_loop_continue_1_reg_195;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_dsize_1_reg_185 <= "XXXX";
    ap_phi_reg_pp0_iter1_inStVal_strobe_1_reg_207 <= "XX";
    ap_phi_reg_pp0_iter1_loop_continue_1_reg_195 <= "X";

    ap_predicate_op53_read_state2_assign_proc : process(loop_continue_12_reg_160, icmp_ln246_fu_287_p2)
    begin
                ap_predicate_op53_read_state2 <= ((icmp_ln246_fu_287_p2 = ap_const_lv1_0) and (loop_continue_12_reg_160 = ap_const_lv1_1));
    end process;


    ap_predicate_op67_write_state3_assign_proc : process(loop_continue_12_reg_160_pp0_iter1_reg, icmp_ln233_reg_490)
    begin
                ap_predicate_op67_write_state3 <= ((icmp_ln233_reg_490 = ap_const_lv1_1) and (loop_continue_12_reg_160_pp0_iter1_reg = ap_const_lv1_1));
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_byteIdx_13_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, loop_continue_12_reg_160, ap_block_pp0_stage0, icmp_ln233_fu_252_p2, byteIdx_fu_100)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_fu_252_p2 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_byteIdx_13 <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_byteIdx_13 <= byteIdx_fu_100;
        end if; 
    end process;

    byteIdx_14_fu_341_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_byteIdx_13) + unsigned(ap_const_lv8_1));
    dsize_15_fu_347_p2 <= std_logic_vector(unsigned(ap_phi_mux_dsize_1_phi_fu_188_p4) + unsigned(zext_ln251_fu_283_p1));

    huffStream_2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, huffStream_2_empty_n, ap_predicate_op53_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op53_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            huffStream_2_blk_n <= huffStream_2_empty_n;
        else 
            huffStream_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    huffStream_2_read <= huffStream_2_read_local;

    huffStream_2_read_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op53_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op53_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            huffStream_2_read_local <= ap_const_logic_1;
        else 
            huffStream_2_read_local <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln233_fu_252_p2 <= "1" when (byteIdx_fu_100 = ap_const_lv8_4) else "0";
    icmp_ln246_fu_287_p2 <= "1" when (inStVal_strobe_12_fu_96 = ap_const_lv2_0) else "0";
    inStVal_data_18_fu_353_p1 <= huffStream_2_dout(8 - 1 downto 0);
    inVal_14_fu_321_p5 <= (inStVal_data_17_fu_112 & inVal_3_fu_305_p3(7 downto 0));
    inVal_15_fu_333_p3 <= 
        inVal_14_fu_321_p5 when (tmp_7_fu_313_p3(0) = '1') else 
        inVal_3_fu_305_p3;

    inVal_1_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, loop_continue_12_reg_160, inVal_1_out_i, ap_block_pp0_stage0, inVal_15_fu_333_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inVal_1_out_o <= inVal_15_fu_333_p3;
        else 
            inVal_1_out_o <= inVal_1_out_i;
        end if; 
    end process;


    inVal_1_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, loop_continue_12_reg_160, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (loop_continue_12_reg_160 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inVal_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            inVal_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    inVal_3_fu_305_p3 <= 
        inVal_1_out_i when (icmp_ln246_fu_287_p2(0) = '1') else 
        inVal_fu_293_p5;
    inVal_fu_293_p5 <= (inVal_1_out_i(15 downto 8) & inStVal_data_fu_108);
    last_1_out <= last_reg_171;

    last_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, loop_continue_12_reg_160, ap_block_pp0_stage0_11001, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (loop_continue_12_reg_160 = ap_const_lv1_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            last_1_out_ap_vld <= ap_const_logic_1;
        else 
            last_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    loop_continue_13_fu_258_p2 <= "0" when (inStVal_strobe_12_fu_96 = ap_const_lv2_0) else "1";

    mergeStream_2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, mergeStream_2_full_n, ap_predicate_op67_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op67_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            mergeStream_2_blk_n <= mergeStream_2_full_n;
        else 
            mergeStream_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mergeStream_2_din <= tmpVal_fu_413_p3;
    mergeStream_2_write <= mergeStream_2_write_local;

    mergeStream_2_write_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op67_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op67_write_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            mergeStream_2_write_local <= ap_const_logic_1;
        else 
            mergeStream_2_write_local <= ap_const_logic_0;
        end if; 
    end process;


    outVal_15_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, loop_continue_12_reg_160_pp0_iter1_reg, outVal_15_out_i, ap_block_pp0_stage0, outVal_fu_435_p3)
    begin
        if (((loop_continue_12_reg_160_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            outVal_15_out_o <= outVal_fu_435_p3;
        else 
            outVal_15_out_o <= outVal_15_out_i;
        end if; 
    end process;


    outVal_15_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, loop_continue_12_reg_160_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((loop_continue_12_reg_160_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            outVal_15_out_o_ap_vld <= ap_const_logic_1;
        else 
            outVal_15_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    outVal_fu_435_p3 <= (inVal_15_reg_498 & outVal_s_fu_425_p4);
    outVal_s_fu_425_p4 <= outVal_15_out_i(63 downto 16);
    tmpVal_fu_413_p3 <= (outVal_15_out_i & dsize_14_reg_485);
    tmp_7_fu_313_p3 <= inStVal_strobe_12_fu_96(1 downto 1);
    zext_ln251_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inStVal_strobe_12_fu_96),4));
end behav;

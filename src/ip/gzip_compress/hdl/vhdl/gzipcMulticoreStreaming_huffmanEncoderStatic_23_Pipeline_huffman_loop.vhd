-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    encodedOutStream_dout : IN STD_LOGIC_VECTOR (32 downto 0);
    encodedOutStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    encodedOutStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    encodedOutStream_empty_n : IN STD_LOGIC;
    encodedOutStream_read : OUT STD_LOGIC;
    hufCodeStream_din : OUT STD_LOGIC_VECTOR (19 downto 0);
    hufCodeStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    hufCodeStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    hufCodeStream_full_n : IN STD_LOGIC;
    hufCodeStream_write : OUT STD_LOGIC;
    empty : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_101 : STD_LOGIC_VECTOR (8 downto 0) := "100000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FD : STD_LOGIC_VECTOR (7 downto 0) := "11111101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal next_state_16_load_fu_358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal done_load_load_fu_393_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op51_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal next_state_16_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_state_16_reg_862_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal done_load_reg_891 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_load_reg_891_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln342_reg_920 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln342_reg_920_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op158_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal dist_code22_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal dist_code22_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal length_code52_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal length_code52_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lit_code_fixed66_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lit_blen_fixed59_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dist_codes_fixed29_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dist_codes_fixed29_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dist_blen_fixed15_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dist_blen_fixed15_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal base_length8_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal base_length8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal base_dist1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal base_dist1_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal encodedOutStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal hufCodeStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_predicate_pred195_state4 : BOOLEAN;
    signal ap_predicate_pred203_state4 : BOOLEAN;
    signal ap_predicate_pred208_state4 : BOOLEAN;
    signal ap_predicate_pred213_state4 : BOOLEAN;
    signal trunc_ln352_fu_384_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln352_reg_881 : STD_LOGIC_VECTOR (8 downto 0);
    signal tCh_fu_417_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tCh_reg_895 : STD_LOGIC_VECTOR (7 downto 0);
    signal tLen_16_fu_421_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tLen_16_reg_900 : STD_LOGIC_VECTOR (7 downto 0);
    signal tOffset_16_reg_905 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln342_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal code_s_8_reg_934 : STD_LOGIC_VECTOR (4 downto 0);
    signal dist_blen_fixed15_load_reg_939 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln366_fu_374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln354_fu_388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln339_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln340_fu_512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln388_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln380_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln352_fu_592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln345_fu_652_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dextra_fu_112 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal dextra_9_cast_cast_fu_559_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal lextra_fu_116 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal lextra_8_cast_cast_fu_598_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal done_fu_120 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal done_248_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lcode_fu_124 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal zext_ln340_7_fu_630_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_lcode_load : STD_LOGIC_VECTOR (15 downto 0);
    signal dcode_fu_128 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal zext_ln339_8_fu_626_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_dcode_load_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal curEncodedValue_fu_132 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal nextEncodedValue_data_fu_399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tLen_fu_136 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal tLen_15_fu_714_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tOffset_fu_140 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal tOffset_15_fu_672_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_state_fu_144 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln379_fu_569_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln365_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_next_state_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal encodedOutStream_read_local : STD_LOGIC;
    signal tmp_208_fu_686_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal hufCodeStream_din_local : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_207_fu_724_p5 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_206_fu_748_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_s_fu_763_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_209_fu_778_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal hufCodeStream_write_local : STD_LOGIC;
    signal dist_codes_fixed29_ce0_local : STD_LOGIC;
    signal dist_blen_fixed15_ce0_local : STD_LOGIC;
    signal huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_ce0_local : STD_LOGIC;
    signal huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_ce0_local : STD_LOGIC;
    signal dist_code22_ce0_local : STD_LOGIC;
    signal length_code52_ce0_local : STD_LOGIC;
    signal base_dist1_ce0_local : STD_LOGIC;
    signal base_length8_ce0_local : STD_LOGIC;
    signal lit_code_fixed66_ce0_local : STD_LOGIC;
    signal lit_code_fixed66_address0_local : STD_LOGIC_VECTOR (8 downto 0);
    signal lit_blen_fixed59_ce0_local : STD_LOGIC;
    signal lit_blen_fixed59_address0_local : STD_LOGIC_VECTOR (8 downto 0);
    signal nextEncodedValue_strobe_fu_403_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_288_fu_441_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal bit_sel_fu_467_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln339_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal part_sel_fu_481_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln339_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tOffset_1670_cast_fu_457_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln_fu_491_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal dcode_8_fu_499_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln374_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln352_fu_587_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln360_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal base_dist_load_cast_fu_668_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln390_fu_682_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln389_fu_678_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal newFirst_fu_708_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln382_fu_720_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal dist_blen_fixed_load_cast_fu_742_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln370_fu_745_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln356_fu_759_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln345_7_fu_774_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_669 : BOOLEAN;
    signal ap_condition_672 : BOOLEAN;
    signal ap_condition_307 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_code22_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_length_code52_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_lit_code_fixed66_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_lit_blen_fixed59_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_huffmanEncoderStatic_stream_strqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_codes_fixed29_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_blen_fixed15_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_huffmanEncoderStatic_stream_strrcU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_base_length8_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_base_dist1_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    dist_code22_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_code22_ROM_AUTO_1R
    generic map (
        DataWidth => 5,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dist_code22_address0,
        ce0 => dist_code22_ce0_local,
        q0 => dist_code22_q0);

    length_code52_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_length_code52_ROM_AUTO_1R
    generic map (
        DataWidth => 5,
        AddressRange => 259,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => length_code52_address0,
        ce0 => length_code52_ce0_local,
        q0 => length_code52_q0);

    lit_code_fixed66_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_lit_code_fixed66_ROM_AUTO_1R
    generic map (
        DataWidth => 9,
        AddressRange => 288,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lit_code_fixed66_address0_local,
        ce0 => lit_code_fixed66_ce0_local,
        q0 => lit_code_fixed66_q0);

    lit_blen_fixed59_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_lit_blen_fixed59_ROM_AUTO_1R
    generic map (
        DataWidth => 4,
        AddressRange => 288,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lit_blen_fixed59_address0_local,
        ce0 => lit_blen_fixed59_ce0_local,
        q0 => lit_blen_fixed59_q0);

    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_huffmanEncoderStatic_stream_strqcK
    generic map (
        DataWidth => 3,
        AddressRange => 29,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_address0,
        ce0 => huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_ce0_local,
        q0 => huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_q0);

    dist_codes_fixed29_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_codes_fixed29_ROM_AUTO_1R
    generic map (
        DataWidth => 5,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dist_codes_fixed29_address0,
        ce0 => dist_codes_fixed29_ce0_local,
        q0 => dist_codes_fixed29_q0);

    dist_blen_fixed15_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_blen_fixed15_ROM_AUTO_1R
    generic map (
        DataWidth => 3,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dist_blen_fixed15_address0,
        ce0 => dist_blen_fixed15_ce0_local,
        q0 => dist_blen_fixed15_q0);

    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_huffmanEncoderStatic_stream_strrcU
    generic map (
        DataWidth => 4,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_address0,
        ce0 => huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_ce0_local,
        q0 => huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_q0);

    base_length8_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_base_length8_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 29,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => base_length8_address0,
        ce0 => base_length8_ce0_local,
        q0 => base_length8_q0);

    base_dist1_U : component gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_base_dist1_ROM_AUTO_1R
    generic map (
        DataWidth => 15,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => base_dist1_address0,
        ce0 => base_dist1_ce0_local,
        q0 => base_dist1_q0);

    flow_control_loop_pipe_sequential_init_U : component gzipcMulticoreStreaming_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    curEncodedValue_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    curEncodedValue_fu_132 <= empty;
                elsif ((ap_const_boolean_1 = ap_condition_669)) then 
                    curEncodedValue_fu_132 <= nextEncodedValue_data_fu_399_p1;
                end if;
            end if; 
        end if;
    end process;

    dcode_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    dcode_fu_128(0) <= '0';
                    dcode_fu_128(1) <= '0';
                    dcode_fu_128(2) <= '0';
                    dcode_fu_128(3) <= '0';
                    dcode_fu_128(4) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_672)) then 
                                        dcode_fu_128(4 downto 0) <= zext_ln339_8_fu_626_p1(4 downto 0);
                end if;
            end if; 
        end if;
    end process;

    dextra_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    dextra_fu_112(0) <= '0';
                    dextra_fu_112(1) <= '0';
                    dextra_fu_112(2) <= '0';
                    dextra_fu_112(3) <= '0';
                elsif (((next_state_16_reg_862 = ap_const_lv32_5) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                                        dextra_fu_112(3 downto 0) <= dextra_9_cast_cast_fu_559_p1(3 downto 0);
                end if;
            end if; 
        end if;
    end process;

    done_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    done_fu_120 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_669)) then 
                    done_fu_120 <= done_248_fu_411_p2;
                end if;
            end if; 
        end if;
    end process;

    lcode_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    lcode_fu_124(0) <= '0';
                    lcode_fu_124(1) <= '0';
                    lcode_fu_124(2) <= '0';
                    lcode_fu_124(3) <= '0';
                    lcode_fu_124(4) <= '0';
                elsif ((ap_const_boolean_1 = ap_condition_672)) then 
                                        lcode_fu_124(4 downto 0) <= zext_ln340_7_fu_630_p1(4 downto 0);
                end if;
            end if; 
        end if;
    end process;

    lextra_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    lextra_fu_116(0) <= '0';
                    lextra_fu_116(1) <= '0';
                    lextra_fu_116(2) <= '0';
                elsif (((next_state_16_reg_862 = ap_const_lv32_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                                        lextra_fu_116(2 downto 0) <= lextra_8_cast_cast_fu_598_p1(2 downto 0);
                end if;
            end if; 
        end if;
    end process;

    next_state_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_fu_120 = ap_const_lv1_0) and (ap_sig_allocacmp_next_state_16 = ap_const_lv32_0) and (icmp_ln342_fu_517_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                next_state_fu_144(0) <= '1';
                next_state_fu_144(1) <= '0';
                next_state_fu_144(2) <= '0';
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_16_load_fu_358_p1 = ap_const_lv32_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                next_state_fu_144(0) <= '1';
                next_state_fu_144(1) <= '0';
                next_state_fu_144(2) <= '1';
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_fu_120 = ap_const_lv1_0) and (ap_sig_allocacmp_next_state_16 = ap_const_lv32_0) and (icmp_ln342_fu_517_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (next_state_16_load_fu_358_p1 = ap_const_lv32_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                next_state_fu_144(0) <= '0';
                next_state_fu_144(1) <= '0';
                next_state_fu_144(2) <= '0';
            elsif (((next_state_16_reg_862 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                                next_state_fu_144(2 downto 0) <= select_ln365_fu_608_p3(2 downto 0);
            elsif (((next_state_16_reg_862 = ap_const_lv32_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                                next_state_fu_144(2 downto 0) <= select_ln379_fu_569_p3(2 downto 0);
            end if; 
        end if;
    end process;

    tLen_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln342_reg_920 = ap_const_lv1_1) and (done_load_reg_891 = ap_const_lv1_0) and (next_state_16_reg_862 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                tLen_fu_136 <= ap_const_lv8_0;
            elsif (((icmp_ln342_reg_920 = ap_const_lv1_0) and (done_load_reg_891 = ap_const_lv1_0) and (next_state_16_reg_862 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                tLen_fu_136 <= tLen_16_reg_900;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred208_state4 = ap_const_boolean_1))) then 
                tLen_fu_136 <= tLen_15_fu_714_p2;
            end if; 
        end if;
    end process;

    tOffset_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    tOffset_fu_140 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_condition_672)) then 
                    tOffset_fu_140 <= tOffset_16_reg_905;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred213_state4 = ap_const_boolean_1))) then 
                    tOffset_fu_140 <= tOffset_15_fu_672_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                done_load_reg_891 <= done_fu_120;
                icmp_ln342_reg_920 <= icmp_ln342_fu_517_p2;
                    next_state_16_reg_862(2 downto 0) <= ap_sig_allocacmp_next_state_16(2 downto 0);
                tCh_reg_895 <= tCh_fu_417_p1;
                tLen_16_reg_900 <= curEncodedValue_fu_132(15 downto 8);
                tOffset_16_reg_905 <= curEncodedValue_fu_132(31 downto 16);
                    trunc_ln352_reg_881(4 downto 0) <= trunc_ln352_fu_384_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    ap_predicate_pred195_state4 <= (next_state_16_reg_862 = ap_const_lv32_1);
                    ap_predicate_pred203_state4 <= (next_state_16_reg_862 = ap_const_lv32_5);
                    ap_predicate_pred208_state4 <= (next_state_16_reg_862 = ap_const_lv32_4);
                    ap_predicate_pred213_state4 <= (next_state_16_reg_862 = ap_const_lv32_6);
                code_s_8_reg_934 <= dist_codes_fixed29_q0;
                dist_blen_fixed15_load_reg_939 <= dist_blen_fixed15_q0;
                done_load_reg_891_pp0_iter2_reg <= done_load_reg_891;
                icmp_ln342_reg_920_pp0_iter2_reg <= icmp_ln342_reg_920;
                    next_state_16_reg_862_pp0_iter2_reg(2 downto 0) <= next_state_16_reg_862(2 downto 0);
            end if;
        end if;
    end process;
    next_state_16_reg_862(31 downto 3) <= "00000000000000000000000000000";
    next_state_16_reg_862_pp0_iter2_reg(31 downto 3) <= "00000000000000000000000000000";
    trunc_ln352_reg_881(8 downto 5) <= "0000";
    dextra_fu_112(7 downto 4) <= "0000";
    lextra_fu_116(7 downto 3) <= "00000";
    lcode_fu_124(15 downto 5) <= "00000000000";
    dcode_fu_128(15 downto 5) <= "00000000000";
    next_state_fu_144(31 downto 3) <= "00000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln352_fu_587_p2 <= std_logic_vector(unsigned(trunc_ln352_reg_881) + unsigned(ap_const_lv9_101));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_block_state2_pp0_stage0_iter1, ap_block_state4_pp0_stage0_iter3)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_block_state2_pp0_stage0_iter1, ap_block_state4_pp0_stage0_iter3)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_block_state2_pp0_stage0_iter1, ap_block_state4_pp0_stage0_iter3)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_pp0_stage0_iter3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(encodedOutStream_empty_n, ap_predicate_op51_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op51_read_state2 = ap_const_boolean_1) and (encodedOutStream_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(hufCodeStream_full_n, next_state_16_reg_862_pp0_iter2_reg, ap_predicate_op158_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter3 <= (((ap_predicate_op158_write_state4 = ap_const_boolean_1) and (hufCodeStream_full_n = ap_const_logic_0)) or ((next_state_16_reg_862_pp0_iter2_reg = ap_const_lv32_1) and (hufCodeStream_full_n = ap_const_logic_0)) or ((next_state_16_reg_862_pp0_iter2_reg = ap_const_lv32_5) and (hufCodeStream_full_n = ap_const_logic_0)) or ((next_state_16_reg_862_pp0_iter2_reg = ap_const_lv32_4) and (hufCodeStream_full_n = ap_const_logic_0)) or ((next_state_16_reg_862_pp0_iter2_reg = ap_const_lv32_6) and (hufCodeStream_full_n = ap_const_logic_0)));
    end process;


    ap_condition_307_assign_proc : process(next_state_16_reg_862, done_load_reg_891, icmp_ln342_reg_920)
    begin
                ap_condition_307 <= ((icmp_ln342_reg_920 = ap_const_lv1_1) and (done_load_reg_891 = ap_const_lv1_0) and (next_state_16_reg_862 = ap_const_lv32_0));
    end process;


    ap_condition_669_assign_proc : process(ap_enable_reg_pp0_iter1, done_fu_120, ap_sig_allocacmp_next_state_16)
    begin
                ap_condition_669 <= ((done_fu_120 = ap_const_lv1_0) and (ap_sig_allocacmp_next_state_16 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_672_assign_proc : process(ap_enable_reg_pp0_iter2, next_state_16_reg_862, done_load_reg_891)
    begin
                ap_condition_672 <= ((done_load_reg_891 = ap_const_lv1_0) and (next_state_16_reg_862 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, done_load_load_fu_393_p1, ap_block_pp0_stage0_subdone, ap_sig_allocacmp_next_state_16)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (done_load_load_fu_393_p1 = ap_const_lv1_1) and (ap_sig_allocacmp_next_state_16 = ap_const_lv32_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_predicate_op158_write_state4_assign_proc : process(next_state_16_reg_862_pp0_iter2_reg, done_load_reg_891_pp0_iter2_reg, icmp_ln342_reg_920_pp0_iter2_reg)
    begin
                ap_predicate_op158_write_state4 <= ((icmp_ln342_reg_920_pp0_iter2_reg = ap_const_lv1_1) and (done_load_reg_891_pp0_iter2_reg = ap_const_lv1_0) and (next_state_16_reg_862_pp0_iter2_reg = ap_const_lv32_0));
    end process;


    ap_predicate_op51_read_state2_assign_proc : process(done_fu_120, ap_sig_allocacmp_next_state_16)
    begin
                ap_predicate_op51_read_state2 <= ((done_fu_120 = ap_const_lv1_0) and (ap_sig_allocacmp_next_state_16 = ap_const_lv32_0));
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_dcode_load_8_assign_proc : process(ap_enable_reg_pp0_iter2, next_state_16_reg_862, done_load_reg_891, ap_block_pp0_stage0, dcode_fu_128, zext_ln339_8_fu_626_p1)
    begin
        if (((done_load_reg_891 = ap_const_lv1_0) and (next_state_16_reg_862 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_dcode_load_8 <= zext_ln339_8_fu_626_p1;
        else 
            ap_sig_allocacmp_dcode_load_8 <= dcode_fu_128;
        end if; 
    end process;


    ap_sig_allocacmp_lcode_load_assign_proc : process(ap_enable_reg_pp0_iter2, next_state_16_reg_862, done_load_reg_891, ap_block_pp0_stage0, lcode_fu_124, zext_ln340_7_fu_630_p1)
    begin
        if (((done_load_reg_891 = ap_const_lv1_0) and (next_state_16_reg_862 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_lcode_load <= zext_ln340_7_fu_630_p1;
        else 
            ap_sig_allocacmp_lcode_load <= lcode_fu_124;
        end if; 
    end process;


    ap_sig_allocacmp_next_state_16_assign_proc : process(ap_enable_reg_pp0_iter2, next_state_16_reg_862, ap_block_pp0_stage0, next_state_fu_144, select_ln379_fu_569_p3, select_ln365_fu_608_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((next_state_16_reg_862 = ap_const_lv32_1)) then 
                ap_sig_allocacmp_next_state_16 <= select_ln365_fu_608_p3;
            elsif ((next_state_16_reg_862 = ap_const_lv32_5)) then 
                ap_sig_allocacmp_next_state_16 <= select_ln379_fu_569_p3;
            else 
                ap_sig_allocacmp_next_state_16 <= next_state_fu_144;
            end if;
        else 
            ap_sig_allocacmp_next_state_16 <= next_state_fu_144;
        end if; 
    end process;

    base_dist1_address0 <= zext_ln388_fu_546_p1(5 - 1 downto 0);

    base_dist1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            base_dist1_ce0_local <= ap_const_logic_1;
        else 
            base_dist1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    base_dist_load_cast_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(base_dist1_q0),16));
    base_length8_address0 <= zext_ln380_fu_554_p1(5 - 1 downto 0);

    base_length8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            base_length8_ce0_local <= ap_const_logic_1;
        else 
            base_length8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    bit_sel_fu_467_p3 <= curEncodedValue_fu_132(31 downto 31);
    dcode_8_fu_499_p3 <= 
        tOffset_1670_cast_fu_457_p4 when (icmp_ln339_fu_451_p2(0) = '1') else 
        xor_ln_fu_491_p3;
    dextra_9_cast_cast_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_q0),8));
    dist_blen_fixed15_address0 <= zext_ln366_fu_374_p1(5 - 1 downto 0);

    dist_blen_fixed15_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dist_blen_fixed15_ce0_local <= ap_const_logic_1;
        else 
            dist_blen_fixed15_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    dist_blen_fixed_load_cast_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dist_blen_fixed15_load_reg_939),4));
    dist_code22_address0 <= zext_ln339_fu_507_p1(9 - 1 downto 0);

    dist_code22_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dist_code22_ce0_local <= ap_const_logic_1;
        else 
            dist_code22_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    dist_codes_fixed29_address0 <= zext_ln366_fu_374_p1(5 - 1 downto 0);

    dist_codes_fixed29_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dist_codes_fixed29_ce0_local <= ap_const_logic_1;
        else 
            dist_codes_fixed29_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    done_248_fu_411_p2 <= (nextEncodedValue_strobe_fu_403_p3 xor ap_const_lv1_1);
    done_load_load_fu_393_p1 <= done_fu_120;

    encodedOutStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, encodedOutStream_empty_n, ap_predicate_op51_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op51_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            encodedOutStream_blk_n <= encodedOutStream_empty_n;
        else 
            encodedOutStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    encodedOutStream_read <= encodedOutStream_read_local;

    encodedOutStream_read_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op51_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op51_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            encodedOutStream_read_local <= ap_const_logic_1;
        else 
            encodedOutStream_read_local <= ap_const_logic_0;
        end if; 
    end process;


    hufCodeStream_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, hufCodeStream_full_n, ap_predicate_op158_write_state4, ap_block_pp0_stage0, ap_predicate_pred195_state4, ap_predicate_pred203_state4, ap_predicate_pred208_state4, ap_predicate_pred213_state4)
    begin
        if ((((ap_predicate_op158_write_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred213_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred208_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred203_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred195_state4 = ap_const_boolean_1)))) then 
            hufCodeStream_blk_n <= hufCodeStream_full_n;
        else 
            hufCodeStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    hufCodeStream_din <= hufCodeStream_din_local;

    hufCodeStream_din_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_write_state4, ap_predicate_pred195_state4, ap_predicate_pred203_state4, ap_predicate_pred208_state4, ap_predicate_pred213_state4, tmp_208_fu_686_p4, ap_block_pp0_stage0_01001, tmp_207_fu_724_p5, tmp_206_fu_748_p4, tmp_s_fu_763_p4, tmp_209_fu_778_p4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((ap_predicate_op158_write_state4 = ap_const_boolean_1)) then 
                hufCodeStream_din_local <= tmp_209_fu_778_p4;
            elsif ((ap_predicate_pred195_state4 = ap_const_boolean_1)) then 
                hufCodeStream_din_local <= tmp_s_fu_763_p4;
            elsif ((ap_predicate_pred203_state4 = ap_const_boolean_1)) then 
                hufCodeStream_din_local <= tmp_206_fu_748_p4;
            elsif ((ap_predicate_pred208_state4 = ap_const_boolean_1)) then 
                hufCodeStream_din_local <= tmp_207_fu_724_p5;
            elsif ((ap_predicate_pred213_state4 = ap_const_boolean_1)) then 
                hufCodeStream_din_local <= tmp_208_fu_686_p4;
            else 
                hufCodeStream_din_local <= "XXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            hufCodeStream_din_local <= "XXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    hufCodeStream_write <= hufCodeStream_write_local;

    hufCodeStream_write_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op158_write_state4, ap_block_pp0_stage0_11001, ap_predicate_pred195_state4, ap_predicate_pred203_state4, ap_predicate_pred208_state4, ap_predicate_pred213_state4)
    begin
        if ((((ap_predicate_op158_write_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred213_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred208_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred203_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_predicate_pred195_state4 = ap_const_boolean_1)))) then 
            hufCodeStream_write_local <= ap_const_logic_1;
        else 
            hufCodeStream_write_local <= ap_const_logic_0;
        end if; 
    end process;

    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_address0 <= zext_ln366_fu_374_p1(5 - 1 downto 0);

    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_ce0_local <= ap_const_logic_1;
        else 
            huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_address0 <= zext_ln354_fu_388_p1(5 - 1 downto 0);

    huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_ce0_local <= ap_const_logic_1;
        else 
            huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln339_fu_451_p2 <= "1" when (tmp_288_fu_441_p4 = ap_const_lv8_0) else "0";
    icmp_ln342_fu_517_p2 <= "1" when (tLen_16_fu_421_p4 = ap_const_lv8_0) else "0";
    icmp_ln360_fu_602_p2 <= "0" when (huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_q0 = ap_const_lv3_0) else "1";
    icmp_ln374_fu_563_p2 <= "0" when (huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_dbits37_q0 = ap_const_lv4_0) else "1";
    length_code52_address0 <= zext_ln340_fu_512_p1(9 - 1 downto 0);

    length_code52_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            length_code52_ce0_local <= ap_const_logic_1;
        else 
            length_code52_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    lextra_8_cast_cast_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(huffmanEncoderStatic_stream_stream_DSVectorStream_dt_0_extra_lbits45_q0),8));

    lit_blen_fixed59_address0_local_assign_proc : process(ap_enable_reg_pp0_iter2, next_state_16_reg_862, ap_block_pp0_stage0, zext_ln352_fu_592_p1, zext_ln345_fu_652_p1, ap_condition_307)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_307)) then 
                lit_blen_fixed59_address0_local <= zext_ln345_fu_652_p1(9 - 1 downto 0);
            elsif ((next_state_16_reg_862 = ap_const_lv32_1)) then 
                lit_blen_fixed59_address0_local <= zext_ln352_fu_592_p1(9 - 1 downto 0);
            else 
                lit_blen_fixed59_address0_local <= "XXXXXXXXX";
            end if;
        else 
            lit_blen_fixed59_address0_local <= "XXXXXXXXX";
        end if; 
    end process;


    lit_blen_fixed59_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, next_state_16_reg_862, done_load_reg_891, icmp_ln342_reg_920, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln342_reg_920 = ap_const_lv1_1) and (done_load_reg_891 = ap_const_lv1_0) and (next_state_16_reg_862 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((next_state_16_reg_862 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            lit_blen_fixed59_ce0_local <= ap_const_logic_1;
        else 
            lit_blen_fixed59_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    lit_code_fixed66_address0_local_assign_proc : process(ap_enable_reg_pp0_iter2, next_state_16_reg_862, ap_block_pp0_stage0, zext_ln352_fu_592_p1, zext_ln345_fu_652_p1, ap_condition_307)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_307)) then 
                lit_code_fixed66_address0_local <= zext_ln345_fu_652_p1(9 - 1 downto 0);
            elsif ((next_state_16_reg_862 = ap_const_lv32_1)) then 
                lit_code_fixed66_address0_local <= zext_ln352_fu_592_p1(9 - 1 downto 0);
            else 
                lit_code_fixed66_address0_local <= "XXXXXXXXX";
            end if;
        else 
            lit_code_fixed66_address0_local <= "XXXXXXXXX";
        end if; 
    end process;


    lit_code_fixed66_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, next_state_16_reg_862, done_load_reg_891, icmp_ln342_reg_920, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln342_reg_920 = ap_const_lv1_1) and (done_load_reg_891 = ap_const_lv1_0) and (next_state_16_reg_862 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((next_state_16_reg_862 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            lit_code_fixed66_ce0_local <= ap_const_logic_1;
        else 
            lit_code_fixed66_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    newFirst_fu_708_p2 <= std_logic_vector(signed(ap_const_lv8_FD) - signed(base_length8_q0));
    nextEncodedValue_data_fu_399_p1 <= encodedOutStream_dout(32 - 1 downto 0);
    nextEncodedValue_strobe_fu_403_p3 <= encodedOutStream_dout(32 downto 32);
    next_state_16_load_fu_358_p1 <= ap_sig_allocacmp_next_state_16;
    part_sel_fu_481_p4 <= curEncodedValue_fu_132(30 downto 23);
    select_ln365_fu_608_p3 <= 
        ap_const_lv32_4 when (icmp_ln360_fu_602_p2(0) = '1') else 
        ap_const_lv32_5;
    select_ln379_fu_569_p3 <= 
        ap_const_lv32_6 when (icmp_ln374_fu_563_p2(0) = '1') else 
        ap_const_lv32_0;
    tCh_fu_417_p1 <= curEncodedValue_fu_132(8 - 1 downto 0);
    tLen_15_fu_714_p2 <= std_logic_vector(unsigned(tLen_fu_136) + unsigned(newFirst_fu_708_p2));
    tLen_16_fu_421_p4 <= curEncodedValue_fu_132(15 downto 8);
    tOffset_15_fu_672_p2 <= std_logic_vector(unsigned(tOffset_fu_140) - unsigned(base_dist_load_cast_fu_668_p1));
    tOffset_1670_cast_fu_457_p4 <= curEncodedValue_fu_132(24 downto 16);
    tmp_206_fu_748_p4 <= ((ap_const_lv1_1 & dist_blen_fixed_load_cast_fu_742_p1) & zext_ln370_fu_745_p1);
    tmp_207_fu_724_p5 <= (((ap_const_lv1_1 & trunc_ln382_fu_720_p1) & ap_const_lv7_0) & tLen_15_fu_714_p2);
    tmp_208_fu_686_p4 <= ((ap_const_lv1_1 & trunc_ln390_fu_682_p1) & trunc_ln389_fu_678_p1);
    tmp_209_fu_778_p4 <= ((ap_const_lv1_1 & lit_blen_fixed59_q0) & zext_ln345_7_fu_774_p1);
    tmp_288_fu_441_p4 <= curEncodedValue_fu_132(31 downto 24);
    tmp_s_fu_763_p4 <= ((ap_const_lv1_1 & lit_blen_fixed59_q0) & zext_ln356_fu_759_p1);
    trunc_ln352_fu_384_p1 <= ap_sig_allocacmp_lcode_load(9 - 1 downto 0);
    trunc_ln382_fu_720_p1 <= lextra_fu_116(4 - 1 downto 0);
    trunc_ln389_fu_678_p1 <= tOffset_15_fu_672_p2(15 - 1 downto 0);
    trunc_ln390_fu_682_p1 <= dextra_fu_112(4 - 1 downto 0);
    xor_ln339_fu_475_p2 <= (bit_sel_fu_467_p3 xor ap_const_lv1_1);
    xor_ln_fu_491_p3 <= (xor_ln339_fu_475_p2 & part_sel_fu_481_p4);
    zext_ln339_8_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dist_code22_q0),16));
    zext_ln339_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dcode_8_fu_499_p3),64));
    zext_ln340_7_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(length_code52_q0),16));
    zext_ln340_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tLen_16_fu_421_p4),64));
    zext_ln345_7_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lit_code_fixed66_q0),15));
    zext_ln345_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tCh_reg_895),64));
    zext_ln352_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln352_fu_587_p2),64));
    zext_ln354_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_lcode_load),64));
    zext_ln356_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lit_code_fixed66_q0),15));
    zext_ln366_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_dcode_load_8),64));
    zext_ln370_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(code_s_8_reg_934),15));
    zext_ln380_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lcode_fu_124),64));
    zext_ln388_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dcode_fu_128),64));
end behav;

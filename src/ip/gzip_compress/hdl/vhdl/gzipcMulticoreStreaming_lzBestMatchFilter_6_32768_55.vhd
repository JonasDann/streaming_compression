-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_lzBestMatchFilter_6_32768_55 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    compressedStream_dout : IN STD_LOGIC_VECTOR (32 downto 0);
    compressedStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    compressedStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    compressedStream_empty_n : IN STD_LOGIC;
    compressedStream_read : OUT STD_LOGIC;
    compressedStream1_din : OUT STD_LOGIC_VECTOR (32 downto 0);
    compressedStream1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    compressedStream1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    compressedStream1_full_n : IN STD_LOGIC;
    compressedStream1_write : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_lzBestMatchFilter_6_32768_55 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal compressedStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal compressedStream1_blk_n : STD_LOGIC;
    signal nextVal_strobe_fu_67_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln370_fu_75_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln370_reg_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal compressedStream_read_3_reg_105 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_done : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_idle : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_ready : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream_read : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_din : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_write : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out_ap_vld : STD_LOGIC;
    signal grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm_state4 : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal compressedStream_read_local : STD_LOGIC;
    signal compressedStream1_din_local : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_s_fu_82_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal compressedStream1_write_local : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        compressedStream_dout : IN STD_LOGIC_VECTOR (32 downto 0);
        compressedStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        compressedStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        compressedStream_empty_n : IN STD_LOGIC;
        compressedStream_read : OUT STD_LOGIC;
        compressedStream1_din : OUT STD_LOGIC_VECTOR (32 downto 0);
        compressedStream1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        compressedStream1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        compressedStream1_full_n : IN STD_LOGIC;
        compressedStream1_write : OUT STD_LOGIC;
        empty_63 : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (32 downto 0);
        phi_ln366_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        phi_ln366_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56 : component gzipcMulticoreStreaming_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start,
        ap_done => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_done,
        ap_idle => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_idle,
        ap_ready => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_ready,
        compressedStream_dout => compressedStream_dout,
        compressedStream_num_data_valid => ap_const_lv3_0,
        compressedStream_fifo_cap => ap_const_lv3_0,
        compressedStream_empty_n => compressedStream_empty_n,
        compressedStream_read => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream_read,
        compressedStream1_din => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_din,
        compressedStream1_num_data_valid => ap_const_lv3_0,
        compressedStream1_fifo_cap => ap_const_lv3_0,
        compressedStream1_full_n => compressedStream1_full_n,
        compressedStream1_write => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_write,
        empty_63 => trunc_ln370_reg_100,
        empty => compressedStream_read_3_reg_105,
        phi_ln366_out => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out,
        phi_ln366_out_ap_vld => grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state2) and (nextVal_strobe_fu_67_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = ap_NS_fsm_state4))) then 
                    grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_ready = ap_const_logic_1)) then 
                    grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((compressedStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                compressedStream_read_3_reg_105 <= compressedStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                trunc_ln370_reg_100 <= trunc_ln370_fu_75_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, compressedStream_empty_n, compressedStream1_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, nextVal_strobe_fu_67_p3, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_block_state2, grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_done, ap_CS_fsm_state5, ap_block_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2) and (nextVal_strobe_fu_67_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_boolean_0 = ap_block_state2) and (nextVal_strobe_fu_67_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((compressedStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((compressedStream1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((compressedStream1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_NS_fsm_state4 <= ap_NS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(compressedStream_empty_n)
    begin
        if ((compressedStream_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_done)
    begin
        if ((grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(compressedStream1_full_n)
    begin
        if ((compressedStream1_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(compressedStream1_full_n)
    begin
        if ((compressedStream1_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(compressedStream_empty_n, compressedStream1_full_n, nextVal_strobe_fu_67_p3)
    begin
                ap_block_state2 <= ((compressedStream_empty_n = ap_const_logic_0) or ((nextVal_strobe_fu_67_p3 = ap_const_lv1_0) and (compressedStream1_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, nextVal_strobe_fu_67_p3, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (nextVal_strobe_fu_67_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    compressedStream1_blk_n_assign_proc : process(compressedStream1_full_n, ap_CS_fsm_state2, nextVal_strobe_fu_67_p3, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((nextVal_strobe_fu_67_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            compressedStream1_blk_n <= compressedStream1_full_n;
        else 
            compressedStream1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    compressedStream1_din_assign_proc : process(grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_din, ap_CS_fsm_state5, compressedStream1_din_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            compressedStream1_din <= grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_din;
        else 
            compressedStream1_din <= compressedStream1_din_local;
        end if; 
    end process;


    compressedStream1_din_local_assign_proc : process(compressedStream1_full_n, ap_CS_fsm_state2, nextVal_strobe_fu_67_p3, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_block_state2, tmp_s_fu_82_p3)
    begin
        if (((compressedStream1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            compressedStream1_din_local <= tmp_s_fu_82_p3;
        elsif ((((ap_const_boolean_0 = ap_block_state2) and (nextVal_strobe_fu_67_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((compressedStream1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            compressedStream1_din_local <= ap_const_lv33_0;
        else 
            compressedStream1_din_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    compressedStream1_write_assign_proc : process(grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_write, ap_CS_fsm_state5, compressedStream1_write_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            compressedStream1_write <= grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream1_write;
        else 
            compressedStream1_write <= compressedStream1_write_local;
        end if; 
    end process;


    compressedStream1_write_local_assign_proc : process(compressedStream1_full_n, ap_CS_fsm_state2, nextVal_strobe_fu_67_p3, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_block_state2)
    begin
        if ((((ap_const_boolean_0 = ap_block_state2) and (nextVal_strobe_fu_67_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((compressedStream1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((compressedStream1_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            compressedStream1_write_local <= ap_const_logic_1;
        else 
            compressedStream1_write_local <= ap_const_logic_0;
        end if; 
    end process;


    compressedStream_blk_n_assign_proc : process(compressedStream_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            compressedStream_blk_n <= compressedStream_empty_n;
        else 
            compressedStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    compressedStream_read_assign_proc : process(grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream_read, ap_CS_fsm_state5, compressedStream_read_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            compressedStream_read <= grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_compressedStream_read;
        else 
            compressedStream_read <= compressedStream_read_local;
        end if; 
    end process;


    compressedStream_read_local_assign_proc : process(compressedStream_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_block_state2)
    begin
        if ((((compressedStream_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            compressedStream_read_local <= ap_const_logic_1;
        else 
            compressedStream_read_local <= ap_const_logic_0;
        end if; 
    end process;

    grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start <= grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_ap_start_reg;

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, nextVal_strobe_fu_67_p3, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (nextVal_strobe_fu_67_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    nextVal_strobe_fu_67_p3 <= compressedStream_dout(32 downto 32);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_82_p3 <= (ap_const_lv1_1 & grp_lzBestMatchFilter_6_32768_55_Pipeline_lz_bestMatchFilter_fu_56_phi_ln366_out);
    trunc_ln370_fu_75_p1 <= compressedStream_dout(32 - 1 downto 0);
end behav;

-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_gzipZlibPackerEngine_8_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    mergeStream_0_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_0_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_0_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_0_empty_n : IN STD_LOGIC;
    mergeStream_0_read : OUT STD_LOGIC;
    mergeStream_1_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_1_empty_n : IN STD_LOGIC;
    mergeStream_1_read : OUT STD_LOGIC;
    mergeStream_2_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_2_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_2_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_2_empty_n : IN STD_LOGIC;
    mergeStream_2_read : OUT STD_LOGIC;
    mergeStream_3_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_3_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_3_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_3_empty_n : IN STD_LOGIC;
    mergeStream_3_read : OUT STD_LOGIC;
    mergeStream_4_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_4_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_4_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_4_empty_n : IN STD_LOGIC;
    mergeStream_4_read : OUT STD_LOGIC;
    mergeStream_5_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_5_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_5_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_5_empty_n : IN STD_LOGIC;
    mergeStream_5_read : OUT STD_LOGIC;
    mergeStream_6_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_6_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_6_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_6_empty_n : IN STD_LOGIC;
    mergeStream_6_read : OUT STD_LOGIC;
    mergeStream_7_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    mergeStream_7_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_7_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
    mergeStream_7_empty_n : IN STD_LOGIC;
    mergeStream_7_read : OUT STD_LOGIC;
    packedStream_din : OUT STD_LOGIC_VECTOR (67 downto 0);
    packedStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    packedStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    packedStream_full_n : IN STD_LOGIC;
    packedStream_write : OUT STD_LOGIC;
    strdStream_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    strdStream_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    strdStream_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    strdStream_empty_n : IN STD_LOGIC;
    strdStream_read : OUT STD_LOGIC;
    strdSizeStream_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    strdSizeStream_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    strdSizeStream_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    strdSizeStream_empty_n : IN STD_LOGIC;
    strdSizeStream_read : OUT STD_LOGIC;
    fileSizeStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fileSizeStream_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    fileSizeStream_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    fileSizeStream_empty_n : IN STD_LOGIC;
    fileSizeStream_read : OUT STD_LOGIC;
    checksumOutStream_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    checksumOutStream_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    checksumOutStream_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    checksumOutStream_empty_n : IN STD_LOGIC;
    checksumOutStream_read : OUT STD_LOGIC;
    coreIdxStream_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    coreIdxStream_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    coreIdxStream_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    coreIdxStream_empty_n : IN STD_LOGIC;
    coreIdxStream_read : OUT STD_LOGIC;
    blckEosStream_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    blckEosStream_num_data_valid : IN STD_LOGIC_VECTOR (7 downto 0);
    blckEosStream_fifo_cap : IN STD_LOGIC_VECTOR (7 downto 0);
    blckEosStream_empty_n : IN STD_LOGIC;
    blckEosStream_read : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_gzipZlibPackerEngine_8_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv68_8088B1F8 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000010000000100010001011000111111000";
    constant ap_const_lv68_7803004 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000111100000000011000000000100";
    constant ap_const_lv68_FFFF0000015 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000011111111111111110000000000000000000000010101";
    constant ap_const_lv68_0 : STD_LOGIC_VECTOR (67 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv12_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000000101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal packedStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal strdSizeStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_phi_mux_blckEos_1_phi_fu_150_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal fileSizeStream_blk_n : STD_LOGIC;
    signal checksumOutStream_blk_n : STD_LOGIC;
    signal coreIdxStream_blk_n : STD_LOGIC;
    signal blckEosStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state2 : BOOLEAN;
    signal empty_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_reg_323 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal sizeVal_reg_328 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln429_fu_263_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln429_reg_344 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal fileSizeStream_read_reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11 : BOOLEAN;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_done : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_idle : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_ready : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_6_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_5_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_4_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_3_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_2_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_1_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_0_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_7_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_packedStream_din : STD_LOGIC_VECTOR (67 downto 0);
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_packedStream_write : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_done : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_idle : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_ready : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_strdStream_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_packedStream_din : STD_LOGIC_VECTOR (67 downto 0);
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_packedStream_write : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_idle : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_ready : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_6_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_5_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_4_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_3_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_2_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_1_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_0_read : STD_LOGIC;
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_7_read : STD_LOGIC;
    signal blckEos_1_reg_147 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal core_1_1_fu_102 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal core_2_fu_234_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln383_fu_210_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal packedStream_din_local : STD_LOGIC_VECTOR (67 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal zext_ln419_fu_258_p1 : STD_LOGIC_VECTOR (67 downto 0);
    signal zext_ln382_fu_291_p1 : STD_LOGIC_VECTOR (67 downto 0);
    signal zext_ln453_fu_303_p1 : STD_LOGIC_VECTOR (67 downto 0);
    signal packedStream_write_local : STD_LOGIC;
    signal coreIdxStream_read_local : STD_LOGIC;
    signal blckEosStream_read_local : STD_LOGIC;
    signal strdSizeStream_read_local : STD_LOGIC;
    signal checksumOutStream_read_local : STD_LOGIC;
    signal fileSizeStream_read_local : STD_LOGIC;
    signal tmpVal_fu_244_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmpVal_1_fu_249_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_41_fu_267_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln448_fu_275_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmpVal_2_fu_279_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal sext_ln382_fu_287_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal tmpVal_3_fu_296_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal strdFlg_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mergeStream_6_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_6_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_6_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_6_empty_n : IN STD_LOGIC;
        mergeStream_6_read : OUT STD_LOGIC;
        mergeStream_5_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_5_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_5_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_5_empty_n : IN STD_LOGIC;
        mergeStream_5_read : OUT STD_LOGIC;
        mergeStream_4_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_4_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_4_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_4_empty_n : IN STD_LOGIC;
        mergeStream_4_read : OUT STD_LOGIC;
        mergeStream_3_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_3_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_3_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_3_empty_n : IN STD_LOGIC;
        mergeStream_3_read : OUT STD_LOGIC;
        mergeStream_2_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_2_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_2_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_2_empty_n : IN STD_LOGIC;
        mergeStream_2_read : OUT STD_LOGIC;
        mergeStream_1_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_1_empty_n : IN STD_LOGIC;
        mergeStream_1_read : OUT STD_LOGIC;
        mergeStream_0_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_0_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_0_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_0_empty_n : IN STD_LOGIC;
        mergeStream_0_read : OUT STD_LOGIC;
        mergeStream_7_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_7_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_7_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_7_empty_n : IN STD_LOGIC;
        mergeStream_7_read : OUT STD_LOGIC;
        packedStream_din : OUT STD_LOGIC_VECTOR (67 downto 0);
        packedStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        packedStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        packedStream_full_n : IN STD_LOGIC;
        packedStream_write : OUT STD_LOGIC;
        core_1 : IN STD_LOGIC_VECTOR (2 downto 0);
        empty : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component gzipcMulticoreStreaming_gzipZlibPackerEngine_8_0_Pipeline_strdBlck IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        strdStream_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        strdStream_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        strdStream_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        strdStream_empty_n : IN STD_LOGIC;
        strdStream_read : OUT STD_LOGIC;
        packedStream_din : OUT STD_LOGIC_VECTOR (67 downto 0);
        packedStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        packedStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        packedStream_full_n : IN STD_LOGIC;
        packedStream_write : OUT STD_LOGIC;
        zext_ln429 : IN STD_LOGIC_VECTOR (15 downto 0);
        empty : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component gzipcMulticoreStreaming_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mergeStream_6_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_6_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_6_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_6_empty_n : IN STD_LOGIC;
        mergeStream_6_read : OUT STD_LOGIC;
        mergeStream_5_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_5_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_5_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_5_empty_n : IN STD_LOGIC;
        mergeStream_5_read : OUT STD_LOGIC;
        mergeStream_4_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_4_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_4_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_4_empty_n : IN STD_LOGIC;
        mergeStream_4_read : OUT STD_LOGIC;
        mergeStream_3_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_3_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_3_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_3_empty_n : IN STD_LOGIC;
        mergeStream_3_read : OUT STD_LOGIC;
        mergeStream_2_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_2_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_2_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_2_empty_n : IN STD_LOGIC;
        mergeStream_2_read : OUT STD_LOGIC;
        mergeStream_1_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_1_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_1_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_1_empty_n : IN STD_LOGIC;
        mergeStream_1_read : OUT STD_LOGIC;
        mergeStream_0_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_0_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_0_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_0_empty_n : IN STD_LOGIC;
        mergeStream_0_read : OUT STD_LOGIC;
        mergeStream_7_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        mergeStream_7_num_data_valid : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_7_fifo_cap : IN STD_LOGIC_VECTOR (9 downto 0);
        mergeStream_7_empty_n : IN STD_LOGIC;
        mergeStream_7_read : OUT STD_LOGIC );
    end component;



begin
    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156 : component gzipcMulticoreStreaming_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start,
        ap_done => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_done,
        ap_idle => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_idle,
        ap_ready => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_ready,
        mergeStream_6_dout => mergeStream_6_dout,
        mergeStream_6_num_data_valid => ap_const_lv10_0,
        mergeStream_6_fifo_cap => ap_const_lv10_0,
        mergeStream_6_empty_n => mergeStream_6_empty_n,
        mergeStream_6_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_6_read,
        mergeStream_5_dout => mergeStream_5_dout,
        mergeStream_5_num_data_valid => ap_const_lv10_0,
        mergeStream_5_fifo_cap => ap_const_lv10_0,
        mergeStream_5_empty_n => mergeStream_5_empty_n,
        mergeStream_5_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_5_read,
        mergeStream_4_dout => mergeStream_4_dout,
        mergeStream_4_num_data_valid => ap_const_lv10_0,
        mergeStream_4_fifo_cap => ap_const_lv10_0,
        mergeStream_4_empty_n => mergeStream_4_empty_n,
        mergeStream_4_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_4_read,
        mergeStream_3_dout => mergeStream_3_dout,
        mergeStream_3_num_data_valid => ap_const_lv10_0,
        mergeStream_3_fifo_cap => ap_const_lv10_0,
        mergeStream_3_empty_n => mergeStream_3_empty_n,
        mergeStream_3_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_3_read,
        mergeStream_2_dout => mergeStream_2_dout,
        mergeStream_2_num_data_valid => ap_const_lv10_0,
        mergeStream_2_fifo_cap => ap_const_lv10_0,
        mergeStream_2_empty_n => mergeStream_2_empty_n,
        mergeStream_2_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_2_read,
        mergeStream_1_dout => mergeStream_1_dout,
        mergeStream_1_num_data_valid => ap_const_lv10_0,
        mergeStream_1_fifo_cap => ap_const_lv10_0,
        mergeStream_1_empty_n => mergeStream_1_empty_n,
        mergeStream_1_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_1_read,
        mergeStream_0_dout => mergeStream_0_dout,
        mergeStream_0_num_data_valid => ap_const_lv10_0,
        mergeStream_0_fifo_cap => ap_const_lv10_0,
        mergeStream_0_empty_n => mergeStream_0_empty_n,
        mergeStream_0_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_0_read,
        mergeStream_7_dout => mergeStream_7_dout,
        mergeStream_7_num_data_valid => ap_const_lv10_0,
        mergeStream_7_fifo_cap => ap_const_lv10_0,
        mergeStream_7_empty_n => mergeStream_7_empty_n,
        mergeStream_7_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_7_read,
        packedStream_din => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_packedStream_din,
        packedStream_num_data_valid => ap_const_lv3_0,
        packedStream_fifo_cap => ap_const_lv3_0,
        packedStream_full_n => packedStream_full_n,
        packedStream_write => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_packedStream_write,
        core_1 => core_1_1_fu_102,
        empty => empty_reg_323);

    grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180 : component gzipcMulticoreStreaming_gzipZlibPackerEngine_8_0_Pipeline_strdBlck
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start,
        ap_done => grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_done,
        ap_idle => grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_idle,
        ap_ready => grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_ready,
        strdStream_dout => strdStream_dout,
        strdStream_num_data_valid => ap_const_lv4_0,
        strdStream_fifo_cap => ap_const_lv4_0,
        strdStream_empty_n => strdStream_empty_n,
        strdStream_read => grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_strdStream_read,
        packedStream_din => grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_packedStream_din,
        packedStream_num_data_valid => ap_const_lv3_0,
        packedStream_fifo_cap => ap_const_lv3_0,
        packedStream_full_n => packedStream_full_n,
        packedStream_write => grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_packedStream_write,
        zext_ln429 => sizeVal_reg_328,
        empty => trunc_ln429_reg_344);

    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190 : component gzipcMulticoreStreaming_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start,
        ap_done => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done,
        ap_idle => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_idle,
        ap_ready => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_ready,
        mergeStream_6_dout => mergeStream_6_dout,
        mergeStream_6_num_data_valid => ap_const_lv10_0,
        mergeStream_6_fifo_cap => ap_const_lv10_0,
        mergeStream_6_empty_n => mergeStream_6_empty_n,
        mergeStream_6_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_6_read,
        mergeStream_5_dout => mergeStream_5_dout,
        mergeStream_5_num_data_valid => ap_const_lv10_0,
        mergeStream_5_fifo_cap => ap_const_lv10_0,
        mergeStream_5_empty_n => mergeStream_5_empty_n,
        mergeStream_5_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_5_read,
        mergeStream_4_dout => mergeStream_4_dout,
        mergeStream_4_num_data_valid => ap_const_lv10_0,
        mergeStream_4_fifo_cap => ap_const_lv10_0,
        mergeStream_4_empty_n => mergeStream_4_empty_n,
        mergeStream_4_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_4_read,
        mergeStream_3_dout => mergeStream_3_dout,
        mergeStream_3_num_data_valid => ap_const_lv10_0,
        mergeStream_3_fifo_cap => ap_const_lv10_0,
        mergeStream_3_empty_n => mergeStream_3_empty_n,
        mergeStream_3_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_3_read,
        mergeStream_2_dout => mergeStream_2_dout,
        mergeStream_2_num_data_valid => ap_const_lv10_0,
        mergeStream_2_fifo_cap => ap_const_lv10_0,
        mergeStream_2_empty_n => mergeStream_2_empty_n,
        mergeStream_2_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_2_read,
        mergeStream_1_dout => mergeStream_1_dout,
        mergeStream_1_num_data_valid => ap_const_lv10_0,
        mergeStream_1_fifo_cap => ap_const_lv10_0,
        mergeStream_1_empty_n => mergeStream_1_empty_n,
        mergeStream_1_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_1_read,
        mergeStream_0_dout => mergeStream_0_dout,
        mergeStream_0_num_data_valid => ap_const_lv10_0,
        mergeStream_0_fifo_cap => ap_const_lv10_0,
        mergeStream_0_empty_n => mergeStream_0_empty_n,
        mergeStream_0_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_0_read,
        mergeStream_7_dout => mergeStream_7_dout,
        mergeStream_7_num_data_valid => ap_const_lv10_0,
        mergeStream_7_fifo_cap => ap_const_lv10_0,
        mergeStream_7_empty_n => mergeStream_7_empty_n,
        mergeStream_7_read => grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_7_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_ready = ap_const_logic_1)) then 
                    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_ready = ap_const_logic_1)) then 
                    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_ready = ap_const_logic_1)) then 
                    grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    core_1_1_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                core_1_1_fu_102 <= trunc_ln383_fu_210_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (blckEosStream_empty_n = ap_const_logic_1))) then 
                core_1_1_fu_102 <= core_2_fu_234_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (blckEosStream_empty_n = ap_const_logic_1)))) then
                blckEos_1_reg_147 <= blckEosStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                empty_reg_323 <= empty_fu_222_p2;
                sizeVal_reg_328 <= strdSizeStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                fileSizeStream_read_reg_349 <= fileSizeStream_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                trunc_ln429_reg_344 <= trunc_ln429_fu_263_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, packedStream_full_n, blckEosStream_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state3, ap_phi_mux_blckEos_1_phi_fu_150_p4, ap_CS_fsm_state6, ap_block_state2, ap_block_state3, ap_block_state11, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_done, grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_done, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done, blckEos_1_reg_147, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state15, ap_block_state1, strdFlg_fu_228_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((strdFlg_fu_228_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (blckEos_1_reg_147 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((strdFlg_fu_228_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (blckEos_1_reg_147 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_blckEos_1_phi_fu_150_p4 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (blckEosStream_empty_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (packedStream_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (packedStream_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (packedStream_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (packedStream_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(packedStream_full_n)
    begin
        if ((packedStream_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11)
    begin
        if ((ap_const_boolean_1 = ap_block_state11)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(packedStream_full_n)
    begin
        if ((packedStream_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(packedStream_full_n)
    begin
        if ((packedStream_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done)
    begin
        if ((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2)
    begin
        if ((ap_const_boolean_1 = ap_block_state2)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3)
    begin
        if ((ap_const_boolean_1 = ap_block_state3)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_done)
    begin
        if ((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(blckEosStream_empty_n)
    begin
        if ((blckEosStream_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(packedStream_full_n)
    begin
        if ((packedStream_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_done)
    begin
        if ((grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, packedStream_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (packedStream_full_n = ap_const_logic_0));
    end process;


    ap_block_state11_assign_proc : process(packedStream_full_n, fileSizeStream_empty_n, checksumOutStream_empty_n)
    begin
                ap_block_state11 <= ((checksumOutStream_empty_n = ap_const_logic_0) or (fileSizeStream_empty_n = ap_const_logic_0) or (packedStream_full_n = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(packedStream_full_n, coreIdxStream_empty_n, blckEosStream_empty_n)
    begin
                ap_block_state2 <= ((blckEosStream_empty_n = ap_const_logic_0) or (coreIdxStream_empty_n = ap_const_logic_0) or (packedStream_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(strdSizeStream_empty_n, blckEos_1_reg_147)
    begin
                ap_block_state3 <= ((blckEos_1_reg_147 = ap_const_lv1_1) and (strdSizeStream_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done, ap_CS_fsm_state15)
    begin
        if (((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_blckEos_1_phi_fu_150_p4 <= blckEos_1_reg_147;
    ap_ready <= internal_ap_ready;

    blckEosStream_blk_n_assign_proc : process(blckEosStream_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            blckEosStream_blk_n <= blckEosStream_empty_n;
        else 
            blckEosStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    blckEosStream_read <= blckEosStream_read_local;

    blckEosStream_read_local_assign_proc : process(blckEosStream_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_block_state2)
    begin
        if ((((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (blckEosStream_empty_n = ap_const_logic_1)))) then 
            blckEosStream_read_local <= ap_const_logic_1;
        else 
            blckEosStream_read_local <= ap_const_logic_0;
        end if; 
    end process;


    checksumOutStream_blk_n_assign_proc : process(checksumOutStream_empty_n, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            checksumOutStream_blk_n <= checksumOutStream_empty_n;
        else 
            checksumOutStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    checksumOutStream_read <= checksumOutStream_read_local;

    checksumOutStream_read_local_assign_proc : process(ap_CS_fsm_state11, ap_block_state11)
    begin
        if (((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            checksumOutStream_read_local <= ap_const_logic_1;
        else 
            checksumOutStream_read_local <= ap_const_logic_0;
        end if; 
    end process;


    coreIdxStream_blk_n_assign_proc : process(coreIdxStream_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            coreIdxStream_blk_n <= coreIdxStream_empty_n;
        else 
            coreIdxStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    coreIdxStream_read <= coreIdxStream_read_local;

    coreIdxStream_read_local_assign_proc : process(ap_CS_fsm_state2, ap_block_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            coreIdxStream_read_local <= ap_const_logic_1;
        else 
            coreIdxStream_read_local <= ap_const_logic_0;
        end if; 
    end process;

    core_2_fu_234_p2 <= std_logic_vector(unsigned(core_1_1_fu_102) + unsigned(ap_const_lv3_1));
    empty_fu_222_p2 <= "1" when (core_1_1_fu_102 = ap_const_lv3_7) else "0";

    fileSizeStream_blk_n_assign_proc : process(fileSizeStream_empty_n, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            fileSizeStream_blk_n <= fileSizeStream_empty_n;
        else 
            fileSizeStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fileSizeStream_read <= fileSizeStream_read_local;

    fileSizeStream_read_local_assign_proc : process(ap_CS_fsm_state11, ap_block_state11)
    begin
        if (((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fileSizeStream_read_local <= ap_const_logic_1;
        else 
            fileSizeStream_read_local <= ap_const_logic_0;
        end if; 
    end process;

    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_ap_start_reg;
    grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_start_reg;
    grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start <= grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_ap_start_reg;

    internal_ap_ready_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done, ap_CS_fsm_state15)
    begin
        if (((grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    mergeStream_0_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_0_read, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_0_read, ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mergeStream_0_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_0_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mergeStream_0_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_0_read;
        else 
            mergeStream_0_read <= ap_const_logic_0;
        end if; 
    end process;


    mergeStream_1_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_1_read, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_1_read, ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mergeStream_1_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_1_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mergeStream_1_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_1_read;
        else 
            mergeStream_1_read <= ap_const_logic_0;
        end if; 
    end process;


    mergeStream_2_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_2_read, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_2_read, ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mergeStream_2_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_2_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mergeStream_2_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_2_read;
        else 
            mergeStream_2_read <= ap_const_logic_0;
        end if; 
    end process;


    mergeStream_3_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_3_read, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_3_read, ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mergeStream_3_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_3_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mergeStream_3_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_3_read;
        else 
            mergeStream_3_read <= ap_const_logic_0;
        end if; 
    end process;


    mergeStream_4_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_4_read, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_4_read, ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mergeStream_4_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_4_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mergeStream_4_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_4_read;
        else 
            mergeStream_4_read <= ap_const_logic_0;
        end if; 
    end process;


    mergeStream_5_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_5_read, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_5_read, ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mergeStream_5_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_5_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mergeStream_5_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_5_read;
        else 
            mergeStream_5_read <= ap_const_logic_0;
        end if; 
    end process;


    mergeStream_6_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_6_read, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_6_read, ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mergeStream_6_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_6_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mergeStream_6_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_6_read;
        else 
            mergeStream_6_read <= ap_const_logic_0;
        end if; 
    end process;


    mergeStream_7_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_7_read, grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_7_read, ap_CS_fsm_state5, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            mergeStream_7_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_459_3_fu_190_mergeStream_7_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mergeStream_7_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_mergeStream_7_read;
        else 
            mergeStream_7_read <= ap_const_logic_0;
        end if; 
    end process;


    packedStream_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, packedStream_full_n, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            packedStream_blk_n <= packedStream_full_n;
        else 
            packedStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    packedStream_din_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_packedStream_din, grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_packedStream_din, ap_CS_fsm_state5, ap_CS_fsm_state9, packedStream_din_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            packedStream_din <= grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_packedStream_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            packedStream_din <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_packedStream_din;
        else 
            packedStream_din <= packedStream_din_local;
        end if; 
    end process;


    packedStream_din_local_assign_proc : process(ap_CS_fsm_state1, packedStream_full_n, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_block_state2, ap_block_state11, ap_block_state1, zext_ln419_fu_258_p1, zext_ln382_fu_291_p1, zext_ln453_fu_303_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (packedStream_full_n = ap_const_logic_1))) then 
            packedStream_din_local <= ap_const_lv68_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (packedStream_full_n = ap_const_logic_1))) then 
            packedStream_din_local <= zext_ln453_fu_303_p1;
        elsif (((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            packedStream_din_local <= zext_ln382_fu_291_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (packedStream_full_n = ap_const_logic_1))) then 
            packedStream_din_local <= ap_const_lv68_FFFF0000015;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (packedStream_full_n = ap_const_logic_1))) then 
            packedStream_din_local <= zext_ln419_fu_258_p1;
        elsif (((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            packedStream_din_local <= ap_const_lv68_7803004;
        elsif (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            packedStream_din_local <= ap_const_lv68_8088B1F8;
        else 
            packedStream_din_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    packedStream_write_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_packedStream_write, grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_packedStream_write, ap_CS_fsm_state5, ap_CS_fsm_state9, packedStream_write_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            packedStream_write <= grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_packedStream_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            packedStream_write <= grp_gzipZlibPackerEngine_8_0_Pipeline_VITIS_LOOP_401_1_fu_156_packedStream_write;
        else 
            packedStream_write <= packedStream_write_local;
        end if; 
    end process;


    packedStream_write_local_assign_proc : process(ap_CS_fsm_state1, packedStream_full_n, ap_CS_fsm_state2, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_block_state2, ap_block_state11, ap_block_state1)
    begin
        if ((((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_state11) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_const_boolean_0 = ap_block_state2) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (packedStream_full_n = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (packedStream_full_n = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (packedStream_full_n = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (packedStream_full_n = ap_const_logic_1)))) then 
            packedStream_write_local <= ap_const_logic_1;
        else 
            packedStream_write_local <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

        sext_ln382_fu_287_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmpVal_2_fu_279_p3),44));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    strdFlg_fu_228_p2 <= "1" when (strdSizeStream_dout = ap_const_lv16_0) else "0";

    strdSizeStream_blk_n_assign_proc : process(strdSizeStream_empty_n, ap_CS_fsm_state3, blckEos_1_reg_147)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (blckEos_1_reg_147 = ap_const_lv1_1))) then 
            strdSizeStream_blk_n <= strdSizeStream_empty_n;
        else 
            strdSizeStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strdSizeStream_read <= strdSizeStream_read_local;

    strdSizeStream_read_local_assign_proc : process(ap_CS_fsm_state3, ap_block_state3, blckEos_1_reg_147)
    begin
        if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (blckEos_1_reg_147 = ap_const_lv1_1))) then 
            strdSizeStream_read_local <= ap_const_logic_1;
        else 
            strdSizeStream_read_local <= ap_const_logic_0;
        end if; 
    end process;


    strdStream_read_assign_proc : process(grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_strdStream_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            strdStream_read <= grp_gzipZlibPackerEngine_8_0_Pipeline_strdBlck_fu_180_strdStream_read;
        else 
            strdStream_read <= ap_const_logic_0;
        end if; 
    end process;

    tmpVal_1_fu_249_p4 <= ((tmpVal_fu_244_p2 & sizeVal_reg_328) & ap_const_lv12_5);
    tmpVal_2_fu_279_p3 <= (ap_const_lv1_1 & zext_ln448_fu_275_p1);
    tmpVal_3_fu_296_p3 <= (fileSizeStream_read_reg_349 & ap_const_lv4_4);
    tmpVal_fu_244_p2 <= (sizeVal_reg_328 xor ap_const_lv16_FFFF);
    tmp_41_fu_267_p3 <= (checksumOutStream_dout & ap_const_lv4_4);
    trunc_ln383_fu_210_p1 <= coreIdxStream_dout(3 - 1 downto 0);
    trunc_ln429_fu_263_p1 <= sizeVal_reg_328(4 - 1 downto 0);
    zext_ln382_fu_291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln382_fu_287_p1),68));
    zext_ln419_fu_258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmpVal_1_fu_249_p4),68));
    zext_ln448_fu_275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_267_p3),37));
    zext_ln453_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmpVal_3_fu_296_p3),68));
end behav;

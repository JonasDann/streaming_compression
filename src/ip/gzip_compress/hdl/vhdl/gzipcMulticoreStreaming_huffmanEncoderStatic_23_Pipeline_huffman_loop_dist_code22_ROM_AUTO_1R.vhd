-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_code22_ROM_AUTO_1R is 
    generic(
             DataWidth     : integer := 5; 
             AddressWidth     : integer := 9; 
             AddressRange    : integer := 512
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of gzipcMulticoreStreaming_huffmanEncoderStatic_23_Pipeline_huffman_loop_dist_code22_ROM_AUTO_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "00000", 1 => "00001", 2 => "00010", 3 => "00011", 
    4 => "00100", 5 => "00100", 6 => "00101", 7 => "00101", 
    8 => "00110", 9 => "00110", 10 => "00110", 11 => "00110", 
    12 => "00111", 13 => "00111", 14 => "00111", 15 => "00111", 
    16 => "01000", 17 => "01000", 18 => "01000", 19 => "01000", 
    20 => "01000", 21 => "01000", 22 => "01000", 23 => "01000", 
    24 => "01001", 25 => "01001", 26 => "01001", 27 => "01001", 
    28 => "01001", 29 => "01001", 30 => "01001", 31 => "01001", 
    32 => "01010", 33 => "01010", 34 => "01010", 35 => "01010", 
    36 => "01010", 37 => "01010", 38 => "01010", 39 => "01010", 
    40 => "01010", 41 => "01010", 42 => "01010", 43 => "01010", 
    44 => "01010", 45 => "01010", 46 => "01010", 47 => "01010", 
    48 => "01011", 49 => "01011", 50 => "01011", 51 => "01011", 
    52 => "01011", 53 => "01011", 54 => "01011", 55 => "01011", 
    56 => "01011", 57 => "01011", 58 => "01011", 59 => "01011", 
    60 => "01011", 61 => "01011", 62 => "01011", 63 => "01011", 
    64 => "01100", 65 => "01100", 66 => "01100", 67 => "01100", 
    68 => "01100", 69 => "01100", 70 => "01100", 71 => "01100", 
    72 => "01100", 73 => "01100", 74 => "01100", 75 => "01100", 
    76 => "01100", 77 => "01100", 78 => "01100", 79 => "01100", 
    80 => "01100", 81 => "01100", 82 => "01100", 83 => "01100", 
    84 => "01100", 85 => "01100", 86 => "01100", 87 => "01100", 
    88 => "01100", 89 => "01100", 90 => "01100", 91 => "01100", 
    92 => "01100", 93 => "01100", 94 => "01100", 95 => "01100", 
    96 => "01101", 97 => "01101", 98 => "01101", 99 => "01101", 
    100 => "01101", 101 => "01101", 102 => "01101", 103 => "01101", 
    104 => "01101", 105 => "01101", 106 => "01101", 107 => "01101", 
    108 => "01101", 109 => "01101", 110 => "01101", 111 => "01101", 
    112 => "01101", 113 => "01101", 114 => "01101", 115 => "01101", 
    116 => "01101", 117 => "01101", 118 => "01101", 119 => "01101", 
    120 => "01101", 121 => "01101", 122 => "01101", 123 => "01101", 
    124 => "01101", 125 => "01101", 126 => "01101", 127 => "01101", 
    128 => "01110", 129 => "01110", 130 => "01110", 131 => "01110", 
    132 => "01110", 133 => "01110", 134 => "01110", 135 => "01110", 
    136 => "01110", 137 => "01110", 138 => "01110", 139 => "01110", 
    140 => "01110", 141 => "01110", 142 => "01110", 143 => "01110", 
    144 => "01110", 145 => "01110", 146 => "01110", 147 => "01110", 
    148 => "01110", 149 => "01110", 150 => "01110", 151 => "01110", 
    152 => "01110", 153 => "01110", 154 => "01110", 155 => "01110", 
    156 => "01110", 157 => "01110", 158 => "01110", 159 => "01110", 
    160 => "01110", 161 => "01110", 162 => "01110", 163 => "01110", 
    164 => "01110", 165 => "01110", 166 => "01110", 167 => "01110", 
    168 => "01110", 169 => "01110", 170 => "01110", 171 => "01110", 
    172 => "01110", 173 => "01110", 174 => "01110", 175 => "01110", 
    176 => "01110", 177 => "01110", 178 => "01110", 179 => "01110", 
    180 => "01110", 181 => "01110", 182 => "01110", 183 => "01110", 
    184 => "01110", 185 => "01110", 186 => "01110", 187 => "01110", 
    188 => "01110", 189 => "01110", 190 => "01110", 191 => "01110", 
    192 => "01111", 193 => "01111", 194 => "01111", 195 => "01111", 
    196 => "01111", 197 => "01111", 198 => "01111", 199 => "01111", 
    200 => "01111", 201 => "01111", 202 => "01111", 203 => "01111", 
    204 => "01111", 205 => "01111", 206 => "01111", 207 => "01111", 
    208 => "01111", 209 => "01111", 210 => "01111", 211 => "01111", 
    212 => "01111", 213 => "01111", 214 => "01111", 215 => "01111", 
    216 => "01111", 217 => "01111", 218 => "01111", 219 => "01111", 
    220 => "01111", 221 => "01111", 222 => "01111", 223 => "01111", 
    224 => "01111", 225 => "01111", 226 => "01111", 227 => "01111", 
    228 => "01111", 229 => "01111", 230 => "01111", 231 => "01111", 
    232 => "01111", 233 => "01111", 234 => "01111", 235 => "01111", 
    236 => "01111", 237 => "01111", 238 => "01111", 239 => "01111", 
    240 => "01111", 241 => "01111", 242 => "01111", 243 => "01111", 
    244 => "01111", 245 => "01111", 246 => "01111", 247 => "01111", 
    248 => "01111", 249 => "01111", 250 => "01111", 251 => "01111", 
    252 => "01111", 253 => "01111", 254 => "01111", 255 => "01111", 
    256 => "00000", 257 => "00000", 258 => "10000", 259 => "10001", 
    260 => "10010", 261 => "10010", 262 => "10011", 263 => "10011", 
    264 => "10100", 265 => "10100", 266 => "10100", 267 => "10100", 
    268 => "10101", 269 => "10101", 270 => "10101", 271 => "10101", 
    272 => "10110", 273 => "10110", 274 => "10110", 275 => "10110", 
    276 => "10110", 277 => "10110", 278 => "10110", 279 => "10110", 
    280 => "10111", 281 => "10111", 282 => "10111", 283 => "10111", 
    284 => "10111", 285 => "10111", 286 => "10111", 287 => "10111", 
    288 => "11000", 289 => "11000", 290 => "11000", 291 => "11000", 
    292 => "11000", 293 => "11000", 294 => "11000", 295 => "11000", 
    296 => "11000", 297 => "11000", 298 => "11000", 299 => "11000", 
    300 => "11000", 301 => "11000", 302 => "11000", 303 => "11000", 
    304 => "11001", 305 => "11001", 306 => "11001", 307 => "11001", 
    308 => "11001", 309 => "11001", 310 => "11001", 311 => "11001", 
    312 => "11001", 313 => "11001", 314 => "11001", 315 => "11001", 
    316 => "11001", 317 => "11001", 318 => "11001", 319 => "11001", 
    320 => "11010", 321 => "11010", 322 => "11010", 323 => "11010", 
    324 => "11010", 325 => "11010", 326 => "11010", 327 => "11010", 
    328 => "11010", 329 => "11010", 330 => "11010", 331 => "11010", 
    332 => "11010", 333 => "11010", 334 => "11010", 335 => "11010", 
    336 => "11010", 337 => "11010", 338 => "11010", 339 => "11010", 
    340 => "11010", 341 => "11010", 342 => "11010", 343 => "11010", 
    344 => "11010", 345 => "11010", 346 => "11010", 347 => "11010", 
    348 => "11010", 349 => "11010", 350 => "11010", 351 => "11010", 
    352 => "11011", 353 => "11011", 354 => "11011", 355 => "11011", 
    356 => "11011", 357 => "11011", 358 => "11011", 359 => "11011", 
    360 => "11011", 361 => "11011", 362 => "11011", 363 => "11011", 
    364 => "11011", 365 => "11011", 366 => "11011", 367 => "11011", 
    368 => "11011", 369 => "11011", 370 => "11011", 371 => "11011", 
    372 => "11011", 373 => "11011", 374 => "11011", 375 => "11011", 
    376 => "11011", 377 => "11011", 378 => "11011", 379 => "11011", 
    380 => "11011", 381 => "11011", 382 => "11011", 383 => "11011", 
    384 => "11100", 385 => "11100", 386 => "11100", 387 => "11100", 
    388 => "11100", 389 => "11100", 390 => "11100", 391 => "11100", 
    392 => "11100", 393 => "11100", 394 => "11100", 395 => "11100", 
    396 => "11100", 397 => "11100", 398 => "11100", 399 => "11100", 
    400 => "11100", 401 => "11100", 402 => "11100", 403 => "11100", 
    404 => "11100", 405 => "11100", 406 => "11100", 407 => "11100", 
    408 => "11100", 409 => "11100", 410 => "11100", 411 => "11100", 
    412 => "11100", 413 => "11100", 414 => "11100", 415 => "11100", 
    416 => "11100", 417 => "11100", 418 => "11100", 419 => "11100", 
    420 => "11100", 421 => "11100", 422 => "11100", 423 => "11100", 
    424 => "11100", 425 => "11100", 426 => "11100", 427 => "11100", 
    428 => "11100", 429 => "11100", 430 => "11100", 431 => "11100", 
    432 => "11100", 433 => "11100", 434 => "11100", 435 => "11100", 
    436 => "11100", 437 => "11100", 438 => "11100", 439 => "11100", 
    440 => "11100", 441 => "11100", 442 => "11100", 443 => "11100", 
    444 => "11100", 445 => "11100", 446 => "11100", 447 => "11100", 
    448 => "11101", 449 => "11101", 450 => "11101", 451 => "11101", 
    452 => "11101", 453 => "11101", 454 => "11101", 455 => "11101", 
    456 => "11101", 457 => "11101", 458 => "11101", 459 => "11101", 
    460 => "11101", 461 => "11101", 462 => "11101", 463 => "11101", 
    464 => "11101", 465 => "11101", 466 => "11101", 467 => "11101", 
    468 => "11101", 469 => "11101", 470 => "11101", 471 => "11101", 
    472 => "11101", 473 => "11101", 474 => "11101", 475 => "11101", 
    476 => "11101", 477 => "11101", 478 => "11101", 479 => "11101", 
    480 => "11101", 481 => "11101", 482 => "11101", 483 => "11101", 
    484 => "11101", 485 => "11101", 486 => "11101", 487 => "11101", 
    488 => "11101", 489 => "11101", 490 => "11101", 491 => "11101", 
    492 => "11101", 493 => "11101", 494 => "11101", 495 => "11101", 
    496 => "11101", 497 => "11101", 498 => "11101", 499 => "11101", 
    500 => "11101", 501 => "11101", 502 => "11101", 503 => "11101", 
    504 => "11101", 505 => "11101", 506 => "11101", 507 => "11101", 
    508 => "11101", 509 => "11101", 510 => "11101", 511 => "11101");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;


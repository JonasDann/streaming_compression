-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gzipcMulticoreStreaming_bytePacker_64_4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    packedStream_dout : IN STD_LOGIC_VECTOR (67 downto 0);
    packedStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    packedStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    packedStream_empty_n : IN STD_LOGIC;
    packedStream_read : OUT STD_LOGIC;
    outStream_din : OUT STD_LOGIC_VECTOR (67 downto 0);
    outStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    outStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    outStream_full_n : IN STD_LOGIC;
    outStream_write : OUT STD_LOGIC );
end;


architecture behav of gzipcMulticoreStreaming_bytePacker_64_4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal outStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln500_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal outVal_data_fu_241_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_idle : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_ready : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_packedStream_read : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_din : STD_LOGIC_VECTOR (67 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_write : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out_ap_vld : STD_LOGIC;
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out_ap_vld : STD_LOGIC;
    signal outVal_data_30_reg_115 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_29_reg_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_28_reg_133 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_27_reg_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_26_reg_151 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_25_reg_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_24_reg_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal outVal_data_23_reg_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call14 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal inputWindow_loc_fu_72 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_s_fu_315_p3 : STD_LOGIC_VECTOR (67 downto 0);
    signal outStream_din_local : STD_LOGIC_VECTOR (67 downto 0);
    signal zext_ln510_fu_346_p1 : STD_LOGIC_VECTOR (67 downto 0);
    signal outStream_write_local : STD_LOGIC;
    signal tmp_s_fu_324_p10 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component gzipcMulticoreStreaming_bytePacker_64_4_Pipeline_multicorePacker IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        packedStream_dout : IN STD_LOGIC_VECTOR (67 downto 0);
        packedStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        packedStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        packedStream_empty_n : IN STD_LOGIC;
        packedStream_read : OUT STD_LOGIC;
        outStream_din : OUT STD_LOGIC_VECTOR (67 downto 0);
        outStream_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        outStream_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        outStream_full_n : IN STD_LOGIC;
        outStream_write : OUT STD_LOGIC;
        outVal_data_7_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        outVal_data_7_out_ap_vld : OUT STD_LOGIC;
        outVal_data_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        outVal_data_6_out_ap_vld : OUT STD_LOGIC;
        outVal_data_5_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        outVal_data_5_out_ap_vld : OUT STD_LOGIC;
        outVal_data_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        outVal_data_4_out_ap_vld : OUT STD_LOGIC;
        outVal_data_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        outVal_data_3_out_ap_vld : OUT STD_LOGIC;
        outVal_data_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        outVal_data_2_out_ap_vld : OUT STD_LOGIC;
        outVal_data_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        outVal_data_1_out_ap_vld : OUT STD_LOGIC;
        outVal_data_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        outVal_data_out_ap_vld : OUT STD_LOGIC;
        inputWindow_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        inputWindow_out_ap_vld : OUT STD_LOGIC;
        inputIdx_4_out : OUT STD_LOGIC_VECTOR (3 downto 0);
        inputIdx_4_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187 : component gzipcMulticoreStreaming_bytePacker_64_4_Pipeline_multicorePacker
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start,
        ap_done => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done,
        ap_idle => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_idle,
        ap_ready => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_ready,
        packedStream_dout => packedStream_dout,
        packedStream_num_data_valid => ap_const_lv3_0,
        packedStream_fifo_cap => ap_const_lv3_0,
        packedStream_empty_n => packedStream_empty_n,
        packedStream_read => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_packedStream_read,
        outStream_din => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_din,
        outStream_num_data_valid => ap_const_lv3_0,
        outStream_fifo_cap => ap_const_lv3_0,
        outStream_full_n => outStream_full_n,
        outStream_write => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_write,
        outVal_data_7_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out,
        outVal_data_7_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out_ap_vld,
        outVal_data_6_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out,
        outVal_data_6_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out_ap_vld,
        outVal_data_5_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out,
        outVal_data_5_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out_ap_vld,
        outVal_data_4_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out,
        outVal_data_4_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out_ap_vld,
        outVal_data_3_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out,
        outVal_data_3_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out_ap_vld,
        outVal_data_2_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out,
        outVal_data_2_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out_ap_vld,
        outVal_data_1_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out,
        outVal_data_1_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out_ap_vld,
        outVal_data_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out,
        outVal_data_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out_ap_vld,
        inputWindow_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out,
        inputWindow_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out_ap_vld,
        inputIdx_4_out => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out,
        inputIdx_4_out_ap_vld => grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((outStream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state1_ignore_call14) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_ready = ap_const_logic_1)) then 
                    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    outVal_data_23_reg_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((icmp_ln500_fu_235_p2 = ap_const_lv1_1)) then 
                    outVal_data_23_reg_178 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_out;
                elsif ((icmp_ln500_fu_235_p2 = ap_const_lv1_0)) then 
                    outVal_data_23_reg_178 <= outVal_data_fu_241_p1;
                end if;
            end if; 
        end if;
    end process;

    outVal_data_24_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((icmp_ln500_fu_235_p2 = ap_const_lv1_1)) then 
                    outVal_data_24_reg_169 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_1_out;
                elsif ((icmp_ln500_fu_235_p2 = ap_const_lv1_0)) then 
                    outVal_data_24_reg_169 <= inputWindow_loc_fu_72(15 downto 8);
                end if;
            end if; 
        end if;
    end process;

    outVal_data_25_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((icmp_ln500_fu_235_p2 = ap_const_lv1_1)) then 
                    outVal_data_25_reg_160 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_2_out;
                elsif ((icmp_ln500_fu_235_p2 = ap_const_lv1_0)) then 
                    outVal_data_25_reg_160 <= inputWindow_loc_fu_72(23 downto 16);
                end if;
            end if; 
        end if;
    end process;

    outVal_data_26_reg_151_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((icmp_ln500_fu_235_p2 = ap_const_lv1_1)) then 
                    outVal_data_26_reg_151 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_3_out;
                elsif ((icmp_ln500_fu_235_p2 = ap_const_lv1_0)) then 
                    outVal_data_26_reg_151 <= inputWindow_loc_fu_72(31 downto 24);
                end if;
            end if; 
        end if;
    end process;

    outVal_data_27_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((icmp_ln500_fu_235_p2 = ap_const_lv1_1)) then 
                    outVal_data_27_reg_142 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_4_out;
                elsif ((icmp_ln500_fu_235_p2 = ap_const_lv1_0)) then 
                    outVal_data_27_reg_142 <= inputWindow_loc_fu_72(39 downto 32);
                end if;
            end if; 
        end if;
    end process;

    outVal_data_28_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((icmp_ln500_fu_235_p2 = ap_const_lv1_1)) then 
                    outVal_data_28_reg_133 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_5_out;
                elsif ((icmp_ln500_fu_235_p2 = ap_const_lv1_0)) then 
                    outVal_data_28_reg_133 <= inputWindow_loc_fu_72(47 downto 40);
                end if;
            end if; 
        end if;
    end process;

    outVal_data_29_reg_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((icmp_ln500_fu_235_p2 = ap_const_lv1_1)) then 
                    outVal_data_29_reg_124 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_6_out;
                elsif ((icmp_ln500_fu_235_p2 = ap_const_lv1_0)) then 
                    outVal_data_29_reg_124 <= inputWindow_loc_fu_72(55 downto 48);
                end if;
            end if; 
        end if;
    end process;

    outVal_data_30_reg_115_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                if ((icmp_ln500_fu_235_p2 = ap_const_lv1_1)) then 
                    outVal_data_30_reg_115 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outVal_data_7_out;
                elsif ((icmp_ln500_fu_235_p2 = ap_const_lv1_0)) then 
                    outVal_data_30_reg_115 <= inputWindow_loc_fu_72(63 downto 56);
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out_ap_vld = ap_const_logic_1))) then
                inputWindow_loc_fu_72 <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputWindow_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, outStream_full_n, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_block_state3, grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done, ap_CS_fsm_state2, ap_block_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((outStream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done)
    begin
        if ((grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3)
    begin
        if ((ap_const_boolean_1 = ap_block_state3)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(outStream_full_n)
    begin
        if ((outStream_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call14_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call14 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state3_assign_proc : process(outStream_full_n, icmp_ln500_fu_235_p2)
    begin
                ap_block_state3 <= ((icmp_ln500_fu_235_p2 = ap_const_lv1_0) and (outStream_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, outStream_full_n, ap_CS_fsm_state4)
    begin
        if (((outStream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(outStream_full_n, ap_CS_fsm_state4)
    begin
        if (((outStream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_ap_start_reg;
    icmp_ln500_fu_235_p2 <= "1" when (grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out = ap_const_lv4_0) else "0";

    outStream_blk_n_assign_proc : process(outStream_full_n, ap_CS_fsm_state3, icmp_ln500_fu_235_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((icmp_ln500_fu_235_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            outStream_blk_n <= outStream_full_n;
        else 
            outStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_din_assign_proc : process(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_din, ap_CS_fsm_state2, outStream_din_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            outStream_din <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_din;
        else 
            outStream_din <= outStream_din_local;
        end if; 
    end process;


    outStream_din_local_assign_proc : process(outStream_full_n, ap_CS_fsm_state3, icmp_ln500_fu_235_p2, ap_CS_fsm_state4, ap_block_state3, p_s_fu_315_p3, zext_ln510_fu_346_p1)
    begin
        if (((outStream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            outStream_din_local <= zext_ln510_fu_346_p1;
        elsif (((ap_const_boolean_0 = ap_block_state3) and (icmp_ln500_fu_235_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            outStream_din_local <= p_s_fu_315_p3;
        else 
            outStream_din_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outStream_write_assign_proc : process(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_write, ap_CS_fsm_state2, outStream_write_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            outStream_write <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_outStream_write;
        else 
            outStream_write <= outStream_write_local;
        end if; 
    end process;


    outStream_write_local_assign_proc : process(outStream_full_n, ap_CS_fsm_state3, icmp_ln500_fu_235_p2, ap_CS_fsm_state4, ap_block_state3)
    begin
        if ((((ap_const_boolean_0 = ap_block_state3) and (icmp_ln500_fu_235_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((outStream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            outStream_write_local <= ap_const_logic_1;
        else 
            outStream_write_local <= ap_const_logic_0;
        end if; 
    end process;

    outVal_data_fu_241_p1 <= inputWindow_loc_fu_72(8 - 1 downto 0);
    p_s_fu_315_p3 <= (grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_inputIdx_4_out & inputWindow_loc_fu_72);

    packedStream_read_assign_proc : process(grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_packedStream_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            packedStream_read <= grp_bytePacker_64_4_Pipeline_multicorePacker_fu_187_packedStream_read;
        else 
            packedStream_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_324_p10 <= ((((((((ap_const_lv1_0 & outVal_data_30_reg_115) & outVal_data_29_reg_124) & outVal_data_28_reg_133) & outVal_data_27_reg_142) & outVal_data_26_reg_151) & outVal_data_25_reg_160) & outVal_data_24_reg_169) & outVal_data_23_reg_178);
    zext_ln510_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_324_p10),68));
end behav;

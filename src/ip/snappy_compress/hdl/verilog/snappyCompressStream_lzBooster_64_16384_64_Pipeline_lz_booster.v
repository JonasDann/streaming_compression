// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bestMatchStream8_dout,
        bestMatchStream8_num_data_valid,
        bestMatchStream8_fifo_cap,
        bestMatchStream8_empty_n,
        bestMatchStream8_read,
        boosterStream9_din,
        boosterStream9_num_data_valid,
        boosterStream9_fifo_cap,
        boosterStream9_full_n,
        boosterStream9_write,
        sub,
        outValue_V_11_out,
        outValue_V_11_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] bestMatchStream8_dout;
input  [3:0] bestMatchStream8_num_data_valid;
input  [3:0] bestMatchStream8_fifo_cap;
input   bestMatchStream8_empty_n;
output   bestMatchStream8_read;
output  [31:0] boosterStream9_din;
input  [3:0] boosterStream9_num_data_valid;
input  [3:0] boosterStream9_fifo_cap;
input   boosterStream9_full_n;
output   boosterStream9_write;
input  [31:0] sub;
output  [31:0] outValue_V_11_out;
output   outValue_V_11_out_ap_vld;

reg ap_idle;
reg bestMatchStream8_read;
reg boosterStream9_write;
reg outValue_V_11_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln572_reg_680;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg   [0:0] icmp_ln572_reg_680_pp0_iter3_reg;
reg   [0:0] icmp_ln588_reg_715;
reg   [0:0] and_ln590_1_reg_724;
reg   [0:0] outFlag_reg_728;
reg    ap_predicate_op112_write_state5;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln572_fu_257_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bestMatchStream8_blk_n;
wire    ap_block_pp0_stage0;
reg    boosterStream9_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] i_8_reg_673;
reg   [31:0] i_8_reg_673_pp0_iter1_reg;
reg   [31:0] i_8_reg_673_pp0_iter2_reg;
reg   [0:0] icmp_ln572_reg_680_pp0_iter1_reg;
reg   [0:0] icmp_ln572_reg_680_pp0_iter2_reg;
reg   [31:0] outValue_V_8_reg_684;
reg   [31:0] outValue_V_8_reg_684_pp0_iter2_reg;
reg   [31:0] outValue_V_8_reg_684_pp0_iter3_reg;
wire   [7:0] tCh_fu_274_p1;
reg   [7:0] tCh_reg_691;
reg   [7:0] tCh_reg_691_pp0_iter2_reg;
reg   [7:0] tLen_reg_697;
reg   [7:0] tLen_reg_697_pp0_iter2_reg;
reg   [15:0] tOffset_reg_703;
reg   [15:0] tOffset_reg_703_pp0_iter2_reg;
wire   [0:0] boostFlag_fu_308_p2;
reg   [0:0] boostFlag_reg_708;
reg   [0:0] boostFlag_reg_708_pp0_iter2_reg;
wire   [0:0] icmp_ln588_fu_335_p2;
wire   [0:0] and_ln590_1_fu_393_p2;
wire   [0:0] outFlag_fu_408_p2;
wire   [0:0] icmp_ln600_fu_413_p2;
reg   [0:0] icmp_ln600_reg_732;
wire   [5:0] trunc_ln591_fu_510_p1;
reg   [5:0] trunc_ln591_reg_741;
wire   [13:0] local_mem_address0;
reg    local_mem_ce0;
reg    local_mem_we0;
reg   [13:0] local_mem_address1;
reg    local_mem_ce1;
wire   [7:0] local_mem_q1;
reg   [0:0] ap_phi_mux_matchFlag_483_phi_fu_188_p4;
wire   [0:0] ap_phi_reg_pp0_iter3_matchFlag_483_reg_185;
reg   [8:0] ap_phi_mux_skip_len_481_phi_fu_198_p4;
wire  signed [8:0] skip_len_3_fu_432_p3;
wire   [8:0] ap_phi_reg_pp0_iter3_skip_len_481_reg_195;
reg   [7:0] ap_phi_mux_empty_phi_fu_208_p10;
wire   [7:0] ap_phi_reg_pp0_iter4_empty_reg_205;
wire   [63:0] zext_ln585_fu_317_p1;
wire   [63:0] zext_ln612_fu_347_p1;
wire   [63:0] zext_ln612_2_fu_418_p1;
wire   [63:0] zext_ln612_1_fu_532_p1;
reg   [15:0] skip_len_fu_90;
wire   [15:0] skip_len_1_fu_341_p2;
wire  signed [15:0] sext_ln565_fu_440_p1;
wire  signed [15:0] sext_ln174_fu_483_p1;
wire    ap_loop_init;
reg   [7:0] match_ch_fu_94;
reg   [7:0] ap_sig_allocacmp_match_ch_load;
reg   [31:0] i_fu_98;
wire   [31:0] i_9_fu_263_p2;
reg   [31:0] ap_sig_allocacmp_i_8;
reg   [31:0] p_Val2_s_fu_102;
wire   [31:0] p_Result_s_fu_582_p5;
reg   [0:0] matchFlag_fu_106;
reg   [31:0] match_len_fu_110;
wire   [31:0] match_len_3_fu_514_p2;
reg   [31:0] match_loc_fu_114;
wire   [31:0] match_loc_2_fu_399_p2;
wire   [31:0] match_loc_1_fu_520_p2;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] tmp_fu_298_p4;
wire   [13:0] trunc_ln572_1_fu_314_p1;
wire   [13:0] trunc_ln572_fu_328_p1;
wire   [25:0] tmp_47_fu_366_p4;
wire   [0:0] icmp_ln590_fu_376_p2;
wire   [0:0] and_ln590_fu_387_p2;
wire   [0:0] icmp_ln590_1_fu_382_p2;
wire   [31:0] zext_ln579_fu_332_p1;
wire   [13:0] trunc_ln561_fu_404_p1;
wire   [8:0] zext_ln606_fu_423_p1;
wire   [8:0] skip_len_2_fu_426_p2;
wire   [13:0] add_ln561_fu_526_p2;
wire   [6:0] zext_ln591_fu_569_p1;
wire   [6:0] add_ln392_fu_572_p2;
wire   [7:0] zext_ln392_fu_578_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_40;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_predicate_op52_load_state4;
reg    ap_enable_operation_52;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_predicate_op104_load_state5;
reg    ap_enable_operation_104;
reg    ap_enable_state5_pp0_iter4_stage0;
reg    ap_predicate_op69_load_state4;
reg    ap_enable_operation_69;
reg    ap_predicate_op106_load_state5;
reg    ap_enable_operation_106;
reg    ap_predicate_op99_load_state4;
reg    ap_enable_operation_99;
reg    ap_predicate_op120_load_state5;
reg    ap_enable_operation_120;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_302;
reg    ap_condition_313;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster_local_mem_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
local_mem_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_mem_address0),
    .ce0(local_mem_ce0),
    .we0(local_mem_we0),
    .d0(tCh_reg_691),
    .address1(local_mem_address1),
    .ce1(local_mem_ce1),
    .q1(local_mem_q1)
);

snappyCompressStream_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln572_fu_257_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_98 <= i_9_fu_263_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_98 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        matchFlag_fu_106 <= 1'd1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_408_p2 == 1'd1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        matchFlag_fu_106 <= ap_phi_mux_matchFlag_483_phi_fu_188_p4;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln600_fu_413_p2 == 1'd1) & (outFlag_fu_408_p2 == 1'd0) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)))) begin
        matchFlag_fu_106 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln600_fu_413_p2 == 1'd0) & (outFlag_fu_408_p2 == 1'd0) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        matchFlag_fu_106 <= boostFlag_reg_708_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        match_len_fu_110 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        match_len_fu_110 <= match_len_3_fu_514_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln600_fu_413_p2 == 1'd1) & (outFlag_fu_408_p2 == 1'd0) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_408_p2 == 1'd1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln600_fu_413_p2 == 1'd0) & (outFlag_fu_408_p2 == 1'd0) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)))) begin
        match_len_fu_110 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        match_loc_fu_114 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        match_loc_fu_114 <= match_loc_1_fu_520_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln600_fu_413_p2 == 1'd1) & (outFlag_fu_408_p2 == 1'd0) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_408_p2 == 1'd1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln600_fu_413_p2 == 1'd0) & (outFlag_fu_408_p2 == 1'd0) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)))) begin
        match_loc_fu_114 <= match_loc_2_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln590_1_reg_724) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_Val2_s_fu_102 <= p_Result_s_fu_582_p5;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (outFlag_reg_728 == 1'd1) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln590_1_reg_724) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (outFlag_reg_728 == 1'd0) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln590_1_reg_724) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln600_reg_732 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (outFlag_reg_728 == 1'd0) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln590_1_reg_724) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln600_reg_732 == 1'd0)))) begin
        p_Val2_s_fu_102 <= outValue_V_8_reg_684_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (outFlag_fu_408_p2 == 1'd1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        skip_len_fu_90 <= sext_ln174_fu_483_p1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln600_fu_413_p2 == 1'd1) & (outFlag_fu_408_p2 == 1'd0) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)))) begin
        skip_len_fu_90 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln600_fu_413_p2 == 1'd0) & (outFlag_fu_408_p2 == 1'd0) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        skip_len_fu_90 <= sext_ln565_fu_440_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln588_fu_335_p2 == 1'd0) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        skip_len_fu_90 <= skip_len_1_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln588_fu_335_p2 == 1'd1))) begin
        and_ln590_1_reg_724 <= and_ln590_1_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_8_reg_673 <= ap_sig_allocacmp_i_8;
        i_8_reg_673_pp0_iter1_reg <= i_8_reg_673;
        icmp_ln572_reg_680 <= icmp_ln572_fu_257_p2;
        icmp_ln572_reg_680_pp0_iter1_reg <= icmp_ln572_reg_680;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        boostFlag_reg_708_pp0_iter2_reg <= boostFlag_reg_708;
        i_8_reg_673_pp0_iter2_reg <= i_8_reg_673_pp0_iter1_reg;
        icmp_ln572_reg_680_pp0_iter2_reg <= icmp_ln572_reg_680_pp0_iter1_reg;
        icmp_ln572_reg_680_pp0_iter3_reg <= icmp_ln572_reg_680_pp0_iter2_reg;
        outValue_V_8_reg_684_pp0_iter2_reg <= outValue_V_8_reg_684;
        outValue_V_8_reg_684_pp0_iter3_reg <= outValue_V_8_reg_684_pp0_iter2_reg;
        tCh_reg_691_pp0_iter2_reg <= tCh_reg_691;
        tLen_reg_697_pp0_iter2_reg <= tLen_reg_697;
        tOffset_reg_703_pp0_iter2_reg <= tOffset_reg_703;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln572_reg_680 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        boostFlag_reg_708 <= boostFlag_fu_308_p2;
        outValue_V_8_reg_684 <= bestMatchStream8_dout;
        tCh_reg_691 <= tCh_fu_274_p1;
        tLen_reg_697 <= {{bestMatchStream8_dout[15:8]}};
        tOffset_reg_703 <= {{bestMatchStream8_dout[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        icmp_ln588_reg_715 <= icmp_ln588_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        icmp_ln600_reg_732 <= icmp_ln600_fu_413_p2;
        outFlag_reg_728 <= outFlag_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        match_ch_fu_94 <= ap_phi_mux_empty_phi_fu_208_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln590_1_fu_393_p2) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0))) begin
        trunc_ln591_reg_741 <= trunc_ln591_fu_510_p1;
    end
end

always @ (*) begin
    if (((icmp_ln572_fu_257_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((outFlag_reg_728 == 1'd1) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln590_1_reg_724)) | ((outFlag_reg_728 == 1'd0) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln590_1_reg_724) & (icmp_ln600_reg_732 == 1'd1)) | ((outFlag_reg_728 == 1'd0) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln590_1_reg_724) & (icmp_ln600_reg_732 == 1'd0)) | ((1'd1 == and_ln590_1_reg_724) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0)) | ((icmp_ln588_reg_715 == 1'd0) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0)))) begin
        ap_phi_mux_empty_phi_fu_208_p10 = local_mem_q1;
    end else begin
        ap_phi_mux_empty_phi_fu_208_p10 = ap_phi_reg_pp0_iter4_empty_reg_205;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_302)) begin
        if ((icmp_ln600_fu_413_p2 == 1'd1)) begin
            ap_phi_mux_matchFlag_483_phi_fu_188_p4 = 1'd0;
        end else if ((icmp_ln600_fu_413_p2 == 1'd0)) begin
            ap_phi_mux_matchFlag_483_phi_fu_188_p4 = boostFlag_reg_708_pp0_iter2_reg;
        end else begin
            ap_phi_mux_matchFlag_483_phi_fu_188_p4 = ap_phi_reg_pp0_iter3_matchFlag_483_reg_185;
        end
    end else begin
        ap_phi_mux_matchFlag_483_phi_fu_188_p4 = ap_phi_reg_pp0_iter3_matchFlag_483_reg_185;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_302)) begin
        if ((icmp_ln600_fu_413_p2 == 1'd1)) begin
            ap_phi_mux_skip_len_481_phi_fu_198_p4 = 9'd0;
        end else if ((icmp_ln600_fu_413_p2 == 1'd0)) begin
            ap_phi_mux_skip_len_481_phi_fu_198_p4 = skip_len_3_fu_432_p3;
        end else begin
            ap_phi_mux_skip_len_481_phi_fu_198_p4 = ap_phi_reg_pp0_iter3_skip_len_481_reg_195;
        end
    end else begin
        ap_phi_mux_skip_len_481_phi_fu_198_p4 = ap_phi_reg_pp0_iter3_skip_len_481_reg_195;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_8 = 32'd0;
    end else begin
        ap_sig_allocacmp_i_8 = i_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_match_ch_load = ap_phi_mux_empty_phi_fu_208_p10;
    end else begin
        ap_sig_allocacmp_match_ch_load = match_ch_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln572_reg_680 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bestMatchStream8_blk_n = bestMatchStream8_empty_n;
    end else begin
        bestMatchStream8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln572_reg_680 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bestMatchStream8_read = 1'b1;
    end else begin
        bestMatchStream8_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op112_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        boosterStream9_blk_n = boosterStream9_full_n;
    end else begin
        boosterStream9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op112_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        boosterStream9_write = 1'b1;
    end else begin
        boosterStream9_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_313)) begin
        if (((1'd1 == and_ln590_1_fu_393_p2) & (icmp_ln588_fu_335_p2 == 1'd1))) begin
            local_mem_address1 = zext_ln612_1_fu_532_p1;
        end else if (((1'd0 == and_ln590_1_fu_393_p2) & (icmp_ln588_fu_335_p2 == 1'd1))) begin
            local_mem_address1 = zext_ln612_2_fu_418_p1;
        end else if ((icmp_ln588_fu_335_p2 == 1'd0)) begin
            local_mem_address1 = zext_ln612_fu_347_p1;
        end else begin
            local_mem_address1 = 'bx;
        end
    end else begin
        local_mem_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_mem_ce0 = 1'b1;
    end else begin
        local_mem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln588_fu_335_p2 == 1'd0) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln590_1_fu_393_p2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0)))) begin
        local_mem_ce1 = 1'b1;
    end else begin
        local_mem_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln572_reg_680_pp0_iter1_reg == 1'd0))) begin
        local_mem_we0 = 1'b1;
    end else begin
        local_mem_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd1))) begin
        outValue_V_11_out_ap_vld = 1'b1;
    end else begin
        outValue_V_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln392_fu_572_p2 = (zext_ln591_fu_569_p1 + 7'd1);

assign add_ln561_fu_526_p2 = (trunc_ln572_fu_328_p1 + 14'd1);

assign and_ln590_1_fu_393_p2 = (icmp_ln590_1_fu_382_p2 & and_ln590_fu_387_p2);

assign and_ln590_fu_387_p2 = (matchFlag_fu_106 & icmp_ln590_fu_376_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op112_write_state5 == 1'b1) & (boosterStream9_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln572_reg_680 == 1'd0) & (bestMatchStream8_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op112_write_state5 == 1'b1) & (boosterStream9_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln572_reg_680 == 1'd0) & (bestMatchStream8_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op112_write_state5 == 1'b1) & (boosterStream9_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln572_reg_680 == 1'd0) & (bestMatchStream8_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln572_reg_680 == 1'd0) & (bestMatchStream8_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((ap_predicate_op112_write_state5 == 1'b1) & (boosterStream9_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_302 = ((1'd0 == and_ln590_1_fu_393_p2) & (outFlag_fu_408_p2 == 1'd1) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_313 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_enable_operation_104 = (ap_predicate_op104_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_106 = (ap_predicate_op106_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_120 = (ap_predicate_op120_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_40 = (icmp_ln572_reg_680_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_52 = (ap_predicate_op52_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_69 = (ap_predicate_op69_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_99 = (ap_predicate_op99_load_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter3_matchFlag_483_reg_185 = 'bx;

assign ap_phi_reg_pp0_iter3_skip_len_481_reg_195 = 'bx;

assign ap_phi_reg_pp0_iter4_empty_reg_205 = 'bx;

always @ (*) begin
    ap_predicate_op104_load_state5 = ((icmp_ln588_reg_715 == 1'd0) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op106_load_state5 = ((icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln590_1_reg_724));
end

always @ (*) begin
    ap_predicate_op112_write_state5 = ((outFlag_reg_728 == 1'd1) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0) & (1'd0 == and_ln590_1_reg_724));
end

always @ (*) begin
    ap_predicate_op120_load_state5 = ((1'd1 == and_ln590_1_reg_724) & (icmp_ln588_reg_715 == 1'd1) & (icmp_ln572_reg_680_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op52_load_state4 = ((icmp_ln588_fu_335_p2 == 1'd0) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op69_load_state4 = ((1'd0 == and_ln590_1_fu_393_p2) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op99_load_state4 = ((1'd1 == and_ln590_1_fu_393_p2) & (icmp_ln588_fu_335_p2 == 1'd1) & (icmp_ln572_reg_680_pp0_iter2_reg == 1'd0));
end

assign boostFlag_fu_308_p2 = ((tmp_fu_298_p4 == 2'd0) ? 1'b1 : 1'b0);

assign boosterStream9_din = p_Val2_s_fu_102;

assign i_9_fu_263_p2 = (ap_sig_allocacmp_i_8 + 32'd1);

assign icmp_ln572_fu_257_p2 = ((ap_sig_allocacmp_i_8 == sub) ? 1'b1 : 1'b0);

assign icmp_ln588_fu_335_p2 = ((skip_len_fu_90 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_1_fu_382_p2 = ((tCh_reg_691_pp0_iter2_reg == ap_sig_allocacmp_match_ch_load) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_376_p2 = ((tmp_47_fu_366_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln600_fu_413_p2 = ((tLen_reg_697_pp0_iter2_reg == 8'd0) ? 1'b1 : 1'b0);

assign local_mem_address0 = zext_ln585_fu_317_p1;

assign match_len_3_fu_514_p2 = (match_len_fu_110 + 32'd1);

assign match_loc_1_fu_520_p2 = (match_loc_fu_114 + 32'd1);

assign match_loc_2_fu_399_p2 = (i_8_reg_673_pp0_iter2_reg - zext_ln579_fu_332_p1);

assign outFlag_fu_408_p2 = ((i_8_reg_673_pp0_iter2_reg != 32'd0) ? 1'b1 : 1'b0);

assign outValue_V_11_out = p_Val2_s_fu_102;

assign p_Result_s_fu_582_p5 = {{p_Val2_s_fu_102[31:16]}, {zext_ln392_fu_578_p1}, {p_Val2_s_fu_102[7:0]}};

assign sext_ln174_fu_483_p1 = $signed(ap_phi_mux_skip_len_481_phi_fu_198_p4);

assign sext_ln565_fu_440_p1 = skip_len_3_fu_432_p3;

assign skip_len_1_fu_341_p2 = ($signed(skip_len_fu_90) + $signed(16'd65535));

assign skip_len_2_fu_426_p2 = ($signed(zext_ln606_fu_423_p1) + $signed(9'd511));

assign skip_len_3_fu_432_p3 = ((boostFlag_reg_708_pp0_iter2_reg[0:0] == 1'b1) ? 9'd0 : skip_len_2_fu_426_p2);

assign tCh_fu_274_p1 = bestMatchStream8_dout[7:0];

assign tmp_47_fu_366_p4 = {{match_len_fu_110[31:6]}};

assign tmp_fu_298_p4 = {{bestMatchStream8_dout[31:30]}};

assign trunc_ln561_fu_404_p1 = match_loc_2_fu_399_p2[13:0];

assign trunc_ln572_1_fu_314_p1 = i_8_reg_673_pp0_iter1_reg[13:0];

assign trunc_ln572_fu_328_p1 = match_loc_fu_114[13:0];

assign trunc_ln591_fu_510_p1 = match_len_fu_110[5:0];

assign zext_ln392_fu_578_p1 = add_ln392_fu_572_p2;

assign zext_ln579_fu_332_p1 = tOffset_reg_703_pp0_iter2_reg;

assign zext_ln585_fu_317_p1 = trunc_ln572_1_fu_314_p1;

assign zext_ln591_fu_569_p1 = trunc_ln591_reg_741;

assign zext_ln606_fu_423_p1 = tLen_reg_697_pp0_iter2_reg;

assign zext_ln612_1_fu_532_p1 = add_ln561_fu_526_p2;

assign zext_ln612_2_fu_418_p1 = trunc_ln561_fu_404_p1;

assign zext_ln612_fu_347_p1 = trunc_ln572_fu_328_p1;

endmodule //snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster

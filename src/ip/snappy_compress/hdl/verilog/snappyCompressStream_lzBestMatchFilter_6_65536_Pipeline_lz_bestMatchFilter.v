// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module snappyCompressStream_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        compressdStream7_dout,
        compressdStream7_num_data_valid,
        compressdStream7_fifo_cap,
        compressdStream7_empty_n,
        compressdStream7_read,
        bestMatchStream8_din,
        bestMatchStream8_num_data_valid,
        bestMatchStream8_fifo_cap,
        bestMatchStream8_full_n,
        bestMatchStream8_write,
        tmp_48,
        tmp_47,
        tmp_46,
        tmp_45,
        tmp_44,
        tmp_43,
        input_size,
        compare_window_V_out,
        compare_window_V_out_ap_vld,
        compare_window_V_12_out,
        compare_window_V_12_out_ap_vld,
        compare_window_V_13_out,
        compare_window_V_13_out_ap_vld,
        compare_window_V_14_out,
        compare_window_V_14_out_ap_vld,
        compare_window_V_15_out,
        compare_window_V_15_out_ap_vld,
        compare_window_V_16_out,
        compare_window_V_16_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] compressdStream7_dout;
input  [3:0] compressdStream7_num_data_valid;
input  [3:0] compressdStream7_fifo_cap;
input   compressdStream7_empty_n;
output   compressdStream7_read;
output  [31:0] bestMatchStream8_din;
input  [3:0] bestMatchStream8_num_data_valid;
input  [3:0] bestMatchStream8_fifo_cap;
input   bestMatchStream8_full_n;
output   bestMatchStream8_write;
input  [31:0] tmp_48;
input  [31:0] tmp_47;
input  [31:0] tmp_46;
input  [31:0] tmp_45;
input  [31:0] tmp_44;
input  [31:0] tmp_43;
input  [31:0] input_size;
output  [31:0] compare_window_V_out;
output   compare_window_V_out_ap_vld;
output  [31:0] compare_window_V_12_out;
output   compare_window_V_12_out_ap_vld;
output  [31:0] compare_window_V_13_out;
output   compare_window_V_13_out_ap_vld;
output  [31:0] compare_window_V_14_out;
output   compare_window_V_14_out_ap_vld;
output  [31:0] compare_window_V_15_out;
output   compare_window_V_15_out_ap_vld;
output  [31:0] compare_window_V_16_out;
output   compare_window_V_16_out_ap_vld;

reg ap_idle;
reg compressdStream7_read;
reg bestMatchStream8_write;
reg compare_window_V_out_ap_vld;
reg compare_window_V_12_out_ap_vld;
reg compare_window_V_13_out_ap_vld;
reg compare_window_V_14_out_ap_vld;
reg compare_window_V_15_out_ap_vld;
reg compare_window_V_16_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln327_reg_623;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln327_fu_253_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    compressdStream7_blk_n;
wire    ap_block_pp0_stage0;
reg    bestMatchStream8_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] outValue_V_9_fu_531_p3;
reg   [31:0] outValue_V_9_reg_627;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [31:0] i_fu_90;
wire   [31:0] i_12_fu_259_p2;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_i_11;
reg   [31:0] p_Val2_s_fu_94;
reg   [31:0] p_Val2_4_fu_98;
reg   [31:0] p_Val2_5_fu_102;
reg   [31:0] p_Val2_6_fu_106;
reg   [31:0] p_Val2_7_fu_110;
reg   [31:0] p_Val2_8_fu_114;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] match_length_fu_293_p4;
wire   [7:0] compareLen_fu_307_p4;
wire   [0:0] icmp_ln343_fu_317_p2;
wire   [8:0] zext_ln341_fu_303_p1;
wire   [7:0] compareLen_1_fu_329_p4;
wire   [8:0] add_ln343_fu_339_p2;
wire   [8:0] zext_ln343_fu_345_p1;
wire   [0:0] icmp_ln343_1_fu_349_p2;
wire   [7:0] compareLen_2_fu_361_p4;
wire   [8:0] add_ln343_1_fu_371_p2;
wire   [8:0] zext_ln343_1_fu_377_p1;
wire   [0:0] icmp_ln343_2_fu_381_p2;
wire   [7:0] compareLen_3_fu_393_p4;
wire   [8:0] add_ln343_2_fu_403_p2;
wire   [8:0] zext_ln343_2_fu_409_p1;
wire   [0:0] icmp_ln343_3_fu_413_p2;
wire   [7:0] compareLen_4_fu_425_p4;
wire   [8:0] add_ln343_3_fu_435_p2;
wire   [8:0] zext_ln343_3_fu_441_p1;
wire   [0:0] icmp_ln343_4_fu_445_p2;
wire   [7:0] compareLen_5_fu_457_p4;
wire   [8:0] add_ln343_4_fu_467_p2;
wire   [8:0] zext_ln343_4_fu_473_p1;
wire   [0:0] icmp_ln343_5_fu_477_p2;
wire   [0:0] xor_ln343_fu_355_p2;
wire   [0:0] xor_ln343_1_fu_387_p2;
wire   [0:0] and_ln343_fu_489_p2;
wire   [0:0] best_match_fu_323_p2;
wire   [0:0] xor_ln343_3_fu_451_p2;
wire   [0:0] xor_ln343_4_fu_483_p2;
wire   [0:0] and_ln343_2_fu_501_p2;
wire   [0:0] xor_ln343_2_fu_419_p2;
wire   [0:0] and_ln343_3_fu_507_p2;
wire   [0:0] and_ln343_1_fu_495_p2;
wire   [0:0] best_match_1_fu_513_p2;
wire   [31:0] p_Result_s_fu_519_p5;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

snappyCompressStream_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln327_fu_253_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_90 <= i_12_fu_259_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_90 <= 32'd6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_4_fu_98 <= tmp_44;
        end else if (((icmp_ln327_reg_623 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_4_fu_98 <= p_Val2_5_fu_102;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_5_fu_102 <= tmp_45;
        end else if (((icmp_ln327_reg_623 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_5_fu_102 <= p_Val2_6_fu_106;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_6_fu_106 <= tmp_46;
        end else if (((icmp_ln327_reg_623 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_6_fu_106 <= p_Val2_7_fu_110;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_7_fu_110 <= tmp_47;
        end else if (((icmp_ln327_reg_623 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_7_fu_110 <= p_Val2_8_fu_114;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_8_fu_114 <= tmp_48;
        end else if (((icmp_ln327_reg_623 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_8_fu_114 <= compressdStream7_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_94 <= tmp_43;
        end else if (((icmp_ln327_reg_623 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_s_fu_94 <= p_Val2_4_fu_98;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln327_reg_623 <= icmp_ln327_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln327_reg_623 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outValue_V_9_reg_627 <= outValue_V_9_fu_531_p3;
    end
end

always @ (*) begin
    if (((icmp_ln327_fu_253_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln327_reg_623 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_11 = 32'd6;
    end else begin
        ap_sig_allocacmp_i_11 = i_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bestMatchStream8_blk_n = bestMatchStream8_full_n;
    end else begin
        bestMatchStream8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        bestMatchStream8_write = 1'b1;
    end else begin
        bestMatchStream8_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln327_reg_623 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compare_window_V_12_out_ap_vld = 1'b1;
    end else begin
        compare_window_V_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln327_reg_623 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compare_window_V_13_out_ap_vld = 1'b1;
    end else begin
        compare_window_V_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln327_reg_623 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compare_window_V_14_out_ap_vld = 1'b1;
    end else begin
        compare_window_V_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln327_reg_623 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compare_window_V_15_out_ap_vld = 1'b1;
    end else begin
        compare_window_V_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln327_reg_623 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compare_window_V_16_out_ap_vld = 1'b1;
    end else begin
        compare_window_V_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln327_reg_623 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compare_window_V_out_ap_vld = 1'b1;
    end else begin
        compare_window_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln327_reg_623 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compressdStream7_blk_n = compressdStream7_empty_n;
    end else begin
        compressdStream7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln327_reg_623 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        compressdStream7_read = 1'b1;
    end else begin
        compressdStream7_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln343_1_fu_371_p2 = (zext_ln341_fu_303_p1 + 9'd2);

assign add_ln343_2_fu_403_p2 = (zext_ln341_fu_303_p1 + 9'd3);

assign add_ln343_3_fu_435_p2 = (zext_ln341_fu_303_p1 + 9'd4);

assign add_ln343_4_fu_467_p2 = (zext_ln341_fu_303_p1 + 9'd5);

assign add_ln343_fu_339_p2 = (zext_ln341_fu_303_p1 + 9'd1);

assign and_ln343_1_fu_495_p2 = (best_match_fu_323_p2 & and_ln343_fu_489_p2);

assign and_ln343_2_fu_501_p2 = (xor_ln343_4_fu_483_p2 & xor_ln343_3_fu_451_p2);

assign and_ln343_3_fu_507_p2 = (xor_ln343_2_fu_419_p2 & and_ln343_2_fu_501_p2);

assign and_ln343_fu_489_p2 = (xor_ln343_fu_355_p2 & xor_ln343_1_fu_387_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((bestMatchStream8_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln327_reg_623 == 1'd1) & (compressdStream7_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((bestMatchStream8_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln327_reg_623 == 1'd1) & (compressdStream7_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((bestMatchStream8_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln327_reg_623 == 1'd1) & (compressdStream7_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln327_reg_623 == 1'd1) & (compressdStream7_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (bestMatchStream8_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bestMatchStream8_din = outValue_V_9_reg_627;

assign best_match_1_fu_513_p2 = (and_ln343_3_fu_507_p2 & and_ln343_1_fu_495_p2);

assign best_match_fu_323_p2 = (icmp_ln343_fu_317_p2 ^ 1'd1);

assign compareLen_1_fu_329_p4 = {{p_Val2_5_fu_102[15:8]}};

assign compareLen_2_fu_361_p4 = {{p_Val2_6_fu_106[15:8]}};

assign compareLen_3_fu_393_p4 = {{p_Val2_7_fu_110[15:8]}};

assign compareLen_4_fu_425_p4 = {{p_Val2_8_fu_114[15:8]}};

assign compareLen_5_fu_457_p4 = {{compressdStream7_dout[15:8]}};

assign compareLen_fu_307_p4 = {{p_Val2_4_fu_98[15:8]}};

assign compare_window_V_12_out = p_Val2_7_fu_110;

assign compare_window_V_13_out = p_Val2_6_fu_106;

assign compare_window_V_14_out = p_Val2_5_fu_102;

assign compare_window_V_15_out = p_Val2_4_fu_98;

assign compare_window_V_16_out = p_Val2_s_fu_94;

assign compare_window_V_out = p_Val2_8_fu_114;

assign i_12_fu_259_p2 = (ap_sig_allocacmp_i_11 + 32'd1);

assign icmp_ln327_fu_253_p2 = ((ap_sig_allocacmp_i_11 < input_size) ? 1'b1 : 1'b0);

assign icmp_ln343_1_fu_349_p2 = ((add_ln343_fu_339_p2 < zext_ln343_fu_345_p1) ? 1'b1 : 1'b0);

assign icmp_ln343_2_fu_381_p2 = ((add_ln343_1_fu_371_p2 < zext_ln343_1_fu_377_p1) ? 1'b1 : 1'b0);

assign icmp_ln343_3_fu_413_p2 = ((add_ln343_2_fu_403_p2 < zext_ln343_2_fu_409_p1) ? 1'b1 : 1'b0);

assign icmp_ln343_4_fu_445_p2 = ((add_ln343_3_fu_435_p2 < zext_ln343_3_fu_441_p1) ? 1'b1 : 1'b0);

assign icmp_ln343_5_fu_477_p2 = ((add_ln343_4_fu_467_p2 < zext_ln343_4_fu_473_p1) ? 1'b1 : 1'b0);

assign icmp_ln343_fu_317_p2 = ((match_length_fu_293_p4 < compareLen_fu_307_p4) ? 1'b1 : 1'b0);

assign match_length_fu_293_p4 = {{p_Val2_s_fu_94[15:8]}};

assign outValue_V_9_fu_531_p3 = ((best_match_1_fu_513_p2[0:0] == 1'b1) ? p_Val2_s_fu_94 : p_Result_s_fu_519_p5);

assign p_Result_s_fu_519_p5 = {{24'd0}, {p_Val2_s_fu_94[7:0]}};

assign xor_ln343_1_fu_387_p2 = (icmp_ln343_2_fu_381_p2 ^ 1'd1);

assign xor_ln343_2_fu_419_p2 = (icmp_ln343_3_fu_413_p2 ^ 1'd1);

assign xor_ln343_3_fu_451_p2 = (icmp_ln343_4_fu_445_p2 ^ 1'd1);

assign xor_ln343_4_fu_483_p2 = (icmp_ln343_5_fu_477_p2 ^ 1'd1);

assign xor_ln343_fu_355_p2 = (icmp_ln343_1_fu_349_p2 ^ 1'd1);

assign zext_ln341_fu_303_p1 = match_length_fu_293_p4;

assign zext_ln343_1_fu_377_p1 = compareLen_2_fu_361_p4;

assign zext_ln343_2_fu_409_p1 = compareLen_3_fu_393_p4;

assign zext_ln343_3_fu_441_p1 = compareLen_4_fu_425_p4;

assign zext_ln343_4_fu_473_p1 = compareLen_5_fu_457_p4;

assign zext_ln343_fu_345_p1 = compareLen_1_fu_329_p4;

endmodule //snappyCompressStream_lzBestMatchFilter_6_65536_Pipeline_lz_bestMatchFilter

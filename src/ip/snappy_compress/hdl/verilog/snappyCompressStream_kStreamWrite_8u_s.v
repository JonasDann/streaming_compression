// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module snappyCompressStream_kStreamWrite_8u_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        outaxistream_TDATA,
        outaxistream_TVALID,
        outaxistream_TREADY,
        outaxistream_TKEEP,
        outaxistream_TSTRB,
        outaxistream_TLAST,
        outStream12_dout,
        outStream12_num_data_valid,
        outStream12_fifo_cap,
        outStream12_empty_n,
        outStream12_read,
        snappyOutEos13_dout,
        snappyOutEos13_num_data_valid,
        snappyOutEos13_fifo_cap,
        snappyOutEos13_empty_n,
        snappyOutEos13_read,
        compressedSize10_dout,
        compressedSize10_num_data_valid,
        compressedSize10_fifo_cap,
        compressedSize10_empty_n,
        compressedSize10_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [7:0] outaxistream_TDATA;
output   outaxistream_TVALID;
input   outaxistream_TREADY;
output  [0:0] outaxistream_TKEEP;
output  [0:0] outaxistream_TSTRB;
output  [0:0] outaxistream_TLAST;
input  [7:0] outStream12_dout;
input  [1:0] outStream12_num_data_valid;
input  [1:0] outStream12_fifo_cap;
input   outStream12_empty_n;
output   outStream12_read;
input  [0:0] snappyOutEos13_dout;
input  [3:0] snappyOutEos13_num_data_valid;
input  [3:0] snappyOutEos13_fifo_cap;
input   snappyOutEos13_empty_n;
output   snappyOutEos13_read;
input  [31:0] compressedSize10_dout;
input  [1:0] compressedSize10_num_data_valid;
input  [1:0] compressedSize10_fifo_cap;
input   compressedSize10_empty_n;
output   compressedSize10_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outStream12_read;
reg snappyOutEos13_read;
reg compressedSize10_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    compressedSize10_blk_n;
wire    ap_CS_fsm_state3;
wire    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start;
wire    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_done;
wire    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_idle;
wire    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_ready;
wire    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outStream12_read;
wire    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_snappyOutEos13_read;
wire    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TREADY;
wire   [7:0] grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TDATA;
wire    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TVALID;
wire   [0:0] grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TKEEP;
wire   [0:0] grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TSTRB;
wire   [0:0] grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TLAST;
reg    grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start_reg;
reg    ap_block_state1_ignore_call7;
wire    ap_CS_fsm_state2;
wire    regslice_both_outaxistream_V_data_V_U_apdone_blk;
reg    ap_block_state3;
reg   [2:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    outaxistream_TVALID_int_regslice;
wire    outaxistream_TREADY_int_regslice;
wire    regslice_both_outaxistream_V_data_V_U_vld_out;
wire    regslice_both_outaxistream_V_keep_V_U_apdone_blk;
wire    regslice_both_outaxistream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_outaxistream_V_keep_V_U_vld_out;
wire    regslice_both_outaxistream_V_strb_V_U_apdone_blk;
wire    regslice_both_outaxistream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_outaxistream_V_strb_V_U_vld_out;
wire    regslice_both_outaxistream_V_last_V_U_apdone_blk;
wire    regslice_both_outaxistream_V_last_V_U_ack_in_dummy;
wire    regslice_both_outaxistream_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start_reg = 1'b0;
end

snappyCompressStream_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1 grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start),
    .ap_done(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_done),
    .ap_idle(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_idle),
    .ap_ready(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_ready),
    .outStream12_dout(outStream12_dout),
    .outStream12_num_data_valid(2'd0),
    .outStream12_fifo_cap(2'd0),
    .outStream12_empty_n(outStream12_empty_n),
    .outStream12_read(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outStream12_read),
    .snappyOutEos13_dout(snappyOutEos13_dout),
    .snappyOutEos13_num_data_valid(4'd0),
    .snappyOutEos13_fifo_cap(4'd0),
    .snappyOutEos13_empty_n(snappyOutEos13_empty_n),
    .snappyOutEos13_read(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_snappyOutEos13_read),
    .outaxistream_TREADY(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TREADY),
    .outaxistream_TDATA(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TDATA),
    .outaxistream_TVALID(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TVALID),
    .outaxistream_TKEEP(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TKEEP),
    .outaxistream_TSTRB(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TSTRB),
    .outaxistream_TLAST(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TLAST)
);

snappyCompressStream_regslice_both #(
    .DataWidth( 8 ))
regslice_both_outaxistream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TDATA),
    .vld_in(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TVALID),
    .ack_in(outaxistream_TREADY_int_regslice),
    .data_out(outaxistream_TDATA),
    .vld_out(regslice_both_outaxistream_V_data_V_U_vld_out),
    .ack_out(outaxistream_TREADY),
    .apdone_blk(regslice_both_outaxistream_V_data_V_U_apdone_blk)
);

snappyCompressStream_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outaxistream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TKEEP),
    .vld_in(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TVALID),
    .ack_in(regslice_both_outaxistream_V_keep_V_U_ack_in_dummy),
    .data_out(outaxistream_TKEEP),
    .vld_out(regslice_both_outaxistream_V_keep_V_U_vld_out),
    .ack_out(outaxistream_TREADY),
    .apdone_blk(regslice_both_outaxistream_V_keep_V_U_apdone_blk)
);

snappyCompressStream_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outaxistream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TSTRB),
    .vld_in(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TVALID),
    .ack_in(regslice_both_outaxistream_V_strb_V_U_ack_in_dummy),
    .data_out(outaxistream_TSTRB),
    .vld_out(regslice_both_outaxistream_V_strb_V_U_vld_out),
    .ack_out(outaxistream_TREADY),
    .apdone_blk(regslice_both_outaxistream_V_strb_V_U_apdone_blk)
);

snappyCompressStream_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outaxistream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TLAST),
    .vld_in(grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TVALID),
    .ack_in(regslice_both_outaxistream_V_last_V_U_ack_in_dummy),
    .data_out(outaxistream_TLAST),
    .vld_out(regslice_both_outaxistream_V_last_V_U_vld_out),
    .ack_out(outaxistream_TREADY),
    .apdone_blk(regslice_both_outaxistream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_outaxistream_V_data_V_U_apdone_blk == 1'b1) | (compressedSize10_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start_reg <= 1'b1;
        end else if ((grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_ready == 1'b1)) begin
            grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_outaxistream_V_data_V_U_apdone_blk == 1'b1) | (compressedSize10_empty_n == 1'b0))) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_outaxistream_V_data_V_U_apdone_blk == 1'b1) | (compressedSize10_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_outaxistream_V_data_V_U_apdone_blk == 1'b1) | (compressedSize10_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        compressedSize10_blk_n = compressedSize10_empty_n;
    end else begin
        compressedSize10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regslice_both_outaxistream_V_data_V_U_apdone_blk == 1'b1) | (compressedSize10_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        compressedSize10_read = 1'b1;
    end else begin
        compressedSize10_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        outStream12_read = grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outStream12_read;
    end else begin
        outStream12_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        snappyOutEos13_read = grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_snappyOutEos13_read;
    end else begin
        snappyOutEos13_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((regslice_both_outaxistream_V_data_V_U_apdone_blk == 1'b1) | (compressedSize10_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call7 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((regslice_both_outaxistream_V_data_V_U_apdone_blk == 1'b1) | (compressedSize10_empty_n == 1'b0));
end

assign grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start = grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_ap_start_reg;

assign grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TREADY = (outaxistream_TREADY_int_regslice & ap_CS_fsm_state2);

assign outaxistream_TVALID = regslice_both_outaxistream_V_data_V_U_vld_out;

assign outaxistream_TVALID_int_regslice = grp_kStreamWrite_8u_Pipeline_VITIS_LOOP_110_1_fu_50_outaxistream_TVALID;

endmodule //snappyCompressStream_kStreamWrite_8u_s

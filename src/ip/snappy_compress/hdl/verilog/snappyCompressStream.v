// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="snappyCompressStream_snappyCompressStream,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.300000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.665500,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3835,HLS_SYN_LUT=6226,HLS_VERSION=2022_1}" *)

module snappyCompressStream (
        inaxistream_TDATA,
        inaxistream_TKEEP,
        inaxistream_TSTRB,
        inaxistream_TLAST,
        outaxistream_TDATA,
        outaxistream_TKEEP,
        outaxistream_TSTRB,
        outaxistream_TLAST,
        inputSize,
        ap_clk,
        ap_rst_n,
        inaxistream_TVALID,
        inaxistream_TREADY,
        inputSize_ap_vld,
        inputSize_ap_ack,
        outaxistream_TVALID,
        outaxistream_TREADY
);


input  [7:0] inaxistream_TDATA;
input  [0:0] inaxistream_TKEEP;
input  [0:0] inaxistream_TSTRB;
input  [0:0] inaxistream_TLAST;
output  [7:0] outaxistream_TDATA;
output  [0:0] outaxistream_TKEEP;
output  [0:0] outaxistream_TSTRB;
output  [0:0] outaxistream_TLAST;
input  [31:0] inputSize;
input   ap_clk;
input   ap_rst_n;
input   inaxistream_TVALID;
output   inaxistream_TREADY;
input   inputSize_ap_vld;
output   inputSize_ap_ack;
output   outaxistream_TVALID;
input   outaxistream_TREADY;

 reg    ap_rst_n_inv;
wire    kStreamRead_8u_U0_ap_start;
wire    kStreamRead_8u_U0_ap_done;
wire    kStreamRead_8u_U0_ap_continue;
wire    kStreamRead_8u_U0_ap_idle;
wire    kStreamRead_8u_U0_ap_ready;
wire    kStreamRead_8u_U0_inaxistream_TREADY;
wire   [7:0] kStreamRead_8u_U0_inStream11_din;
wire    kStreamRead_8u_U0_inStream11_write;
wire    kStreamRead_8u_U0_input_size_ap_ack;
wire    lzCompress_6_4_65536_6_1_4096_64_U0_ap_start;
wire    lzCompress_6_4_65536_6_1_4096_64_U0_ap_done;
wire    lzCompress_6_4_65536_6_1_4096_64_U0_ap_continue;
wire    lzCompress_6_4_65536_6_1_4096_64_U0_ap_idle;
wire    lzCompress_6_4_65536_6_1_4096_64_U0_ap_ready;
wire    lzCompress_6_4_65536_6_1_4096_64_U0_inStream11_read;
wire   [31:0] lzCompress_6_4_65536_6_1_4096_64_U0_compressdStream7_din;
wire    lzCompress_6_4_65536_6_1_4096_64_U0_compressdStream7_write;
wire    lzCompress_6_4_65536_6_1_4096_64_U0_input_size_ap_ack;
wire    lzBestMatchFilter_6_65536_U0_ap_start;
wire    lzBestMatchFilter_6_65536_U0_ap_done;
wire    lzBestMatchFilter_6_65536_U0_ap_continue;
wire    lzBestMatchFilter_6_65536_U0_ap_idle;
wire    lzBestMatchFilter_6_65536_U0_ap_ready;
wire    lzBestMatchFilter_6_65536_U0_compressdStream7_read;
wire   [31:0] lzBestMatchFilter_6_65536_U0_bestMatchStream8_din;
wire    lzBestMatchFilter_6_65536_U0_bestMatchStream8_write;
wire    lzBestMatchFilter_6_65536_U0_input_size_ap_ack;
wire    lzBooster_64_16384_64_U0_ap_start;
wire    lzBooster_64_16384_64_U0_ap_done;
wire    lzBooster_64_16384_64_U0_ap_continue;
wire    lzBooster_64_16384_64_U0_ap_idle;
wire    lzBooster_64_16384_64_U0_ap_ready;
wire    lzBooster_64_16384_64_U0_bestMatchStream8_read;
wire   [31:0] lzBooster_64_16384_64_U0_boosterStream9_din;
wire    lzBooster_64_16384_64_U0_boosterStream9_write;
wire    lzBooster_64_16384_64_U0_input_size_ap_ack;
wire    snappyCompress_60_64_8_U0_ap_start;
wire    snappyCompress_60_64_8_U0_start_out;
wire    snappyCompress_60_64_8_U0_start_write;
wire    snappyCompress_60_64_8_U0_boosterStream9_read;
wire   [7:0] snappyCompress_60_64_8_U0_outStream12_din;
wire    snappyCompress_60_64_8_U0_outStream12_write;
wire   [0:0] snappyCompress_60_64_8_U0_snappyOutEos13_din;
wire    snappyCompress_60_64_8_U0_snappyOutEos13_write;
wire   [31:0] snappyCompress_60_64_8_U0_compressedSize10_din;
wire    snappyCompress_60_64_8_U0_compressedSize10_write;
wire    snappyCompress_60_64_8_U0_input_size_ap_ack;
wire    snappyCompress_60_64_8_U0_ap_done;
wire    snappyCompress_60_64_8_U0_ap_ready;
wire    snappyCompress_60_64_8_U0_ap_idle;
wire    snappyCompress_60_64_8_U0_ap_continue;
wire    kStreamWrite_8u_U0_ap_start;
wire    kStreamWrite_8u_U0_ap_done;
wire    kStreamWrite_8u_U0_ap_continue;
wire    kStreamWrite_8u_U0_ap_idle;
wire    kStreamWrite_8u_U0_ap_ready;
wire   [7:0] kStreamWrite_8u_U0_outaxistream_TDATA;
wire    kStreamWrite_8u_U0_outaxistream_TVALID;
wire   [0:0] kStreamWrite_8u_U0_outaxistream_TKEEP;
wire   [0:0] kStreamWrite_8u_U0_outaxistream_TSTRB;
wire   [0:0] kStreamWrite_8u_U0_outaxistream_TLAST;
wire    kStreamWrite_8u_U0_outStream12_read;
wire    kStreamWrite_8u_U0_snappyOutEos13_read;
wire    kStreamWrite_8u_U0_compressedSize10_read;
wire    inStream_full_n;
wire   [7:0] inStream_dout;
wire   [1:0] inStream_num_data_valid;
wire   [1:0] inStream_fifo_cap;
wire    inStream_empty_n;
wire    compressdStream_full_n;
wire   [31:0] compressdStream_dout;
wire   [3:0] compressdStream_num_data_valid;
wire   [3:0] compressdStream_fifo_cap;
wire    compressdStream_empty_n;
wire    bestMatchStream_full_n;
wire   [31:0] bestMatchStream_dout;
wire   [3:0] bestMatchStream_num_data_valid;
wire   [3:0] bestMatchStream_fifo_cap;
wire    bestMatchStream_empty_n;
wire    boosterStream_full_n;
wire   [31:0] boosterStream_dout;
wire   [3:0] boosterStream_num_data_valid;
wire   [3:0] boosterStream_fifo_cap;
wire    boosterStream_empty_n;
wire    outStream_full_n;
wire   [7:0] outStream_dout;
wire   [1:0] outStream_num_data_valid;
wire   [1:0] outStream_fifo_cap;
wire    outStream_empty_n;
wire    snappyOutEos_full_n;
wire   [0:0] snappyOutEos_dout;
wire   [3:0] snappyOutEos_num_data_valid;
wire   [3:0] snappyOutEos_fifo_cap;
wire    snappyOutEos_empty_n;
wire    compressedSize_full_n;
wire   [31:0] compressedSize_dout;
wire   [1:0] compressedSize_num_data_valid;
wire   [1:0] compressedSize_fifo_cap;
wire    compressedSize_empty_n;
wire   [0:0] start_for_kStreamWrite_8u_U0_din;
wire    start_for_kStreamWrite_8u_U0_full_n;
wire   [0:0] start_for_kStreamWrite_8u_U0_dout;
wire    start_for_kStreamWrite_8u_U0_empty_n;

snappyCompressStream_kStreamRead_8u_s kStreamRead_8u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(kStreamRead_8u_U0_ap_start),
    .ap_done(kStreamRead_8u_U0_ap_done),
    .ap_continue(kStreamRead_8u_U0_ap_continue),
    .ap_idle(kStreamRead_8u_U0_ap_idle),
    .ap_ready(kStreamRead_8u_U0_ap_ready),
    .inaxistream_TDATA(inaxistream_TDATA),
    .inaxistream_TVALID(inaxistream_TVALID),
    .inaxistream_TREADY(kStreamRead_8u_U0_inaxistream_TREADY),
    .inaxistream_TKEEP(inaxistream_TKEEP),
    .inaxistream_TSTRB(inaxistream_TSTRB),
    .inaxistream_TLAST(inaxistream_TLAST),
    .inStream11_din(kStreamRead_8u_U0_inStream11_din),
    .inStream11_num_data_valid(inStream_num_data_valid),
    .inStream11_fifo_cap(inStream_fifo_cap),
    .inStream11_full_n(inStream_full_n),
    .inStream11_write(kStreamRead_8u_U0_inStream11_write),
    .input_size(inputSize),
    .input_size_ap_vld(inputSize_ap_vld),
    .input_size_ap_ack(kStreamRead_8u_U0_input_size_ap_ack)
);

snappyCompressStream_lzCompress_6_4_65536_6_1_4096_64_s lzCompress_6_4_65536_6_1_4096_64_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(lzCompress_6_4_65536_6_1_4096_64_U0_ap_start),
    .ap_done(lzCompress_6_4_65536_6_1_4096_64_U0_ap_done),
    .ap_continue(lzCompress_6_4_65536_6_1_4096_64_U0_ap_continue),
    .ap_idle(lzCompress_6_4_65536_6_1_4096_64_U0_ap_idle),
    .ap_ready(lzCompress_6_4_65536_6_1_4096_64_U0_ap_ready),
    .inStream11_dout(inStream_dout),
    .inStream11_num_data_valid(inStream_num_data_valid),
    .inStream11_fifo_cap(inStream_fifo_cap),
    .inStream11_empty_n(inStream_empty_n),
    .inStream11_read(lzCompress_6_4_65536_6_1_4096_64_U0_inStream11_read),
    .compressdStream7_din(lzCompress_6_4_65536_6_1_4096_64_U0_compressdStream7_din),
    .compressdStream7_num_data_valid(compressdStream_num_data_valid),
    .compressdStream7_fifo_cap(compressdStream_fifo_cap),
    .compressdStream7_full_n(compressdStream_full_n),
    .compressdStream7_write(lzCompress_6_4_65536_6_1_4096_64_U0_compressdStream7_write),
    .input_size(inputSize),
    .input_size_ap_vld(inputSize_ap_vld),
    .input_size_ap_ack(lzCompress_6_4_65536_6_1_4096_64_U0_input_size_ap_ack)
);

snappyCompressStream_lzBestMatchFilter_6_65536_s lzBestMatchFilter_6_65536_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(lzBestMatchFilter_6_65536_U0_ap_start),
    .ap_done(lzBestMatchFilter_6_65536_U0_ap_done),
    .ap_continue(lzBestMatchFilter_6_65536_U0_ap_continue),
    .ap_idle(lzBestMatchFilter_6_65536_U0_ap_idle),
    .ap_ready(lzBestMatchFilter_6_65536_U0_ap_ready),
    .compressdStream7_dout(compressdStream_dout),
    .compressdStream7_num_data_valid(compressdStream_num_data_valid),
    .compressdStream7_fifo_cap(compressdStream_fifo_cap),
    .compressdStream7_empty_n(compressdStream_empty_n),
    .compressdStream7_read(lzBestMatchFilter_6_65536_U0_compressdStream7_read),
    .bestMatchStream8_din(lzBestMatchFilter_6_65536_U0_bestMatchStream8_din),
    .bestMatchStream8_num_data_valid(bestMatchStream_num_data_valid),
    .bestMatchStream8_fifo_cap(bestMatchStream_fifo_cap),
    .bestMatchStream8_full_n(bestMatchStream_full_n),
    .bestMatchStream8_write(lzBestMatchFilter_6_65536_U0_bestMatchStream8_write),
    .input_size(inputSize),
    .input_size_ap_vld(inputSize_ap_vld),
    .input_size_ap_ack(lzBestMatchFilter_6_65536_U0_input_size_ap_ack)
);

snappyCompressStream_lzBooster_64_16384_64_s lzBooster_64_16384_64_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(lzBooster_64_16384_64_U0_ap_start),
    .ap_done(lzBooster_64_16384_64_U0_ap_done),
    .ap_continue(lzBooster_64_16384_64_U0_ap_continue),
    .ap_idle(lzBooster_64_16384_64_U0_ap_idle),
    .ap_ready(lzBooster_64_16384_64_U0_ap_ready),
    .bestMatchStream8_dout(bestMatchStream_dout),
    .bestMatchStream8_num_data_valid(bestMatchStream_num_data_valid),
    .bestMatchStream8_fifo_cap(bestMatchStream_fifo_cap),
    .bestMatchStream8_empty_n(bestMatchStream_empty_n),
    .bestMatchStream8_read(lzBooster_64_16384_64_U0_bestMatchStream8_read),
    .boosterStream9_din(lzBooster_64_16384_64_U0_boosterStream9_din),
    .boosterStream9_num_data_valid(boosterStream_num_data_valid),
    .boosterStream9_fifo_cap(boosterStream_fifo_cap),
    .boosterStream9_full_n(boosterStream_full_n),
    .boosterStream9_write(lzBooster_64_16384_64_U0_boosterStream9_write),
    .input_size(inputSize),
    .input_size_ap_vld(inputSize_ap_vld),
    .input_size_ap_ack(lzBooster_64_16384_64_U0_input_size_ap_ack)
);

snappyCompressStream_snappyCompress_60_64_8_s snappyCompress_60_64_8_U0(
    .ap_start(snappyCompress_60_64_8_U0_ap_start),
    .start_full_n(start_for_kStreamWrite_8u_U0_full_n),
    .start_out(snappyCompress_60_64_8_U0_start_out),
    .start_write(snappyCompress_60_64_8_U0_start_write),
    .boosterStream9_dout(boosterStream_dout),
    .boosterStream9_empty_n(boosterStream_empty_n),
    .boosterStream9_read(snappyCompress_60_64_8_U0_boosterStream9_read),
    .outStream12_din(snappyCompress_60_64_8_U0_outStream12_din),
    .outStream12_full_n(outStream_full_n),
    .outStream12_write(snappyCompress_60_64_8_U0_outStream12_write),
    .input_size(inputSize),
    .snappyOutEos13_din(snappyCompress_60_64_8_U0_snappyOutEos13_din),
    .snappyOutEos13_full_n(snappyOutEos_full_n),
    .snappyOutEos13_write(snappyCompress_60_64_8_U0_snappyOutEos13_write),
    .compressedSize10_din(snappyCompress_60_64_8_U0_compressedSize10_din),
    .compressedSize10_full_n(compressedSize_full_n),
    .compressedSize10_write(snappyCompress_60_64_8_U0_compressedSize10_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .input_size_ap_vld(inputSize_ap_vld),
    .input_size_ap_ack(snappyCompress_60_64_8_U0_input_size_ap_ack),
    .ap_done(snappyCompress_60_64_8_U0_ap_done),
    .ap_ready(snappyCompress_60_64_8_U0_ap_ready),
    .ap_idle(snappyCompress_60_64_8_U0_ap_idle),
    .ap_continue(snappyCompress_60_64_8_U0_ap_continue)
);

snappyCompressStream_kStreamWrite_8u_s kStreamWrite_8u_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(kStreamWrite_8u_U0_ap_start),
    .ap_done(kStreamWrite_8u_U0_ap_done),
    .ap_continue(kStreamWrite_8u_U0_ap_continue),
    .ap_idle(kStreamWrite_8u_U0_ap_idle),
    .ap_ready(kStreamWrite_8u_U0_ap_ready),
    .outaxistream_TDATA(kStreamWrite_8u_U0_outaxistream_TDATA),
    .outaxistream_TVALID(kStreamWrite_8u_U0_outaxistream_TVALID),
    .outaxistream_TREADY(outaxistream_TREADY),
    .outaxistream_TKEEP(kStreamWrite_8u_U0_outaxistream_TKEEP),
    .outaxistream_TSTRB(kStreamWrite_8u_U0_outaxistream_TSTRB),
    .outaxistream_TLAST(kStreamWrite_8u_U0_outaxistream_TLAST),
    .outStream12_dout(outStream_dout),
    .outStream12_num_data_valid(outStream_num_data_valid),
    .outStream12_fifo_cap(outStream_fifo_cap),
    .outStream12_empty_n(outStream_empty_n),
    .outStream12_read(kStreamWrite_8u_U0_outStream12_read),
    .snappyOutEos13_dout(snappyOutEos_dout),
    .snappyOutEos13_num_data_valid(snappyOutEos_num_data_valid),
    .snappyOutEos13_fifo_cap(snappyOutEos_fifo_cap),
    .snappyOutEos13_empty_n(snappyOutEos_empty_n),
    .snappyOutEos13_read(kStreamWrite_8u_U0_snappyOutEos13_read),
    .compressedSize10_dout(compressedSize_dout),
    .compressedSize10_num_data_valid(compressedSize_num_data_valid),
    .compressedSize10_fifo_cap(compressedSize_fifo_cap),
    .compressedSize10_empty_n(compressedSize_empty_n),
    .compressedSize10_read(kStreamWrite_8u_U0_compressedSize10_read)
);

snappyCompressStream_fifo_w8_d2_S inStream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(kStreamRead_8u_U0_inStream11_din),
    .if_full_n(inStream_full_n),
    .if_write(kStreamRead_8u_U0_inStream11_write),
    .if_dout(inStream_dout),
    .if_num_data_valid(inStream_num_data_valid),
    .if_fifo_cap(inStream_fifo_cap),
    .if_empty_n(inStream_empty_n),
    .if_read(lzCompress_6_4_65536_6_1_4096_64_U0_inStream11_read)
);

snappyCompressStream_fifo_w32_d8_S compressdStream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(lzCompress_6_4_65536_6_1_4096_64_U0_compressdStream7_din),
    .if_full_n(compressdStream_full_n),
    .if_write(lzCompress_6_4_65536_6_1_4096_64_U0_compressdStream7_write),
    .if_dout(compressdStream_dout),
    .if_num_data_valid(compressdStream_num_data_valid),
    .if_fifo_cap(compressdStream_fifo_cap),
    .if_empty_n(compressdStream_empty_n),
    .if_read(lzBestMatchFilter_6_65536_U0_compressdStream7_read)
);

snappyCompressStream_fifo_w32_d8_S bestMatchStream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(lzBestMatchFilter_6_65536_U0_bestMatchStream8_din),
    .if_full_n(bestMatchStream_full_n),
    .if_write(lzBestMatchFilter_6_65536_U0_bestMatchStream8_write),
    .if_dout(bestMatchStream_dout),
    .if_num_data_valid(bestMatchStream_num_data_valid),
    .if_fifo_cap(bestMatchStream_fifo_cap),
    .if_empty_n(bestMatchStream_empty_n),
    .if_read(lzBooster_64_16384_64_U0_bestMatchStream8_read)
);

snappyCompressStream_fifo_w32_d8_S boosterStream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(lzBooster_64_16384_64_U0_boosterStream9_din),
    .if_full_n(boosterStream_full_n),
    .if_write(lzBooster_64_16384_64_U0_boosterStream9_write),
    .if_dout(boosterStream_dout),
    .if_num_data_valid(boosterStream_num_data_valid),
    .if_fifo_cap(boosterStream_fifo_cap),
    .if_empty_n(boosterStream_empty_n),
    .if_read(snappyCompress_60_64_8_U0_boosterStream9_read)
);

snappyCompressStream_fifo_w8_d2_S outStream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(snappyCompress_60_64_8_U0_outStream12_din),
    .if_full_n(outStream_full_n),
    .if_write(snappyCompress_60_64_8_U0_outStream12_write),
    .if_dout(outStream_dout),
    .if_num_data_valid(outStream_num_data_valid),
    .if_fifo_cap(outStream_fifo_cap),
    .if_empty_n(outStream_empty_n),
    .if_read(kStreamWrite_8u_U0_outStream12_read)
);

snappyCompressStream_fifo_w1_d8_S snappyOutEos_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(snappyCompress_60_64_8_U0_snappyOutEos13_din),
    .if_full_n(snappyOutEos_full_n),
    .if_write(snappyCompress_60_64_8_U0_snappyOutEos13_write),
    .if_dout(snappyOutEos_dout),
    .if_num_data_valid(snappyOutEos_num_data_valid),
    .if_fifo_cap(snappyOutEos_fifo_cap),
    .if_empty_n(snappyOutEos_empty_n),
    .if_read(kStreamWrite_8u_U0_snappyOutEos13_read)
);

snappyCompressStream_fifo_w32_d2_S compressedSize_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(snappyCompress_60_64_8_U0_compressedSize10_din),
    .if_full_n(compressedSize_full_n),
    .if_write(snappyCompress_60_64_8_U0_compressedSize10_write),
    .if_dout(compressedSize_dout),
    .if_num_data_valid(compressedSize_num_data_valid),
    .if_fifo_cap(compressedSize_fifo_cap),
    .if_empty_n(compressedSize_empty_n),
    .if_read(kStreamWrite_8u_U0_compressedSize10_read)
);

snappyCompressStream_start_for_kStreamWrite_8u_U0 start_for_kStreamWrite_8u_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_kStreamWrite_8u_U0_din),
    .if_full_n(start_for_kStreamWrite_8u_U0_full_n),
    .if_write(snappyCompress_60_64_8_U0_start_write),
    .if_dout(start_for_kStreamWrite_8u_U0_dout),
    .if_empty_n(start_for_kStreamWrite_8u_U0_empty_n),
    .if_read(kStreamWrite_8u_U0_ap_ready)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign inaxistream_TREADY = kStreamRead_8u_U0_inaxistream_TREADY;

assign inputSize_ap_ack = snappyCompress_60_64_8_U0_input_size_ap_ack;

assign kStreamRead_8u_U0_ap_continue = 1'b1;

assign kStreamRead_8u_U0_ap_start = 1'b1;

assign kStreamWrite_8u_U0_ap_continue = 1'b1;

assign kStreamWrite_8u_U0_ap_start = start_for_kStreamWrite_8u_U0_empty_n;

assign lzBestMatchFilter_6_65536_U0_ap_continue = 1'b1;

assign lzBestMatchFilter_6_65536_U0_ap_start = 1'b1;

assign lzBooster_64_16384_64_U0_ap_continue = 1'b1;

assign lzBooster_64_16384_64_U0_ap_start = 1'b1;

assign lzCompress_6_4_65536_6_1_4096_64_U0_ap_continue = 1'b1;

assign lzCompress_6_4_65536_6_1_4096_64_U0_ap_start = 1'b1;

assign outaxistream_TDATA = kStreamWrite_8u_U0_outaxistream_TDATA;

assign outaxistream_TKEEP = kStreamWrite_8u_U0_outaxistream_TKEEP;

assign outaxistream_TLAST = kStreamWrite_8u_U0_outaxistream_TLAST;

assign outaxistream_TSTRB = kStreamWrite_8u_U0_outaxistream_TSTRB;

assign outaxistream_TVALID = kStreamWrite_8u_U0_outaxistream_TVALID;

assign snappyCompress_60_64_8_U0_ap_continue = 1'b1;

assign snappyCompress_60_64_8_U0_ap_start = 1'b1;

assign start_for_kStreamWrite_8u_U0_din = 1'b1;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "snappyCompressStream_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "snappyCompressStream_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //snappyCompressStream


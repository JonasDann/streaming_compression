-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity snappyCompressStream_lzBooster_64_16384_64_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bestMatchStream8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    bestMatchStream8_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    bestMatchStream8_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    bestMatchStream8_empty_n : IN STD_LOGIC;
    bestMatchStream8_read : OUT STD_LOGIC;
    boosterStream9_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    boosterStream9_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    boosterStream9_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    boosterStream9_full_n : IN STD_LOGIC;
    boosterStream9_write : OUT STD_LOGIC;
    input_size : IN STD_LOGIC_VECTOR (31 downto 0);
    input_size_ap_vld : IN STD_LOGIC;
    input_size_ap_ack : OUT STD_LOGIC );
end;


architecture behav of snappyCompressStream_lzBooster_64_16384_64_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_FFFFFFC0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal bestMatchStream8_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal boosterStream9_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal input_size_blk_n : STD_LOGIC;
    signal icmp_ln559_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln559_reg_140 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_fu_98_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_151 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start : STD_LOGIC;
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_done : STD_LOGIC;
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_idle : STD_LOGIC;
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_ready : STD_LOGIC;
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_bestMatchStream8_read : STD_LOGIC;
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_write : STD_LOGIC;
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_outValue_V_11_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_outValue_V_11_out_ap_vld : STD_LOGIC;
    signal grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call3 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_4_fu_58 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_10_fu_123_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln617_fu_117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state5 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bestMatchStream8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        bestMatchStream8_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        bestMatchStream8_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        bestMatchStream8_empty_n : IN STD_LOGIC;
        bestMatchStream8_read : OUT STD_LOGIC;
        boosterStream9_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        boosterStream9_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        boosterStream9_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        boosterStream9_full_n : IN STD_LOGIC;
        boosterStream9_write : OUT STD_LOGIC;
        sub : IN STD_LOGIC_VECTOR (31 downto 0);
        outValue_V_11_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        outValue_V_11_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82 : component snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start,
        ap_done => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_done,
        ap_idle => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_idle,
        ap_ready => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_ready,
        bestMatchStream8_dout => bestMatchStream8_dout,
        bestMatchStream8_num_data_valid => ap_const_lv4_0,
        bestMatchStream8_fifo_cap => ap_const_lv4_0,
        bestMatchStream8_empty_n => bestMatchStream8_empty_n,
        bestMatchStream8_read => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_bestMatchStream8_read,
        boosterStream9_din => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_din,
        boosterStream9_num_data_valid => ap_const_lv4_0,
        boosterStream9_fifo_cap => ap_const_lv4_0,
        boosterStream9_full_n => boosterStream9_full_n,
        boosterStream9_write => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_write,
        sub => sub_reg_151,
        outValue_V_11_out => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_outValue_V_11_out,
        outValue_V_11_out_ap_vld => grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_outValue_V_11_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln559_reg_140 = ap_const_lv1_1) or (icmp_ln617_fu_117_p2 = ap_const_lv1_1)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((input_size_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln559_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_ready = ap_const_logic_1)) then 
                    grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_4_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((input_size_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln559_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_4_fu_58 <= ap_const_lv7_0;
            elsif (((icmp_ln559_reg_140 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln617_fu_117_p2 = ap_const_lv1_0))) then 
                i_4_fu_58 <= i_10_fu_123_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln559_reg_140 <= icmp_ln559_fu_92_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln559_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                sub_reg_151 <= sub_fu_98_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, bestMatchStream8_empty_n, boosterStream9_full_n, input_size_ap_vld, ap_CS_fsm_state5, ap_CS_fsm_state3, icmp_ln559_fu_92_p2, icmp_ln559_reg_140, grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln617_fu_117_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((input_size_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln559_fu_92_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not(((input_size_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln559_fu_92_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((boosterStream9_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln559_reg_140 = ap_const_lv1_1) or (icmp_ln617_fu_117_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((boosterStream9_full_n = ap_const_logic_0) or (bestMatchStream8_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, input_size_ap_vld)
    begin
        if (((input_size_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_done)
    begin
        if ((grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(boosterStream9_full_n)
    begin
        if ((boosterStream9_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(bestMatchStream8_empty_n, boosterStream9_full_n)
    begin
        if (((boosterStream9_full_n = ap_const_logic_0) or (bestMatchStream8_empty_n = ap_const_logic_0))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, input_size_ap_vld)
    begin
                ap_block_state1 <= ((input_size_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call3_assign_proc : process(ap_start, ap_done_reg, input_size_ap_vld)
    begin
                ap_block_state1_ignore_call3 <= ((input_size_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state5_assign_proc : process(bestMatchStream8_empty_n, boosterStream9_full_n)
    begin
                ap_block_state5 <= ((boosterStream9_full_n = ap_const_logic_0) or (bestMatchStream8_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln559_reg_140, ap_CS_fsm_state4, icmp_ln617_fu_117_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln559_reg_140 = ap_const_lv1_1) or (icmp_ln617_fu_117_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln559_reg_140, ap_CS_fsm_state4, icmp_ln617_fu_117_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((icmp_ln559_reg_140 = ap_const_lv1_1) or (icmp_ln617_fu_117_p2 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bestMatchStream8_blk_n_assign_proc : process(bestMatchStream8_empty_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            bestMatchStream8_blk_n <= bestMatchStream8_empty_n;
        else 
            bestMatchStream8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bestMatchStream8_read_assign_proc : process(bestMatchStream8_empty_n, boosterStream9_full_n, ap_CS_fsm_state5, grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_bestMatchStream8_read, ap_CS_fsm_state2)
    begin
        if ((not(((boosterStream9_full_n = ap_const_logic_0) or (bestMatchStream8_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            bestMatchStream8_read <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bestMatchStream8_read <= grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_bestMatchStream8_read;
        else 
            bestMatchStream8_read <= ap_const_logic_0;
        end if; 
    end process;


    boosterStream9_blk_n_assign_proc : process(boosterStream9_full_n, ap_CS_fsm_state5, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            boosterStream9_blk_n <= boosterStream9_full_n;
        else 
            boosterStream9_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    boosterStream9_din_assign_proc : process(bestMatchStream8_dout, bestMatchStream8_empty_n, boosterStream9_full_n, ap_CS_fsm_state5, ap_CS_fsm_state3, grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_din, grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_outValue_V_11_out, ap_CS_fsm_state2)
    begin
        if ((not(((boosterStream9_full_n = ap_const_logic_0) or (bestMatchStream8_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            boosterStream9_din <= bestMatchStream8_dout;
        elsif (((boosterStream9_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            boosterStream9_din <= grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_outValue_V_11_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            boosterStream9_din <= grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_din;
        else 
            boosterStream9_din <= grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_din;
        end if; 
    end process;


    boosterStream9_write_assign_proc : process(bestMatchStream8_empty_n, boosterStream9_full_n, ap_CS_fsm_state5, ap_CS_fsm_state3, grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_write, ap_CS_fsm_state2)
    begin
        if (((not(((boosterStream9_full_n = ap_const_logic_0) or (bestMatchStream8_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((boosterStream9_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            boosterStream9_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            boosterStream9_write <= grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_boosterStream9_write;
        else 
            boosterStream9_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start <= grp_lzBooster_64_16384_64_Pipeline_lz_booster_fu_82_ap_start_reg;
    i_10_fu_123_p2 <= std_logic_vector(unsigned(i_4_fu_58) + unsigned(ap_const_lv7_1));
    icmp_ln559_fu_92_p2 <= "1" when (input_size = ap_const_lv32_0) else "0";
    icmp_ln617_fu_117_p2 <= "1" when (i_4_fu_58 = ap_const_lv7_40) else "0";

    input_size_ap_ack_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_size_ap_vld)
    begin
        if ((not(((input_size_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_size_ap_ack <= ap_const_logic_1;
        else 
            input_size_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    input_size_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_size_ap_vld)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_size_blk_n <= input_size_ap_vld;
        else 
            input_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sub_fu_98_p2 <= std_logic_vector(unsigned(input_size) + unsigned(ap_const_lv32_FFFFFFC0));
end behav;

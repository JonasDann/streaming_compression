-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity snappyCompressStream_snappyCompressPart2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lit_outStream2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    lit_outStream2_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    lit_outStream2_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    lit_outStream2_empty_n : IN STD_LOGIC;
    lit_outStream2_read : OUT STD_LOGIC;
    lenOffset_Stream3_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    lenOffset_Stream3_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    lenOffset_Stream3_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    lenOffset_Stream3_empty_n : IN STD_LOGIC;
    lenOffset_Stream3_read : OUT STD_LOGIC;
    outStream12_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    outStream12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    outStream12_full_n : IN STD_LOGIC;
    outStream12_write : OUT STD_LOGIC;
    snappyOutEos13_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    snappyOutEos13_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    snappyOutEos13_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    snappyOutEos13_full_n : IN STD_LOGIC;
    snappyOutEos13_write : OUT STD_LOGIC;
    compressedSize10_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressedSize10_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    compressedSize10_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    compressedSize10_full_n : IN STD_LOGIC;
    compressedSize10_write : OUT STD_LOGIC;
    input_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_size_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
    input_size_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
    input_size_empty_n : IN STD_LOGIC;
    input_size_read : OUT STD_LOGIC );
end;


architecture behav of snappyCompressStream_snappyCompressPart2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal lenOffset_Stream3_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal outStream12_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln165_reg_297 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln134_reg_293 : STD_LOGIC_VECTOR (0 downto 0);
    signal snappyOutEos13_blk_n : STD_LOGIC;
    signal compressedSize10_blk_n : STD_LOGIC;
    signal input_size_blk_n : STD_LOGIC;
    signal input_size_read_reg_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln134_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln165_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpValue_V_reg_304 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start : STD_LOGIC;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_done : STD_LOGIC;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_idle : STD_LOGIC;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_ready : STD_LOGIC;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_lenOffset_Stream3_read : STD_LOGIC;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_lit_outStream2_read : STD_LOGIC;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_write : STD_LOGIC;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_din : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_write : STD_LOGIC;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_compressedSize_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_compressedSize_1_out_ap_vld : STD_LOGIC;
    signal compressedSize_reg_133 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal p_Result_s_fu_209_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal p_Result_3_fu_227_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal p_Result_4_fu_249_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal outInSize_V_2_fu_268_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal tmp_fu_174_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_12_fu_190_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln674_fu_206_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_218_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln674_2_fu_246_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln182_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component snappyCompressStream_snappyCompressPart2_Pipeline_snappy_compress IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lenOffset_Stream3_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        lenOffset_Stream3_num_data_valid : IN STD_LOGIC_VECTOR (5 downto 0);
        lenOffset_Stream3_fifo_cap : IN STD_LOGIC_VECTOR (5 downto 0);
        lenOffset_Stream3_empty_n : IN STD_LOGIC;
        lenOffset_Stream3_read : OUT STD_LOGIC;
        lit_outStream2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        lit_outStream2_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        lit_outStream2_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        lit_outStream2_empty_n : IN STD_LOGIC;
        lit_outStream2_read : OUT STD_LOGIC;
        outStream12_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        outStream12_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        outStream12_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        outStream12_full_n : IN STD_LOGIC;
        outStream12_write : OUT STD_LOGIC;
        snappyOutEos13_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        snappyOutEos13_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
        snappyOutEos13_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
        snappyOutEos13_full_n : IN STD_LOGIC;
        snappyOutEos13_write : OUT STD_LOGIC;
        tmpValue_V_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln142 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_size_load : IN STD_LOGIC_VECTOR (31 downto 0);
        compressedSize_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        compressedSize_1_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151 : component snappyCompressStream_snappyCompressPart2_Pipeline_snappy_compress
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start,
        ap_done => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_done,
        ap_idle => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_idle,
        ap_ready => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_ready,
        lenOffset_Stream3_dout => lenOffset_Stream3_dout,
        lenOffset_Stream3_num_data_valid => ap_const_lv6_0,
        lenOffset_Stream3_fifo_cap => ap_const_lv6_0,
        lenOffset_Stream3_empty_n => lenOffset_Stream3_empty_n,
        lenOffset_Stream3_read => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_lenOffset_Stream3_read,
        lit_outStream2_dout => lit_outStream2_dout,
        lit_outStream2_num_data_valid => ap_const_lv7_0,
        lit_outStream2_fifo_cap => ap_const_lv7_0,
        lit_outStream2_empty_n => lit_outStream2_empty_n,
        lit_outStream2_read => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_lit_outStream2_read,
        outStream12_din => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_din,
        outStream12_num_data_valid => ap_const_lv2_0,
        outStream12_fifo_cap => ap_const_lv2_0,
        outStream12_full_n => outStream12_full_n,
        outStream12_write => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_write,
        snappyOutEos13_din => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_din,
        snappyOutEos13_num_data_valid => ap_const_lv4_0,
        snappyOutEos13_fifo_cap => ap_const_lv4_0,
        snappyOutEos13_full_n => snappyOutEos13_full_n,
        snappyOutEos13_write => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_write,
        tmpValue_V_1 => tmpValue_V_reg_304,
        zext_ln142 => compressedSize_reg_133,
        input_size_load => input_size_read_reg_282,
        compressedSize_1_out => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_compressedSize_1_out,
        compressedSize_1_out_ap_vld => grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_compressedSize_1_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_ready = ap_const_logic_1)) then 
                    grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    compressedSize_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                compressedSize_reg_133 <= ap_const_lv2_1;
            elsif ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                compressedSize_reg_133 <= ap_const_lv2_2;
            elsif ((not(((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)))) and (icmp_ln165_reg_297 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                compressedSize_reg_133 <= ap_const_lv2_3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln134_reg_293 <= icmp_ln134_fu_168_p2;
                input_size_read_reg_282 <= input_size_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln134_fu_168_p2 = ap_const_lv1_0))) then
                icmp_ln165_reg_297 <= icmp_ln165_fu_184_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmpValue_V_reg_304 <= lenOffset_Stream3_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, lenOffset_Stream3_empty_n, outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, input_size_empty_n, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln165_reg_297, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln134_reg_293, icmp_ln134_fu_168_p2, icmp_ln165_fu_184_p2, grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_done, ap_CS_fsm_state9, icmp_ln182_fu_200_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((input_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln182_fu_200_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln165_fu_184_p2 = ap_const_lv1_1) and (icmp_ln134_fu_168_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif ((not(((input_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (icmp_ln182_fu_200_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln165_fu_184_p2 = ap_const_lv1_1) and (icmp_ln134_fu_168_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not(((input_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln165_fu_184_p2 = ap_const_lv1_0) and (icmp_ln134_fu_168_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((input_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln134_fu_168_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if ((not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not(((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, icmp_ln134_reg_293)
    begin
        if ((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n)
    begin
        if (((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, input_size_empty_n)
    begin
        if (((input_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
        if (((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
        if (((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(lenOffset_Stream3_empty_n, outStream12_full_n, snappyOutEos13_full_n, icmp_ln165_reg_297)
    begin
        if (((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)))) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
        if (((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
        if (((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state7_blk_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
        if (((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_done)
    begin
        if ((grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, input_size_empty_n)
    begin
                ap_block_state1 <= ((input_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state10_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, icmp_ln134_reg_293)
    begin
                ap_block_state10 <= (((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)));
    end process;


    ap_block_state11_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n)
    begin
                ap_block_state11 <= ((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
                ap_block_state2 <= ((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
                ap_block_state3 <= ((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_assign_proc : process(lenOffset_Stream3_empty_n, outStream12_full_n, snappyOutEos13_full_n, icmp_ln165_reg_297)
    begin
                ap_block_state4 <= ((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)));
    end process;


    ap_block_state5_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
                ap_block_state5 <= ((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
                ap_block_state6 <= ((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n)
    begin
                ap_block_state7 <= ((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, ap_CS_fsm_state10, icmp_ln134_reg_293)
    begin
        if ((not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, ap_CS_fsm_state10, icmp_ln134_reg_293)
    begin
        if ((not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    compressedSize10_blk_n_assign_proc : process(compressedSize10_full_n, ap_CS_fsm_state11, ap_CS_fsm_state10, icmp_ln134_reg_293)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) then 
            compressedSize10_blk_n <= compressedSize10_full_n;
        else 
            compressedSize10_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    compressedSize10_din_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, ap_CS_fsm_state11, ap_CS_fsm_state10, icmp_ln134_reg_293, grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_compressedSize_1_out)
    begin
        if ((not(((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            compressedSize10_din <= ap_const_lv32_0;
        elsif ((not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0))) then 
            compressedSize10_din <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_compressedSize_1_out;
        else 
            compressedSize10_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    compressedSize10_write_assign_proc : process(outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, ap_CS_fsm_state11, ap_CS_fsm_state10, icmp_ln134_reg_293)
    begin
        if (((not(((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) then 
            compressedSize10_write <= ap_const_logic_1;
        else 
            compressedSize10_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_ap_start_reg;
    icmp_ln134_fu_168_p2 <= "1" when (input_size_dout = ap_const_lv32_0) else "0";
    icmp_ln165_fu_184_p2 <= "1" when (tmp_fu_174_p4 = ap_const_lv18_0) else "0";
    icmp_ln182_fu_200_p2 <= "1" when (tmp_12_fu_190_p4 = ap_const_lv25_0) else "0";

    input_size_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_size_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_size_blk_n <= input_size_empty_n;
        else 
            input_size_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_size_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, input_size_empty_n)
    begin
        if ((not(((input_size_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_size_read <= ap_const_logic_1;
        else 
            input_size_read <= ap_const_logic_0;
        end if; 
    end process;


    lenOffset_Stream3_blk_n_assign_proc : process(lenOffset_Stream3_empty_n, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lenOffset_Stream3_blk_n <= lenOffset_Stream3_empty_n;
        else 
            lenOffset_Stream3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lenOffset_Stream3_read_assign_proc : process(lenOffset_Stream3_empty_n, outStream12_full_n, snappyOutEos13_full_n, ap_CS_fsm_state4, icmp_ln165_reg_297, grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_lenOffset_Stream3_read, ap_CS_fsm_state9)
    begin
        if ((not(((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            lenOffset_Stream3_read <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            lenOffset_Stream3_read <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_lenOffset_Stream3_read;
        else 
            lenOffset_Stream3_read <= ap_const_logic_0;
        end if; 
    end process;


    lit_outStream2_read_assign_proc : process(grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_lit_outStream2_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            lit_outStream2_read <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_lit_outStream2_read;
        else 
            lit_outStream2_read <= ap_const_logic_0;
        end if; 
    end process;

    outInSize_V_2_fu_268_p1 <= input_size_read_reg_282(8 - 1 downto 0);

    outStream12_blk_n_assign_proc : process(outStream12_full_n, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln165_reg_297, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln134_reg_293)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) then 
            outStream12_blk_n <= outStream12_full_n;
        else 
            outStream12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream12_din_assign_proc : process(lenOffset_Stream3_empty_n, outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln165_reg_297, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln134_reg_293, input_size_read_reg_282, grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_din, ap_CS_fsm_state9, p_Result_s_fu_209_p3, p_Result_3_fu_227_p3, p_Result_4_fu_249_p3, outInSize_V_2_fu_268_p1)
    begin
        if (((not(((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) then 
            outStream12_din <= ap_const_lv8_0;
        elsif ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            outStream12_din <= outInSize_V_2_fu_268_p1;
        elsif ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            outStream12_din <= input_size_read_reg_282(14 downto 7);
        elsif ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            outStream12_din <= p_Result_4_fu_249_p3;
        elsif ((not(((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)))) and (icmp_ln165_reg_297 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            outStream12_din <= input_size_read_reg_282(21 downto 14);
        elsif ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            outStream12_din <= p_Result_3_fu_227_p3;
        elsif ((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            outStream12_din <= p_Result_s_fu_209_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            outStream12_din <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_din;
        else 
            outStream12_din <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_din;
        end if; 
    end process;


    outStream12_write_assign_proc : process(lenOffset_Stream3_empty_n, outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln165_reg_297, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln134_reg_293, grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_write, ap_CS_fsm_state9)
    begin
        if (((not(((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)))) and (icmp_ln165_reg_297 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            outStream12_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            outStream12_write <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_outStream12_write;
        else 
            outStream12_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_3_fu_227_p3 <= (ap_const_lv1_1 & tmp_s_fu_218_p4);
    p_Result_4_fu_249_p3 <= (ap_const_lv1_1 & trunc_ln674_2_fu_246_p1);
    p_Result_s_fu_209_p3 <= (ap_const_lv1_1 & trunc_ln674_fu_206_p1);

    snappyOutEos13_blk_n_assign_proc : process(snappyOutEos13_full_n, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln165_reg_297, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln134_reg_293)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) then 
            snappyOutEos13_blk_n <= snappyOutEos13_full_n;
        else 
            snappyOutEos13_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    snappyOutEos13_din_assign_proc : process(lenOffset_Stream3_empty_n, outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln165_reg_297, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln134_reg_293, grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_din, ap_CS_fsm_state9)
    begin
        if (((not(((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) then 
            snappyOutEos13_din <= ap_const_lv1_1;
        elsif (((not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)))) and (icmp_ln165_reg_297 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            snappyOutEos13_din <= ap_const_lv1_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            snappyOutEos13_din <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_din;
        else 
            snappyOutEos13_din <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_din;
        end if; 
    end process;


    snappyOutEos13_write_assign_proc : process(lenOffset_Stream3_empty_n, outStream12_full_n, snappyOutEos13_full_n, compressedSize10_full_n, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln165_reg_297, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, icmp_ln134_reg_293, grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_write, ap_CS_fsm_state9)
    begin
        if (((not(((compressedSize10_full_n = ap_const_logic_0) or (snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state11)) or (not((((compressedSize10_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((snappyOutEos13_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or ((outStream12_full_n = ap_const_logic_0) and (icmp_ln134_reg_293 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln134_reg_293 = ap_const_lv1_0)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((snappyOutEos13_full_n = ap_const_logic_0) or (outStream12_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((lenOffset_Stream3_empty_n = ap_const_logic_0) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (snappyOutEos13_full_n = ap_const_logic_0)) or ((icmp_ln165_reg_297 = ap_const_lv1_0) and (outStream12_full_n = ap_const_logic_0)))) and (icmp_ln165_reg_297 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            snappyOutEos13_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            snappyOutEos13_write <= grp_snappyCompressPart2_Pipeline_snappy_compress_fu_151_snappyOutEos13_write;
        else 
            snappyOutEos13_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_12_fu_190_p4 <= input_size_dout(31 downto 7);
    tmp_fu_174_p4 <= input_size_dout(31 downto 14);
    tmp_s_fu_218_p4 <= input_size_read_reg_282(13 downto 7);
    trunc_ln674_2_fu_246_p1 <= input_size_read_reg_282(7 - 1 downto 0);
    trunc_ln674_fu_206_p1 <= input_size_read_reg_282(7 - 1 downto 0);
end behav;

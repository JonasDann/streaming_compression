-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bestMatchStream8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    bestMatchStream8_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    bestMatchStream8_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    bestMatchStream8_empty_n : IN STD_LOGIC;
    bestMatchStream8_read : OUT STD_LOGIC;
    boosterStream9_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    boosterStream9_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    boosterStream9_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    boosterStream9_full_n : IN STD_LOGIC;
    boosterStream9_write : OUT STD_LOGIC;
    sub : IN STD_LOGIC_VECTOR (31 downto 0);
    outValue_V_11_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    outValue_V_11_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln572_reg_680 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal icmp_ln572_reg_680_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln588_reg_715 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_1_reg_724 : STD_LOGIC_VECTOR (0 downto 0);
    signal outFlag_reg_728 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op112_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln572_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal bestMatchStream8_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal boosterStream9_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_8_reg_673 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_8_reg_673_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_8_reg_673_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln572_reg_680_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln572_reg_680_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal outValue_V_8_reg_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal outValue_V_8_reg_684_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal outValue_V_8_reg_684_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tCh_fu_274_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tCh_reg_691 : STD_LOGIC_VECTOR (7 downto 0);
    signal tCh_reg_691_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tLen_reg_697 : STD_LOGIC_VECTOR (7 downto 0);
    signal tLen_reg_697_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tOffset_reg_703 : STD_LOGIC_VECTOR (15 downto 0);
    signal tOffset_reg_703_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal boostFlag_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal boostFlag_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal boostFlag_reg_708_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln588_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_1_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal outFlag_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln600_reg_732 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln591_fu_510_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln591_reg_741 : STD_LOGIC_VECTOR (5 downto 0);
    signal local_mem_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal local_mem_ce0 : STD_LOGIC;
    signal local_mem_we0 : STD_LOGIC;
    signal local_mem_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal local_mem_ce1 : STD_LOGIC;
    signal local_mem_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_matchFlag_483_phi_fu_188_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_matchFlag_483_reg_185 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_skip_len_481_phi_fu_198_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal skip_len_3_fu_432_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_reg_pp0_iter3_skip_len_481_reg_195 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_empty_phi_fu_208_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_reg_205 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln585_fu_317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln612_fu_347_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln612_2_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln612_1_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal skip_len_fu_90 : STD_LOGIC_VECTOR (15 downto 0);
    signal skip_len_1_fu_341_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln565_fu_440_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln174_fu_483_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal match_ch_fu_94 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_match_ch_load : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_9_fu_263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_i_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_582_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal matchFlag_fu_106 : STD_LOGIC_VECTOR (0 downto 0);
    signal match_len_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal match_len_3_fu_514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal match_loc_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal match_loc_2_fu_399_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal match_loc_1_fu_520_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_298_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln572_1_fu_314_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln572_fu_328_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_47_fu_366_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln590_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln590_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln590_1_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln579_fu_332_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln561_fu_404_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln606_fu_423_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal skip_len_2_fu_426_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln561_fu_526_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln591_fu_569_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln392_fu_572_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln392_fu_578_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_40 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op52_load_state4 : BOOLEAN;
    signal ap_enable_operation_52 : BOOLEAN;
    signal ap_enable_state4_pp0_iter3_stage0 : BOOLEAN;
    signal ap_predicate_op104_load_state5 : BOOLEAN;
    signal ap_enable_operation_104 : BOOLEAN;
    signal ap_enable_state5_pp0_iter4_stage0 : BOOLEAN;
    signal ap_predicate_op69_load_state4 : BOOLEAN;
    signal ap_enable_operation_69 : BOOLEAN;
    signal ap_predicate_op106_load_state5 : BOOLEAN;
    signal ap_enable_operation_106 : BOOLEAN;
    signal ap_predicate_op99_load_state4 : BOOLEAN;
    signal ap_enable_operation_99 : BOOLEAN;
    signal ap_predicate_op120_load_state5 : BOOLEAN;
    signal ap_enable_operation_120 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_302 : BOOLEAN;
    signal ap_condition_313 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster_local_mem_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component snappyCompressStream_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    local_mem_U : component snappyCompressStream_lzBooster_64_16384_64_Pipeline_lz_booster_local_mem_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 16384,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_mem_address0,
        ce0 => local_mem_ce0,
        we0 => local_mem_we0,
        d0 => tCh_reg_691,
        address1 => local_mem_address1,
        ce1 => local_mem_ce1,
        q1 => local_mem_q1);

    flow_control_loop_pipe_sequential_init_U : component snappyCompressStream_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    i_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln572_fu_257_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_98 <= i_9_fu_263_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_98 <= ap_const_lv32_0;
                end if;
            end if; 
        end if;
    end process;

    matchFlag_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then 
                matchFlag_fu_106 <= ap_const_lv1_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (outFlag_fu_408_p2 = ap_const_lv1_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then 
                matchFlag_fu_106 <= ap_phi_mux_matchFlag_483_phi_fu_188_p4;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln600_fu_413_p2 = ap_const_lv1_1) and (outFlag_fu_408_p2 = ap_const_lv1_0) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)))) then 
                matchFlag_fu_106 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln600_fu_413_p2 = ap_const_lv1_0) and (outFlag_fu_408_p2 = ap_const_lv1_0) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then 
                matchFlag_fu_106 <= boostFlag_reg_708_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    match_len_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                match_len_fu_110 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then 
                match_len_fu_110 <= match_len_3_fu_514_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln600_fu_413_p2 = ap_const_lv1_1) and (outFlag_fu_408_p2 = ap_const_lv1_0) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (outFlag_fu_408_p2 = ap_const_lv1_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln600_fu_413_p2 = ap_const_lv1_0) and (outFlag_fu_408_p2 = ap_const_lv1_0) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)))) then 
                match_len_fu_110 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    match_loc_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                match_loc_fu_114 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then 
                match_loc_fu_114 <= match_loc_1_fu_520_p2;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln600_fu_413_p2 = ap_const_lv1_1) and (outFlag_fu_408_p2 = ap_const_lv1_0) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (outFlag_fu_408_p2 = ap_const_lv1_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln600_fu_413_p2 = ap_const_lv1_0) and (outFlag_fu_408_p2 = ap_const_lv1_0) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)))) then 
                match_loc_fu_114 <= match_loc_2_fu_399_p2;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln590_1_reg_724) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                p_Val2_s_fu_102 <= p_Result_s_fu_582_p5;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (outFlag_reg_728 = ap_const_lv1_1) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln590_1_reg_724) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (outFlag_reg_728 = ap_const_lv1_0) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln590_1_reg_724) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln600_reg_732 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (outFlag_reg_728 = ap_const_lv1_0) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln590_1_reg_724) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln600_reg_732 = ap_const_lv1_0)))) then 
                p_Val2_s_fu_102 <= outValue_V_8_reg_684_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    skip_len_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (outFlag_fu_408_p2 = ap_const_lv1_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then 
                skip_len_fu_90 <= sext_ln174_fu_483_p1;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln600_fu_413_p2 = ap_const_lv1_1) and (outFlag_fu_408_p2 = ap_const_lv1_0) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)))) then 
                skip_len_fu_90 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln600_fu_413_p2 = ap_const_lv1_0) and (outFlag_fu_408_p2 = ap_const_lv1_0) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then 
                skip_len_fu_90 <= sext_ln565_fu_440_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_0) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then 
                skip_len_fu_90 <= skip_len_1_fu_341_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1))) then
                and_ln590_1_reg_724 <= and_ln590_1_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                i_8_reg_673 <= ap_sig_allocacmp_i_8;
                i_8_reg_673_pp0_iter1_reg <= i_8_reg_673;
                icmp_ln572_reg_680 <= icmp_ln572_fu_257_p2;
                icmp_ln572_reg_680_pp0_iter1_reg <= icmp_ln572_reg_680;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                boostFlag_reg_708_pp0_iter2_reg <= boostFlag_reg_708;
                i_8_reg_673_pp0_iter2_reg <= i_8_reg_673_pp0_iter1_reg;
                icmp_ln572_reg_680_pp0_iter2_reg <= icmp_ln572_reg_680_pp0_iter1_reg;
                icmp_ln572_reg_680_pp0_iter3_reg <= icmp_ln572_reg_680_pp0_iter2_reg;
                outValue_V_8_reg_684_pp0_iter2_reg <= outValue_V_8_reg_684;
                outValue_V_8_reg_684_pp0_iter3_reg <= outValue_V_8_reg_684_pp0_iter2_reg;
                tCh_reg_691_pp0_iter2_reg <= tCh_reg_691;
                tLen_reg_697_pp0_iter2_reg <= tLen_reg_697;
                tOffset_reg_703_pp0_iter2_reg <= tOffset_reg_703;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln572_reg_680 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                boostFlag_reg_708 <= boostFlag_fu_308_p2;
                outValue_V_8_reg_684 <= bestMatchStream8_dout;
                tCh_reg_691 <= tCh_fu_274_p1;
                tLen_reg_697 <= bestMatchStream8_dout(15 downto 8);
                tOffset_reg_703 <= bestMatchStream8_dout(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then
                icmp_ln588_reg_715 <= icmp_ln588_fu_335_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then
                icmp_ln600_reg_732 <= icmp_ln600_fu_413_p2;
                outFlag_reg_728 <= outFlag_fu_408_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                match_ch_fu_94 <= ap_phi_mux_empty_phi_fu_208_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln590_1_fu_393_p2) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0))) then
                trunc_ln591_reg_741 <= trunc_ln591_fu_510_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln392_fu_572_p2 <= std_logic_vector(unsigned(zext_ln591_fu_569_p1) + unsigned(ap_const_lv7_1));
    add_ln561_fu_526_p2 <= std_logic_vector(unsigned(trunc_ln572_fu_328_p1) + unsigned(ap_const_lv14_1));
    and_ln590_1_fu_393_p2 <= (icmp_ln590_1_fu_382_p2 and and_ln590_fu_387_p2);
    and_ln590_fu_387_p2 <= (matchFlag_fu_106 and icmp_ln590_fu_376_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, bestMatchStream8_empty_n, icmp_ln572_reg_680, boosterStream9_full_n, ap_predicate_op112_write_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op112_write_state5 = ap_const_boolean_1) and (boosterStream9_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln572_reg_680 = ap_const_lv1_0) and (bestMatchStream8_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, bestMatchStream8_empty_n, icmp_ln572_reg_680, boosterStream9_full_n, ap_predicate_op112_write_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op112_write_state5 = ap_const_boolean_1) and (boosterStream9_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln572_reg_680 = ap_const_lv1_0) and (bestMatchStream8_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, bestMatchStream8_empty_n, icmp_ln572_reg_680, boosterStream9_full_n, ap_predicate_op112_write_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op112_write_state5 = ap_const_boolean_1) and (boosterStream9_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((icmp_ln572_reg_680 = ap_const_lv1_0) and (bestMatchStream8_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(bestMatchStream8_empty_n, icmp_ln572_reg_680)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((icmp_ln572_reg_680 = ap_const_lv1_0) and (bestMatchStream8_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter4_assign_proc : process(boosterStream9_full_n, ap_predicate_op112_write_state5)
    begin
                ap_block_state5_pp0_stage0_iter4 <= ((ap_predicate_op112_write_state5 = ap_const_boolean_1) and (boosterStream9_full_n = ap_const_logic_0));
    end process;


    ap_condition_302_assign_proc : process(icmp_ln572_reg_680_pp0_iter2_reg, icmp_ln588_fu_335_p2, and_ln590_1_fu_393_p2, outFlag_fu_408_p2)
    begin
                ap_condition_302 <= ((ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (outFlag_fu_408_p2 = ap_const_lv1_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_313_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, icmp_ln572_reg_680_pp0_iter2_reg)
    begin
                ap_condition_313 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln572_fu_257_p2)
    begin
        if (((icmp_ln572_fu_257_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_104_assign_proc : process(ap_predicate_op104_load_state5)
    begin
                ap_enable_operation_104 <= (ap_predicate_op104_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_106_assign_proc : process(ap_predicate_op106_load_state5)
    begin
                ap_enable_operation_106 <= (ap_predicate_op106_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_120_assign_proc : process(ap_predicate_op120_load_state5)
    begin
                ap_enable_operation_120 <= (ap_predicate_op120_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_40_assign_proc : process(icmp_ln572_reg_680_pp0_iter1_reg)
    begin
                ap_enable_operation_40 <= (icmp_ln572_reg_680_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_52_assign_proc : process(ap_predicate_op52_load_state4)
    begin
                ap_enable_operation_52 <= (ap_predicate_op52_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_69_assign_proc : process(ap_predicate_op69_load_state4)
    begin
                ap_enable_operation_69 <= (ap_predicate_op69_load_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_99_assign_proc : process(ap_predicate_op99_load_state4)
    begin
                ap_enable_operation_99 <= (ap_predicate_op99_load_state4 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state4_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state4_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_state5_pp0_iter4_stage0 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_empty_phi_fu_208_p10_assign_proc : process(icmp_ln572_reg_680_pp0_iter3_reg, icmp_ln588_reg_715, and_ln590_1_reg_724, outFlag_reg_728, icmp_ln600_reg_732, local_mem_q1, ap_phi_reg_pp0_iter4_empty_reg_205)
    begin
        if ((((outFlag_reg_728 = ap_const_lv1_1) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln590_1_reg_724)) or ((outFlag_reg_728 = ap_const_lv1_0) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln590_1_reg_724) and (icmp_ln600_reg_732 = ap_const_lv1_1)) or ((outFlag_reg_728 = ap_const_lv1_0) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln590_1_reg_724) and (icmp_ln600_reg_732 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln590_1_reg_724) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0)) or ((icmp_ln588_reg_715 = ap_const_lv1_0) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_empty_phi_fu_208_p10 <= local_mem_q1;
        else 
            ap_phi_mux_empty_phi_fu_208_p10 <= ap_phi_reg_pp0_iter4_empty_reg_205;
        end if; 
    end process;


    ap_phi_mux_matchFlag_483_phi_fu_188_p4_assign_proc : process(boostFlag_reg_708_pp0_iter2_reg, icmp_ln600_fu_413_p2, ap_phi_reg_pp0_iter3_matchFlag_483_reg_185, ap_condition_302)
    begin
        if ((ap_const_boolean_1 = ap_condition_302)) then
            if ((icmp_ln600_fu_413_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_matchFlag_483_phi_fu_188_p4 <= ap_const_lv1_0;
            elsif ((icmp_ln600_fu_413_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_matchFlag_483_phi_fu_188_p4 <= boostFlag_reg_708_pp0_iter2_reg;
            else 
                ap_phi_mux_matchFlag_483_phi_fu_188_p4 <= ap_phi_reg_pp0_iter3_matchFlag_483_reg_185;
            end if;
        else 
            ap_phi_mux_matchFlag_483_phi_fu_188_p4 <= ap_phi_reg_pp0_iter3_matchFlag_483_reg_185;
        end if; 
    end process;


    ap_phi_mux_skip_len_481_phi_fu_198_p4_assign_proc : process(icmp_ln600_fu_413_p2, skip_len_3_fu_432_p3, ap_phi_reg_pp0_iter3_skip_len_481_reg_195, ap_condition_302)
    begin
        if ((ap_const_boolean_1 = ap_condition_302)) then
            if ((icmp_ln600_fu_413_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_skip_len_481_phi_fu_198_p4 <= ap_const_lv9_0;
            elsif ((icmp_ln600_fu_413_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_skip_len_481_phi_fu_198_p4 <= skip_len_3_fu_432_p3;
            else 
                ap_phi_mux_skip_len_481_phi_fu_198_p4 <= ap_phi_reg_pp0_iter3_skip_len_481_reg_195;
            end if;
        else 
            ap_phi_mux_skip_len_481_phi_fu_198_p4 <= ap_phi_reg_pp0_iter3_skip_len_481_reg_195;
        end if; 
    end process;

    ap_phi_reg_pp0_iter3_matchFlag_483_reg_185 <= "X";
    ap_phi_reg_pp0_iter3_skip_len_481_reg_195 <= "XXXXXXXXX";
    ap_phi_reg_pp0_iter4_empty_reg_205 <= "XXXXXXXX";

    ap_predicate_op104_load_state5_assign_proc : process(icmp_ln572_reg_680_pp0_iter3_reg, icmp_ln588_reg_715)
    begin
                ap_predicate_op104_load_state5 <= ((icmp_ln588_reg_715 = ap_const_lv1_0) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op106_load_state5_assign_proc : process(icmp_ln572_reg_680_pp0_iter3_reg, icmp_ln588_reg_715, and_ln590_1_reg_724)
    begin
                ap_predicate_op106_load_state5 <= ((icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln590_1_reg_724));
    end process;


    ap_predicate_op112_write_state5_assign_proc : process(icmp_ln572_reg_680_pp0_iter3_reg, icmp_ln588_reg_715, and_ln590_1_reg_724, outFlag_reg_728)
    begin
                ap_predicate_op112_write_state5 <= ((outFlag_reg_728 = ap_const_lv1_1) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln590_1_reg_724));
    end process;


    ap_predicate_op120_load_state5_assign_proc : process(icmp_ln572_reg_680_pp0_iter3_reg, icmp_ln588_reg_715, and_ln590_1_reg_724)
    begin
                ap_predicate_op120_load_state5 <= ((ap_const_lv1_1 = and_ln590_1_reg_724) and (icmp_ln588_reg_715 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op52_load_state4_assign_proc : process(icmp_ln572_reg_680_pp0_iter2_reg, icmp_ln588_fu_335_p2)
    begin
                ap_predicate_op52_load_state4 <= ((icmp_ln588_fu_335_p2 = ap_const_lv1_0) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op69_load_state4_assign_proc : process(icmp_ln572_reg_680_pp0_iter2_reg, icmp_ln588_fu_335_p2, and_ln590_1_fu_393_p2)
    begin
                ap_predicate_op69_load_state4 <= ((ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op99_load_state4_assign_proc : process(icmp_ln572_reg_680_pp0_iter2_reg, icmp_ln588_fu_335_p2, and_ln590_1_fu_393_p2)
    begin
                ap_predicate_op99_load_state4 <= ((ap_const_lv1_1 = and_ln590_1_fu_393_p2) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_8_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_8 <= ap_const_lv32_0;
        else 
            ap_sig_allocacmp_i_8 <= i_fu_98;
        end if; 
    end process;


    ap_sig_allocacmp_match_ch_load_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, ap_phi_mux_empty_phi_fu_208_p10, match_ch_fu_94)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_match_ch_load <= ap_phi_mux_empty_phi_fu_208_p10;
        else 
            ap_sig_allocacmp_match_ch_load <= match_ch_fu_94;
        end if; 
    end process;


    bestMatchStream8_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, bestMatchStream8_empty_n, icmp_ln572_reg_680, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln572_reg_680 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bestMatchStream8_blk_n <= bestMatchStream8_empty_n;
        else 
            bestMatchStream8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bestMatchStream8_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln572_reg_680, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln572_reg_680 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bestMatchStream8_read <= ap_const_logic_1;
        else 
            bestMatchStream8_read <= ap_const_logic_0;
        end if; 
    end process;

    boostFlag_fu_308_p2 <= "1" when (tmp_fu_298_p4 = ap_const_lv2_0) else "0";

    boosterStream9_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, boosterStream9_full_n, ap_predicate_op112_write_state5, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op112_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            boosterStream9_blk_n <= boosterStream9_full_n;
        else 
            boosterStream9_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    boosterStream9_din <= p_Val2_s_fu_102;

    boosterStream9_write_assign_proc : process(ap_enable_reg_pp0_iter4, ap_predicate_op112_write_state5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op112_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            boosterStream9_write <= ap_const_logic_1;
        else 
            boosterStream9_write <= ap_const_logic_0;
        end if; 
    end process;

    i_9_fu_263_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_8) + unsigned(ap_const_lv32_1));
    icmp_ln572_fu_257_p2 <= "1" when (ap_sig_allocacmp_i_8 = sub) else "0";
    icmp_ln588_fu_335_p2 <= "1" when (skip_len_fu_90 = ap_const_lv16_0) else "0";
    icmp_ln590_1_fu_382_p2 <= "1" when (tCh_reg_691_pp0_iter2_reg = ap_sig_allocacmp_match_ch_load) else "0";
    icmp_ln590_fu_376_p2 <= "1" when (tmp_47_fu_366_p4 = ap_const_lv26_0) else "0";
    icmp_ln600_fu_413_p2 <= "1" when (tLen_reg_697_pp0_iter2_reg = ap_const_lv8_0) else "0";
    local_mem_address0 <= zext_ln585_fu_317_p1(14 - 1 downto 0);

    local_mem_address1_assign_proc : process(icmp_ln588_fu_335_p2, and_ln590_1_fu_393_p2, zext_ln612_fu_347_p1, zext_ln612_2_fu_418_p1, zext_ln612_1_fu_532_p1, ap_condition_313)
    begin
        if ((ap_const_boolean_1 = ap_condition_313)) then
            if (((ap_const_lv1_1 = and_ln590_1_fu_393_p2) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1))) then 
                local_mem_address1 <= zext_ln612_1_fu_532_p1(14 - 1 downto 0);
            elsif (((ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1))) then 
                local_mem_address1 <= zext_ln612_2_fu_418_p1(14 - 1 downto 0);
            elsif ((icmp_ln588_fu_335_p2 = ap_const_lv1_0)) then 
                local_mem_address1 <= zext_ln612_fu_347_p1(14 - 1 downto 0);
            else 
                local_mem_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            local_mem_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    local_mem_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            local_mem_ce0 <= ap_const_logic_1;
        else 
            local_mem_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_mem_ce1_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, icmp_ln572_reg_680_pp0_iter2_reg, icmp_ln588_fu_335_p2, and_ln590_1_fu_393_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_0) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln590_1_fu_393_p2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln588_fu_335_p2 = ap_const_lv1_1) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_0)))) then 
            local_mem_ce1 <= ap_const_logic_1;
        else 
            local_mem_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_mem_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln572_reg_680_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln572_reg_680_pp0_iter1_reg = ap_const_lv1_0))) then 
            local_mem_we0 <= ap_const_logic_1;
        else 
            local_mem_we0 <= ap_const_logic_0;
        end if; 
    end process;

    match_len_3_fu_514_p2 <= std_logic_vector(unsigned(match_len_fu_110) + unsigned(ap_const_lv32_1));
    match_loc_1_fu_520_p2 <= std_logic_vector(unsigned(match_loc_fu_114) + unsigned(ap_const_lv32_1));
    match_loc_2_fu_399_p2 <= std_logic_vector(unsigned(i_8_reg_673_pp0_iter2_reg) - unsigned(zext_ln579_fu_332_p1));
    outFlag_fu_408_p2 <= "0" when (i_8_reg_673_pp0_iter2_reg = ap_const_lv32_0) else "1";
    outValue_V_11_out <= p_Val2_s_fu_102;

    outValue_V_11_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln572_reg_680_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln572_reg_680_pp0_iter2_reg = ap_const_lv1_1))) then 
            outValue_V_11_out_ap_vld <= ap_const_logic_1;
        else 
            outValue_V_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_582_p5 <= (p_Val2_s_fu_102(31 downto 16) & zext_ln392_fu_578_p1 & p_Val2_s_fu_102(7 downto 0));
        sext_ln174_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_skip_len_481_phi_fu_198_p4),16));

        sext_ln565_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(skip_len_3_fu_432_p3),16));

    skip_len_1_fu_341_p2 <= std_logic_vector(unsigned(skip_len_fu_90) + unsigned(ap_const_lv16_FFFF));
    skip_len_2_fu_426_p2 <= std_logic_vector(unsigned(zext_ln606_fu_423_p1) + unsigned(ap_const_lv9_1FF));
    skip_len_3_fu_432_p3 <= 
        ap_const_lv9_0 when (boostFlag_reg_708_pp0_iter2_reg(0) = '1') else 
        skip_len_2_fu_426_p2;
    tCh_fu_274_p1 <= bestMatchStream8_dout(8 - 1 downto 0);
    tmp_47_fu_366_p4 <= match_len_fu_110(31 downto 6);
    tmp_fu_298_p4 <= bestMatchStream8_dout(31 downto 30);
    trunc_ln561_fu_404_p1 <= match_loc_2_fu_399_p2(14 - 1 downto 0);
    trunc_ln572_1_fu_314_p1 <= i_8_reg_673_pp0_iter1_reg(14 - 1 downto 0);
    trunc_ln572_fu_328_p1 <= match_loc_fu_114(14 - 1 downto 0);
    trunc_ln591_fu_510_p1 <= match_len_fu_110(6 - 1 downto 0);
    zext_ln392_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln392_fu_572_p2),8));
    zext_ln579_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tOffset_reg_703_pp0_iter2_reg),32));
    zext_ln585_fu_317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln572_1_fu_314_p1),64));
    zext_ln591_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln591_reg_741),7));
    zext_ln606_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tLen_reg_697_pp0_iter2_reg),9));
    zext_ln612_1_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln561_fu_526_p2),64));
    zext_ln612_2_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln561_fu_404_p1),64));
    zext_ln612_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln572_fu_328_p1),64));
end behav;
